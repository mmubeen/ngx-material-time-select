var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/modules/MatMomentTimeModule.html",[0,0.773,1,1.659]],["body/modules/MatMomentTimeModule.html",[0,1.154,1,2.898,2,0.651,3,0.651,4,0.547,5,0.449,6,3.394,7,3.394,8,0.721,9,2.898,10,0.651,11,3.357,12,3.971,13,0.762,14,1.533,15,0.574,16,2.226,17,1.965,18,1.965,19,3.971,20,1.737,21,3.971,22,1.432,23,0.048,24,2.869,25,2.164,26,2.869,27,0.547,28,0.188,29,0.042,30,0.042]],["title/modules/MatNativeTimeModule.html",[0,0.773,31,1.659]],["body/modules/MatNativeTimeModule.html",[0,1.154,2,0.651,3,0.651,4,0.547,5,0.449,7,3.394,8,0.721,9,2.898,10,0.651,11,3.357,12,3.971,13,0.762,14,1.533,15,0.574,16,2.226,17,1.965,18,1.965,22,1.432,23,0.048,24,2.869,25,2.164,26,2.869,27,0.547,28,0.188,29,0.042,30,0.042,31,2.898,32,3.394,33,4.904,34,3.357,35,3.971]],["title/interfaces/MatTimeFormats.html",[36,1.275,37,1.449]],["body/interfaces/MatTimeFormats.html",[2,0.651,3,0.651,4,0.547,5,0.449,8,0.547,10,0.651,15,0.449,17,1.68,18,1.68,23,0.049,27,0.639,29,0.042,30,0.042,36,2.226,37,2.531,38,0.651,39,3.394,40,0.882,41,1.533,42,2.148,43,3.167,44,4.34,45,1.336,46,2.477,47,2.898,48,3.394,49,1.154,50,1.484,51,2.477]],["title/classes/MatTimeSelectContentBase.html",[28,0.126,52,1.922]],["body/classes/MatTimeSelectContentBase.html",[2,0.214,3,0.214,4,0.179,5,0.302,8,0.639,10,0.214,13,0.25,14,0.881,15,0.607,16,0.625,20,1.574,22,0.776,23,0.05,25,0.71,27,0.546,28,0.146,29,0.019,30,0.019,36,0.625,38,0.437,40,0.29,41,0.698,45,0.68,46,1.319,49,1.363,50,1.669,51,0.813,52,1.928,53,0.71,54,1.114,55,1.278,56,1.838,57,0.71,58,1.114,59,1.824,60,0.894,61,1.376,62,0.551,63,0.551,64,1.107,65,1.376,66,0.551,67,0.464,68,1.807,69,2.374,70,0.551,71,0.783,72,2.28,73,1.586,74,1.807,75,1.152,76,1.319,77,1.807,78,1.114,79,1.807,80,0.551,81,0.813,82,0.813,83,1.807,84,1.114,85,0.551,86,0.551,87,1.528,88,1.807,89,0.942,90,2.074,91,2.28,92,1.807,93,2.28,94,3.089,95,0.942,96,2.28,97,1.807,98,0.942,99,2.28,100,1.807,101,1.114,102,2.438,103,1.152,104,1.928,105,1.838,106,1.152,107,0.551,108,1.114,109,1.114,110,1.114,111,1.928,112,1.928,113,0.942,114,0.942,115,1.019,116,0.942,117,0.79,118,0.71,119,0.997,120,0.942,121,0.487,122,1.849,123,0.487,124,0.682,125,0.813,126,0.942,127,1.928,128,0.813,129,0.894,130,1.528,131,0.43,132,1.319,133,1.664,134,1.969,135,1.528,136,0.71,137,1.528,138,0.487,139,1.822,140,1.528,141,0.942,142,1.528,143,1.528,144,1.897,145,1.152,146,0.942,147,1.653,148,1.114,149,0.813,150,0.942,151,0.813,152,1.928,153,2.865,154,1.298,155,2.739,156,2.28,157,2.28,158,0.813,159,1.528,160,1.319,161,0.942,162,2.473,163,2.294,164,0.487,165,1.261,166,0.551,167,1.114,168,0.551,169,1.114,170,0.625,171,1.114,172,0.551,173,0.551,174,0.551,175,0.551,176,1.013,177,0.71,178,0.698,179,1.914,180,1.114,181,1.298,182,1.672,183,1.838,184,1.298,185,0.813,186,1.664,187,1.114,188,1.114,189,1.114,190,0.625,191,1.013,192,2.16,193,2.28,194,1.528,195,3.389,196,2.28,197,1.114,198,1.114,199,1.114,200,0.942,201,0.813,202,0.942,203,0.942,204,1.114,205,0.379,206,1.278,207,2.28,208,1.114,209,1.114,210,1.114,211,1.114,212,0.813,213,1.319,214,1.114,215,1.114,216,1.807,217,2.624,218,1.807,219,1.114,220,1.114,221,1.114,222,1.114,223,1.114,224,1.807,225,1.807,226,0.942,227,1.114,228,0.942,229,0.942,230,1.114,231,1.114,232,0.942,233,1.114,234,0.71,235,1.807,236,1.114,237,1.768,238,1.807,239,1.114,240,1.107,241,1.9,242,1.781,243,2.28,244,1.114,245,1.114,246,2.28,247,1.423,248,1.807,249,1.114,250,1.114,251,1.114,252,1.319,253,1.114,254,1.471,255,1.114,256,1.807,257,1.114,258,1.114,259,1.114,260,1.152,261,1.114,262,1.471,263,1.114,264,1.114,265,1.114,266,1.114,267,2.438,268,1.928,269,1.114,270,0.942,271,1.114,272,1.807,273,1.114,274,1.114,275,1.114,276,0.942,277,1.114,278,1.114,279,2.28,280,1.807,281,1.114,282,1.114,283,1.114,284,1.838,285,1.013,286,1.114,287,0.71,288,1.114,289,1.114,290,0.551,291,1.114,292,0.813,293,1.807,294,1.664,295,0.942,296,1.114,297,1.114,298,1.807,299,0.71,300,1.114,301,1.114,302,1.114,303,1.114,304,0.813,305,1.114,306,0.71,307,1.114,308,1.114,309,1.114,310,1.114,311,2.865,312,1.114,313,1.114,314,1.114,315,1.807,316,3.502,317,1.114,318,1.114,319,0.942,320,0.813,321,1.807,322,1.114,323,1.152,324,1.114,325,0.615,326,0.942,327,1.351,328,1.298,329,1.114,330,0.551,331,0.551,332,0.942,333,1.319,334,0.813,335,3.089,336,1.114,337,1.114,338,0.813,339,0.942,340,0.942,341,1.114,342,1.114,343,0.625,344,1.114,345,1.114,346,1.114,347,1.114,348,1.114,349,1.114,350,1.114,351,1.114,352,1.807,353,0.71,354,1.807,355,1.114,356,0.942,357,2.624,358,1.114,359,2.28,360,1.152,361,1.114,362,0.942,363,1.664,364,1.114,365,0.942,366,1.114,367,1.807,368,1.114,369,1.114,370,1.319,371,0.71,372,1.114,373,1.114,374,0.551,375,1.114,376,1.114,377,2.28,378,1.114,379,1.114,380,1.528,381,1.114,382,1.807,383,1.807,384,1.807,385,1.114,386,1.114,387,1.807,388,1.114,389,1.114,390,1.114,391,0.71,392,0.698,393,1.114,394,1.114,395,1.114,396,1.807,397,1.114,398,1.319,399,1.114,400,1.114,401,1.114,402,1.319,403,1.114,404,1.114,405,1.807,406,0.813,407,0.942,408,1.114,409,1.114,410,1.114,411,0.71,412,1.114,413,1.319,414,0.813,415,1.114,416,0.942,417,1.114,418,1.114,419,0.942,420,1.114,421,1.114,422,1.128,423,1.114,424,1.114,425,1.114,426,1.114,427,1.114,428,1.114,429,1.114,430,1.528,431,1.114,432,0.942,433,1.114,434,1.114,435,1.664,436,1.114,437,1.114,438,1.114,439,1.114,440,1.807,441,1.114,442,1.114,443,1.114,444,1.114,445,1.114,446,1.114,447,0.942,448,1.114,449,0.379,450,1.114,451,1.114,452,1.114,453,1.114,454,0.942,455,1.114,456,1.114,457,0.942,458,1.152,459,1.114,460,1.528,461,0.942,462,0.813,463,1.114,464,1.114,465,1.114,466,1.114,467,1.114,468,1.114,469,1.114,470,1.114,471,2.624,472,1.298,473,2.624,474,1.914,475,2.624,476,2.624,477,2.218,478,2.218,479,1.528,480,1.152,481,0.625,482,0.942,483,0.71,484,0.942,485,0.942,486,0.942,487,0.942,488,0.942,489,1.114,490,1.114,491,1.114,492,1.114]],["title/interfaces/MatTimeSelectData.html",[36,1.275,152,1.922]],["body/interfaces/MatTimeSelectData.html",[2,0.213,3,0.213,4,0.179,5,0.147,8,0.638,10,0.213,13,0.249,14,0.878,15,0.606,16,0.622,20,1.572,22,0.774,23,0.05,25,0.708,27,0.545,28,0.126,29,0.019,30,0.019,36,1.01,38,0.213,40,0.289,41,0.696,45,0.859,46,1.315,49,1.362,50,1.668,51,0.81,52,1.524,53,0.708,55,0.622,56,0.708,59,1.275,64,1.316,66,0.549,67,0.464,68,1.802,69,2.371,70,0.549,71,0.781,72,2.275,73,1.585,74,1.802,75,1.149,76,1.315,77,1.802,78,1.11,79,1.802,80,0.549,81,0.81,82,0.81,83,1.802,84,1.11,85,0.549,86,0.549,87,1.524,88,1.802,89,0.939,90,2.071,91,2.275,92,1.802,93,2.275,94,3.084,95,0.939,96,2.275,97,1.802,98,0.939,99,2.275,100,1.802,101,1.11,102,2.434,103,1.149,104,1.923,105,1.835,106,1.149,107,0.549,108,1.11,109,1.11,110,1.11,111,1.923,112,1.923,113,0.939,114,0.939,115,1.019,116,0.939,117,0.788,118,0.708,119,0.995,120,0.939,121,0.486,122,1.871,123,0.486,124,0.681,125,0.81,126,0.939,127,1.923,128,0.81,129,0.892,130,1.524,131,0.429,132,1.315,133,1.66,134,1.966,135,1.524,136,0.708,137,1.524,138,0.486,139,1.82,140,1.524,141,0.939,142,1.524,143,1.526,144,1.896,145,1.149,146,0.939,147,1.652,148,1.11,149,0.81,150,0.939,151,0.81,152,2.213,153,3.039,154,1.307,155,2.949,156,3.084,157,3.084,158,0.81,159,1.524,160,1.315,161,0.939,162,2.47,163,2.292,164,0.486,165,1.259,166,0.549,167,1.11,168,0.549,169,1.11,170,0.622,171,1.11,172,0.549,173,0.549,174,0.549,175,0.549,176,1.01,177,0.708,178,0.696,179,1.911,180,1.11,181,1.296,182,1.669,183,1.835,184,1.296,185,0.81,186,1.66,187,1.11,188,1.11,189,1.11,190,0.622,191,1.01,192,2.157,193,2.275,194,1.524,195,3.384,196,2.275,197,1.11,198,1.112,199,1.11,200,0.939,201,0.81,202,0.939,203,0.939,204,1.11,205,0.378,206,1.275,207,2.275,208,1.11,209,1.11,210,1.11,211,1.11,212,0.81,213,1.315,214,1.11,215,1.11,216,1.802,217,2.618,218,1.802,219,1.11,220,1.11,221,1.11,222,1.11,223,1.11,224,1.802,225,1.802,226,0.939,227,1.11,228,0.939,229,0.939,230,1.11,231,1.11,232,0.939,233,1.11,234,0.708,235,1.802,236,1.11,237,1.767,238,1.802,239,1.11,240,1.105,241,1.897,242,1.779,243,2.275,244,1.11,245,1.11,246,2.275,247,1.421,248,1.802,249,1.11,250,1.11,251,1.11,252,1.315,253,1.11,254,1.468,255,1.11,256,1.802,257,1.11,258,1.11,259,1.11,260,1.149,261,1.11,262,1.468,263,1.11,264,1.11,265,1.11,266,1.11,267,2.434,268,1.923,269,1.11,270,0.939,271,1.11,272,1.802,273,1.11,274,1.11,275,1.11,276,0.939,277,1.11,278,1.11,279,2.275,280,1.802,281,1.11,282,1.11,283,1.11,284,1.835,285,1.011,286,1.11,287,0.708,288,1.11,289,1.11,290,0.549,291,1.112,292,0.81,293,1.802,294,1.66,295,0.939,296,1.11,297,1.11,298,1.802,299,0.708,300,1.11,301,1.11,302,1.11,303,1.11,304,0.81,305,1.11,306,0.708,307,1.11,308,1.11,309,1.11,310,1.11,311,2.861,312,1.11,313,1.11,314,1.11,315,1.802,316,3.498,317,1.11,318,1.11,319,0.939,320,0.81,321,1.802,322,1.11,323,1.149,324,1.11,325,0.613,326,0.939,327,1.348,328,1.296,329,1.11,330,0.549,331,0.549,332,0.939,333,1.315,334,0.81,335,3.084,336,1.11,337,1.11,338,0.81,339,0.939,340,0.939,341,1.11,342,1.11,343,0.622,344,1.11,345,1.11,346,1.11,347,1.11,348,1.11,349,1.11,350,1.11,351,1.11,352,1.802,353,0.708,354,1.802,355,1.11,356,0.939,357,2.618,358,1.11,359,2.275,360,1.149,361,1.11,362,0.939,363,1.66,364,1.11,365,0.939,366,1.11,367,1.802,368,1.11,369,1.11,370,1.315,371,0.708,372,1.11,373,1.11,374,0.549,375,1.11,376,1.11,377,2.275,378,1.11,379,1.11,380,1.524,381,1.11,382,1.802,383,1.802,384,1.802,385,1.11,386,1.11,387,1.802,388,1.11,389,1.11,390,1.11,391,0.708,392,0.696,393,1.11,394,1.11,395,1.11,396,1.802,397,1.11,398,1.315,399,1.11,400,1.11,401,1.11,402,1.315,403,1.11,404,1.11,405,1.802,406,0.81,407,0.939,408,1.11,409,1.11,410,1.11,411,0.708,412,1.11,413,1.315,414,0.81,415,1.11,416,0.939,417,1.11,418,1.11,419,0.939,420,1.11,421,1.11,422,1.126,423,1.11,424,1.11,425,1.11,426,1.11,427,1.11,428,1.11,429,1.11,430,1.524,431,1.11,432,0.939,433,1.11,434,1.11,435,1.66,436,1.11,437,1.11,438,1.11,439,1.11,440,1.802,441,1.11,442,1.11,443,1.11,444,1.11,445,1.11,446,1.11,447,0.939,448,1.11,449,0.378,450,1.11,451,1.11,452,1.11,453,1.11,454,0.939,455,1.11,456,1.11,457,0.939,458,1.149,459,1.11,460,1.524,461,0.939,462,0.81,463,1.11,464,1.11,465,1.11,466,1.11,467,1.11,468,1.11,469,1.11,470,1.11,471,2.618,472,1.296,473,2.618,474,1.911,475,2.618,476,2.618,477,2.213,478,2.213,479,1.524,480,1.149,481,0.622,482,0.939,483,0.708,484,0.939,485,0.939,486,0.939,487,0.939,488,0.939,489,1.11,490,1.11,491,1.11,492,1.11]],["title/classes/MatTimeSelectInputEvent.html",[28,0.126,493,2.274]],["body/classes/MatTimeSelectInputEvent.html",[2,0.278,3,0.278,4,0.234,5,0.434,8,0.614,10,0.278,13,0.326,14,0.859,15,0.575,16,0.813,17,0.718,18,1.101,22,1.033,23,0.05,27,0.358,28,0.15,29,0.024,30,0.024,34,2.568,37,1.419,38,0.628,40,0.377,41,0.859,43,1.058,45,0.906,47,1.058,49,1.176,50,1.513,55,1.939,56,0.924,57,1.419,59,1.518,60,1.503,62,0.718,63,0.718,64,1.115,67,0.358,69,2.392,70,1.101,71,0.433,73,1.716,75,1.419,76,1.976,85,0.718,86,0.718,89,1.226,102,1.881,104,2.289,105,2.089,106,1.419,107,0.718,115,0.946,119,1.666,123,0.634,124,0.899,129,0.718,131,0.56,138,1.328,143,1.712,144,1.933,147,1.648,154,1.326,155,3.027,163,1.937,164,0.634,170,0.813,178,1.265,181,0.718,182,0.924,183,2.205,184,1.886,185,1.058,186,2.217,191,1.939,205,0.921,206,1.939,213,1.058,237,1.894,240,0.493,241,0.813,242,1.34,247,1.575,254,1.248,260,0.924,262,1.518,284,1.727,285,1.336,287,1.419,290,0.718,291,1.391,295,1.226,306,2.089,319,1.881,320,1.058,323,0.924,325,0.921,327,1.575,328,1.101,330,0.718,331,0.718,332,1.226,338,1.058,339,1.226,340,1.226,343,0.813,353,0.924,356,1.226,360,2.089,362,1.226,365,1.226,374,1.101,380,2.289,392,1.648,406,1.624,411,1.727,422,1.886,449,0.921,458,2.523,460,1.226,461,1.226,479,1.881,480,1.727,481,0.813,482,1.226,483,0.924,484,1.226,485,1.226,486,1.226,493,3.038,494,1.791,495,0.718,496,2.226,497,3.752,498,2.226,499,1.419,500,1.881,501,2.748,502,2.748,503,2.748,504,4.447,505,4.271,506,1.791,507,2.748,508,1.791,509,1.791,510,2.289,511,0.924,512,3.345,513,4.271,514,2.748,515,2.748,516,3.752,517,4.047,518,1.226,519,2.226,520,2.748,521,2.748,522,1.503,523,1.791,524,2.289,525,1.791,526,3.345,527,2.748,528,1.45,529,1.791,530,1.791,531,1.791,532,1.791,533,1.791,534,1.791,535,1.791,536,2.77,537,3.277,538,1.791,539,1.791,540,1.791,541,1.791,542,1.791,543,1.791,544,1.791,545,1.45,546,1.226,547,1.45,548,1.791,549,1.791,550,1.791,551,1.791,552,1.791,553,3.345,554,1.791,555,2.748,556,1.791,557,1.791,558,1.791,559,3.345,560,2.748,561,3.752,562,2.77,563,2.748,564,3.752,565,1.791,566,1.791,567,3.345,568,1.791,569,1.791,570,1.791,571,1.791,572,2.748,573,1.791,574,3.345,575,2.748,576,1.791,577,2.748,578,1.881,579,1.45,580,1.791,581,1.791,582,1.791,583,2.748,584,1.791,585,1.791,586,1.791,587,2.226,588,1.791,589,1.791,590,1.791,591,2.709,592,1.791,593,1.45,594,1.45,595,1.791,596,2.748,597,1.791,598,1.058,599,2.748,600,2.748,601,2.748,602,1.791,603,1.791,604,1.45,605,1.791,606,2.748,607,1.791,608,1.791,609,1.791,610,1.791,611,1.791,612,1.791,613,3.038,614,1.791,615,1.791,616,1.791,617,3.345,618,1.791,619,1.791,620,1.791,621,1.791,622,1.791,623,1.791,624,1.791,625,1.791,626,1.791,627,1.791,628,2.748,629,1.791,630,1.791,631,1.791,632,1.791,633,1.791,634,1.791,635,1.791,636,1.791,637,1.791,638,1.791,639,1.791,640,1.791,641,1.791,642,1.226,643,1.45,644,1.791,645,1.791,646,1.791,647,1.45,648,1.226,649,1.791,650,2.748,651,1.791,652,1.791,653,1.791,654,1.791,655,1.791,656,1.791,657,1.791]],["title/injectables/MatTimeSelectIntl.html",[71,0.678,117,0.994]],["body/injectables/MatTimeSelectIntl.html",[2,0.547,3,0.547,4,0.459,5,0.557,8,0.575,10,0.547,15,0.541,23,0.049,27,0.459,28,0.158,29,0.038,30,0.038,38,0.808,40,0.741,41,1.38,45,1.22,50,1.562,60,2.024,67,0.575,71,1.164,105,2.74,107,1.411,115,0.999,117,1.562,124,1.165,133,2.607,134,2.278,139,2.024,154,1.22,163,2.278,183,2.278,184,2.183,191,2.188,201,2.607,205,1.462,495,1.411,658,3.521,659,2.607,660,3.573,661,3.573,662,5.052,663,5.052,664,5.052,665,2.294,666,3.521,667,2.856,668,4.413,669,2.74,670,2.985,671,5.308,672,5.308,673,3.521,674,4.413,675,3.573,676,4.413,677,4.413,678,3.521,679,3.521,680,4.413]],["title/modules/MatTimeSelectModule.html",[0,0.773,681,1.659]],["body/modules/MatTimeSelectModule.html",[0,1.051,2,0.592,3,0.592,4,0.498,5,0.409,8,0.739,9,2.74,10,0.592,13,0.694,15,0.58,22,1.277,23,0.049,27,0.651,28,0.171,29,0.04,30,0.04,38,0.592,82,2.255,95,2.612,98,2.612,115,0.908,117,1.769,118,1.97,119,1.885,120,2.612,121,1.885,122,1.642,123,1.642,149,2.74,176,2.487,522,2.134,681,2.74,682,3.816,683,4.637,684,2.417,685,2.417,686,2.417,687,4.637,688,4.637,689,4.637,690,3.816,691,4.637,692,4.637,693,4.637,694,4.637,695,4.637,696,4.637,697,3.816,698,3.816]],["title/components/MatTimeSelectToggleComponent.html",[67,0.366,684,1.275]],["body/components/MatTimeSelectToggleComponent.html",[2,0.316,3,0.316,4,0.266,5,0.58,8,0.585,10,0.316,13,0.37,15,0.593,23,0.05,27,0.395,28,0.202,29,0.026,30,0.026,38,0.841,40,0.429,41,0.947,42,0.816,45,1.284,49,1.103,55,1.375,57,1.051,60,2.162,62,1.715,63,1.913,64,1.179,66,0.816,67,0.522,70,1.449,73,1.403,75,1.867,80,0.816,85,0.816,86,0.816,103,1.563,106,1.051,107,0.816,115,1.032,117,1.589,118,1.051,119,0.721,121,0.721,122,1.073,123,0.721,124,0.429,129,1.214,131,0.637,138,1.073,139,1.798,143,1.715,144,1.758,147,1.612,154,0.732,158,1.203,164,1.758,165,1.892,166,1.214,168,1.214,170,1.375,172,1.214,173,1.214,174,1.214,175,1.214,176,0.925,178,0.947,184,0.816,190,0.925,198,0.947,205,1.343,212,2.529,237,1.281,242,0.816,247,1.418,285,0.947,287,1.051,290,0.816,291,1.694,323,1.051,325,1.103,327,1.727,328,1.449,330,0.816,331,1.214,353,2.067,374,0.816,392,1.525,398,2.529,422,1.862,449,0.996,462,1.203,495,0.816,499,1.563,511,1.867,522,1.605,536,3.18,642,2.475,648,3.071,659,1.203,665,1.642,669,2.6,670,3.158,684,1.818,685,1.943,686,0.925,699,1.203,700,1.394,701,1.649,702,2.928,703,1.203,704,2.475,705,2.928,706,2.453,707,3.243,708,1.563,709,3.243,710,3.029,711,2.529,712,2.651,713,2.928,714,4.878,715,3.071,716,3.466,717,3.071,718,2.453,719,2.036,720,1.867,721,2.067,722,2.928,723,3.029,724,2.036,725,1.79,726,2.036,727,2.036,728,2.036,729,2.036,730,2.036,731,2.036,732,2.036,733,2.036,734,2.036,735,2.453,736,3.243,737,2.036,738,2.036,739,2.453,740,2.036,741,2.036,742,3.243,743,2.073,744,2.453,745,2.036,746,2.453,747,2.453,748,2.036,749,2.073,750,3.18,751,2.453,752,1.649,753,2.036,754,2.036,755,2.036,756,1.394,757,1.649,758,0.925,759,1.394,760,1.563,761,1.649,762,1.649,763,1.649,764,1.649,765,2.453,766,1.649,767,1.203,768,1.051,769,2.137,770,3.762,771,2.453,772,2.453,773,1.649,774,3.243,775,1.649,776,1.649,777,1.649,778,2.453,779,1.649,780,2.453,781,1.649,782,1.649,783,1.649,784,1.649,785,1.649,786,2.453,787,1.649,788,2.453,789,1.649,790,1.649,791,2.453,792,1.649,793,1.649,794,1.649,795,1.649,796,1.203,797,3.029,798,3.029,799,2.453,800,2.453,801,2.073,802,2.036,803,2.036,804,1.394,805,3.029,806,1.394,807,1.649,808,1.649,809,2.741,810,1.394,811,1.394,812,1.394,813,1.394,814,1.394,815,1.394,816,1.394]],["title/directives/MatTimeSelectToggleIconDirective.html",[449,0.773,685,1.275]],["body/directives/MatTimeSelectToggleIconDirective.html",[2,0.455,3,0.455,4,0.382,5,0.314,8,0.659,10,0.455,13,0.533,15,0.575,23,0.05,27,0.511,28,0.198,29,0.034,30,0.034,38,0.455,49,1.298,66,1.175,67,0.511,70,1.175,73,1.473,75,2.023,80,1.175,85,1.175,86,1.175,103,2.023,106,1.513,107,1.175,115,0.975,117,1.387,118,1.513,123,1.038,124,0.825,129,1.175,131,0.917,138,1.038,139,1.57,143,1.968,144,1.899,147,1.613,158,1.732,164,1.563,165,1.387,166,1.175,168,1.175,170,1.331,172,1.175,173,1.175,174,1.175,175,1.175,178,0.917,190,1.331,198,0.917,205,1.216,212,1.732,237,1.387,242,1.175,247,1.563,285,0.917,287,1.513,290,1.175,291,1.66,323,1.513,325,1.079,327,1.563,328,1.769,330,1.175,331,1.57,353,1.513,374,1.175,392,1.473,398,1.732,422,1.175,449,1.216,462,1.732,495,1.175,499,1.513,511,1.513,522,1.57,642,2.682,659,1.732,669,2.432,670,3.049,684,1.331,685,2.004,701,2.374,702,3.173,703,1.732,704,3.021,705,2.374,706,2.374,707,2.374,709,2.374,711,1.732,712,2.608,715,3.021,716,3.173,717,3.021,720,1.513,721,2.023,722,2.374,725,1.732,735,2.374,736,3.173,739,2.374,742,3.173,744,2.374,746,2.374,747,2.374,749,2.006,750,3.021,751,2.374,756,2.006,757,2.374,758,1.331,759,2.682,760,2.023,761,2.374,762,2.374,763,2.374,764,2.374,765,3.173,766,2.374,767,1.732,768,1.513,769,2.608,770,4.178,771,3.173,772,3.173,773,2.374,774,3.816,775,2.374,776,2.374,777,2.374,778,3.173,779,2.374,780,3.173,781,2.374,782,2.374,783,2.374,784,2.374,785,2.374,786,3.173,787,2.374,788,3.173,789,2.374,790,2.374,791,3.173,792,2.374,793,2.374,794,2.374,795,2.374,796,1.732]],["title/classes/MatTimeUnitOptionBase.html",[28,0.126,817,1.922]],["body/classes/MatTimeUnitOptionBase.html",[2,0.484,3,0.484,4,0.407,5,0.334,8,0.63,10,0.484,13,0.567,15,0.569,23,0.05,27,0.593,28,0.217,29,0.035,30,0.035,38,0.484,42,1.249,49,1.253,55,1.415,56,1.609,59,2.066,64,1.529,66,1.249,67,0.532,70,1.249,71,0.753,73,1.567,80,1.249,85,1.249,86,1.249,115,0.935,121,1.611,122,1.882,123,1.104,124,0.656,136,1.609,138,1.104,143,1.935,144,1.855,147,1.608,154,1.099,160,1.842,164,1.104,165,1.445,166,1.249,168,1.249,172,1.249,173,1.249,174,1.249,175,1.249,177,1.609,178,0.975,181,1.249,190,1.415,191,2.066,198,0.975,205,1.124,206,1.415,240,1.124,247,1.445,285,1.423,290,1.249,291,1.608,292,1.842,294,2.412,299,1.609,304,1.842,306,1.609,325,1.38,327,1.903,328,1.823,330,1.249,331,1.635,333,2.689,334,1.842,343,1.415,363,1.842,371,1.609,374,1.635,500,2.134,510,2.134,511,1.609,562,2.134,578,2.134,598,1.842,667,1.609,686,1.415,711,1.842,712,1.842,720,1.609,721,2.107,725,2.412,758,1.415,767,1.842,768,1.609,769,2.412,796,2.412,817,3.115,818,2.134,819,2.794,820,3.305,821,2.524,822,2.794,823,2.134,824,2.134,825,2.524,826,2.524,827,2.524,828,2.524,829,2.524,830,2.524,831,2.524,832,2.524,833,2.524,834,2.524,835,2.524,836,2.134,837,2.524,838,2.524,839,2.524,840,2.524,841,2.524,842,2.524,843,2.524,844,2.524,845,2.524,846,2.524,847,2.524,848,2.524,849,2.524,850,2.524]],["title/components/MatTimeUnitOptionComponent.html",[67,0.366,686,1.275]],["body/components/MatTimeUnitOptionComponent.html",[2,0.31,3,0.31,4,0.26,5,0.574,8,0.517,10,0.31,13,0.363,15,0.594,23,0.05,27,0.466,28,0.2,29,0.026,30,0.026,38,0.831,40,0.42,41,0.933,42,1.784,45,1.193,49,0.984,55,1.622,56,1.54,57,1.03,58,1.616,59,2.095,60,2.135,62,1.432,63,1.784,64,1.547,66,0.799,67,0.517,70,1.432,71,0.482,73,1.443,80,0.799,85,0.799,86,0.799,90,1.03,115,0.942,119,0.706,121,1.68,122,2.001,123,0.706,124,0.628,131,1.517,136,1.54,138,1.056,143,1.589,144,1.634,147,1.588,154,1.211,160,1.179,162,2.343,164,1.718,165,1.896,166,1.195,168,1.195,172,1.195,173,1.195,174,1.195,175,1.195,176,0.906,177,1.54,178,0.933,179,1.179,181,1.195,190,0.906,191,1.622,198,0.933,205,1.169,206,0.906,240,1.092,247,1.056,285,1.484,290,0.799,291,1.62,292,1.179,294,1.763,299,2.046,304,1.763,306,1.54,325,1.36,327,1.934,328,1.432,330,0.799,331,1.195,333,2.111,334,1.179,343,0.906,363,1.179,371,1.54,374,1.195,392,1.24,402,1.179,411,1.844,422,1.432,430,2.042,447,1.366,449,0.984,474,1.179,477,1.366,495,0.799,496,1.616,499,1.03,500,2.905,510,1.366,511,1.844,522,0.799,546,1.366,562,1.366,578,1.366,598,2.508,665,1.8,667,1.54,669,1.03,684,0.906,685,0.906,686,1.8,699,1.179,700,2.042,703,1.179,708,1.54,711,2.111,712,1.179,713,2.893,718,2.415,720,1.844,721,2.046,725,2.727,743,2.042,752,1.616,758,0.906,759,1.366,760,1.03,767,1.179,768,1.844,769,1.763,796,1.763,801,2.042,804,1.366,806,2.042,807,1.616,809,2.714,810,1.366,811,1.366,812,1.366,813,1.366,814,1.366,815,1.366,816,1.366,817,2.042,818,1.366,819,2.445,820,2.415,821,1.616,822,2.445,823,1.366,824,2.042,825,2.415,826,2.893,827,2.415,828,3.21,829,1.616,830,1.616,831,1.616,832,1.616,833,1.616,834,3.606,835,1.616,836,2.714,837,1.616,838,3.21,839,1.616,840,1.616,841,1.616,842,2.893,843,2.415,844,3.21,845,3.21,846,1.616,847,1.616,848,1.616,849,1.616,850,1.616,851,3.572,852,3.572,853,2.983,854,1.995,855,1.995,856,1.995,857,1.995,858,1.995,859,1.995,860,1.995,861,1.995,862,1.995,863,1.995,864,1.995,865,1.995,866,1.995,867,1.995,868,1.995,869,1.995,870,1.995,871,1.995,872,1.995,873,2.983,874,1.995,875,1.995,876,1.995,877,1.995,878,1.995,879,1.995,880,1.995,881,2.415,882,3.964,883,3.572,884,1.995,885,1.995,886,1.995,887,3.21,888,1.995,889,2.415,890,1.616,891,2.415,892,3.964,893,3.572,894,2.983,895,1.995,896,1.995,897,2.415,898,2.445,899,1.995,900,1.995,901,1.616,902,1.995,903,3.964,904,1.616,905,1.995,906,1.995,907,2.893,908,1.995,909,1.366,910,2.983,911,2.983,912,1.995,913,1.616,914,1.616,915,1.616,916,1.995,917,1.995,918,1.995,919,1.995,920,1.995,921,1.995,922,1.995,923,1.995,924,1.995]],["title/components/MatTimeUnitSelectComponent.html",[67,0.366,121,0.994]],["body/components/MatTimeUnitSelectComponent.html",[2,0.338,3,0.338,4,0.284,5,0.575,8,0.539,10,0.338,14,1.293,15,0.598,16,0.987,17,0.871,18,0.871,20,1.126,23,0.05,27,0.284,28,0.098,29,0.027,30,0.027,37,2.134,38,0.833,40,0.458,41,0.994,42,1.274,44,2.574,45,1.249,49,1.47,50,0.77,53,1.123,57,1.123,59,1.877,60,2.138,62,1.506,63,1.841,64,1.499,66,0.871,67,0.599,69,2.443,71,0.525,73,1.484,76,2.715,80,0.871,111,2.176,112,2.176,113,1.489,115,1.016,119,0.77,121,1.464,122,2.008,124,0.669,131,0.994,144,1.331,147,1.521,153,2.176,154,1.342,164,1.757,165,1.786,166,1.274,168,1.274,170,1.443,172,1.274,173,1.274,174,1.274,175,1.274,176,0.987,178,0.994,181,1.274,182,1.641,183,1.641,184,1.274,185,2.221,192,1.123,198,1.658,205,0.599,206,0.987,213,2.221,226,1.489,228,1.489,229,1.489,232,1.489,234,1.123,237,1.557,240,0.876,241,1.706,242,0.871,254,1.997,260,1.641,262,1.997,267,3.248,270,2.83,276,3.248,285,1.175,291,0.68,299,1.641,325,0.599,343,0.987,370,1.879,391,1.641,392,0.68,413,2.715,422,1.762,449,0.876,458,1.123,472,0.871,474,1.285,478,1.489,481,0.987,495,1.506,522,0.871,587,1.761,591,1.761,593,1.761,594,3.043,665,0.987,667,1.123,684,0.987,685,0.987,686,0.987,699,1.285,700,1.489,703,1.285,708,1.641,720,1.641,721,2.134,743,1.489,758,0.987,760,1.123,768,1.123,801,1.489,804,1.489,806,2.572,808,1.761,809,2.83,810,1.489,811,1.489,812,1.489,813,1.489,814,1.489,815,1.489,816,1.489,819,2.572,836,2.83,881,3.043,887,3.043,889,1.761,890,1.761,891,1.761,913,1.761,914,1.761,915,1.761,925,3.758,926,3.758,927,3.179,928,3.758,929,3.758,930,3.179,931,3.758,932,2.175,933,3.179,934,2.175,935,2.175,936,2.175,937,2.175,938,3.179,939,2.574,940,2.574,941,2.574,942,2.175,943,2.175,944,2.175,945,3.758,946,2.175,947,2.175,948,3.179,949,2.175,950,4.134,951,5.043,952,2.175,953,2.175,954,2.175,955,2.175,956,2.175,957,3.179,958,3.179,959,2.175,960,2.175,961,2.175,962,2.175,963,2.175,964,2.175,965,2.175,966,2.175,967,2.175,968,2.175,969,2.175,970,2.175,971,2.175,972,2.175,973,2.175,974,2.175,975,2.175,976,1.489,977,2.175,978,2.175,979,2.175,980,2.175,981,3.179,982,2.175,983,3.179,984,2.175,985,3.179,986,2.175,987,2.175,988,2.175,989,2.175,990,2.175,991,1.761,992,3.179,993,3.179,994,3.179,995,2.175,996,2.175,997,2.175]],["title/classes/TimeAdapter.html",[14,0.878,28,0.126]],["body/classes/TimeAdapter.html",[2,0.327,3,0.327,4,0.275,5,0.536,8,0.405,11,2.527,13,0.384,14,0.972,15,0.569,20,1.609,23,0.05,27,0.275,28,0.14,29,0.027,30,0.027,38,0.777,40,0.989,45,1.165,49,0.856,50,1.101,60,1.973,62,1.932,63,1.932,64,1.328,67,0.683,131,1.723,147,1.713,154,0.984,155,3.337,177,1.605,181,1.633,182,1.605,192,2.741,198,1.702,200,2.789,202,2.789,203,3.301,234,2.772,237,1.919,240,1.328,241,2.332,242,2.098,252,2.685,254,2.377,260,1.605,262,2.356,291,0.972,325,0.856,360,2.985,391,2.346,414,1.837,435,1.837,472,1.633,480,2.346,481,2.063,483,1.605,495,1.973,708,1.605,909,2.128,991,4.239,998,1.708,999,3.109,1000,3.109,1001,3.109,1002,3.109,1003,3.109,1004,5.397,1005,3.109,1006,3.109,1007,3.109,1008,3.109,1009,4.074,1010,3.109,1011,3.109,1012,3.109,1013,2.109,1014,4.074,1015,3.109,1016,4.344,1017,4.074,1018,4.074,1019,3.109,1020,5.593,1021,2.109,1022,4.544,1023,3.109,1024,3.109,1025,3.109,1026,2.109,1027,3.109,1028,3.109,1029,4.544,1030,3.109,1031,4.074,1032,3.109,1033,2.109,1034,4.544,1035,3.109,1036,3.109,1037,2.109,1038,3.109,1039,2.109,1040,2.109,1041,3.109,1042,2.109,1043,3.109,1044,3.109,1045,2.109,1046,3.299,1047,2.109,1048,2.109,1049,2.109,1050,2.109,1051,2.109,1052,2.109,1053,2.109,1054,3.692,1055,2.109,1056,3.692,1057,2.109,1058,2.109,1059,2.109]],["title/dependencies.html",[1060,2.357,1061,2.307]],["body/dependencies.html",[10,0.652,13,0.763,20,1.486,23,0.049,29,0.042,30,0.042,82,2.48,107,1.682,518,2.873,1061,2.873,1062,4.197,1063,5.622,1064,4.197,1065,4.908,1066,4.197,1067,4.908,1068,3.974,1069,4.197,1070,4.197,1071,4.197,1072,4.197,1073,4.197,1074,4.197,1075,4.197,1076,4.197,1077,4.197,1078,4.197,1079,4.197,1080,4.197,1081,4.197]],["title/miscellaneous/functions.html",[145,1.74,1082,1.393]],["body/miscellaneous/functions.html",[5,0.535,22,1.19,23,0.046,29,0.043,30,0.043,38,0.775,40,0.909,53,2.576,62,2,63,2,64,1.375,90,2.23,114,3.416,115,0.908,145,2.23,146,2.957,151,2.949,1082,2.553,1083,4.042,1084,4.991,1085,4.32]],["title/index.html",[40,0.496,240,0.649,472,0.945]],["body/index.html",[0,1.234,1,2.131,8,0.656,9,2.525,13,0.369,14,1.638,15,0.611,17,1.795,18,2.042,19,1.642,20,1.069,22,1.453,23,0.048,24,2.066,26,2.066,27,0.584,28,0.214,29,0.026,30,0.026,31,2.525,34,2.735,41,1.551,42,1.601,43,2.525,45,1.152,47,1.784,54,3.236,64,0.558,67,0.394,71,0.729,73,1.706,81,1.198,87,1.388,115,1.038,116,3.335,117,1.415,119,0.718,124,1.118,125,2.131,128,1.198,129,0.812,132,1.198,134,1.047,139,1.712,145,1.047,154,1.082,162,1.198,163,2.063,165,1.277,178,1.523,179,2.131,184,1.601,186,1.198,194,2.469,201,1.198,205,1.177,240,0.558,241,0.92,247,1.643,252,2.131,254,1.371,262,1.371,268,2.735,284,2.206,285,1.128,311,2.469,320,1.784,326,2.469,327,1.586,338,1.198,360,2.63,370,2.131,371,1.558,391,1.047,392,1.336,402,1.198,406,2.131,411,2.461,413,2.974,414,2.879,416,2.469,419,1.388,432,1.388,435,1.784,449,1.101,454,1.388,457,1.388,458,1.862,472,0.812,480,2.206,481,0.92,487,2.066,488,1.388,498,1.642,499,1.862,518,1.388,519,1.642,522,1.712,524,2.066,528,1.642,536,1.388,537,1.642,545,2.445,546,2.066,547,1.642,579,1.642,598,2.525,604,1.642,613,2.445,643,1.642,647,1.642,648,1.388,659,1.198,660,1.642,661,2.445,665,1.371,667,2.063,669,1.558,670,2.647,675,2.445,681,2.647,699,1.198,704,1.388,708,1.558,715,1.388,717,1.388,749,2.735,750,1.388,756,2.469,758,0.92,760,1.047,799,1.642,800,1.642,824,1.388,897,2.445,898,2.735,904,3.236,907,1.642,909,1.388,939,2.921,940,2.445,941,1.642,1046,1.642,1061,2.735,1068,1.642,1086,3.607,1087,4.872,1088,2.027,1089,4.479,1090,2.027,1091,2.735,1092,2.027,1093,3.607,1094,3.996,1095,3.996,1096,2.027,1097,2.027,1098,2.027,1099,2.027,1100,3.607,1101,3.019,1102,3.019,1103,2.027,1104,2.027,1105,4.273,1106,2.027,1107,2.027,1108,2.027,1109,2.027,1110,2.027,1111,2.027,1112,2.027,1113,2.027,1114,2.027,1115,4.273,1116,3.019,1117,3.019,1118,1.642,1119,2.027,1120,3.607,1121,2.027,1122,2.027,1123,3.019,1124,3.607,1125,2.027,1126,2.027,1127,2.027,1128,2.027,1129,2.027,1130,2.027,1131,2.027,1132,2.027,1133,3.019,1134,3.019,1135,2.027,1136,2.027,1137,3.607,1138,3.996,1139,2.027,1140,4.768,1141,2.027,1142,3.019,1143,2.027,1144,2.027,1145,2.027,1146,2.027,1147,2.027,1148,2.027,1149,2.027,1150,3.019,1151,3.019,1152,2.027,1153,3.019,1154,2.027,1155,2.027,1156,2.027,1157,2.027,1158,2.027,1159,2.027,1160,2.027,1161,2.027,1162,2.027,1163,2.027,1164,2.027,1165,2.027,1166,3.607,1167,2.027,1168,2.027,1169,2.027,1170,4.273,1171,2.027,1172,2.027,1173,2.027,1174,2.027,1175,2.027,1176,2.027,1177,2.027,1178,3.607,1179,3.607,1180,3.019,1181,2.027,1182,2.027,1183,3.019,1184,2.027,1185,3.607,1186,2.027,1187,2.027,1188,2.027,1189,2.027,1190,2.027,1191,2.027,1192,2.027,1193,2.027,1194,2.027,1195,2.027,1196,2.027,1197,2.027,1198,2.027,1199,2.027,1200,2.027,1201,2.027,1202,3.996,1203,2.027,1204,2.027,1205,2.027,1206,3.607,1207,2.027,1208,3.607,1209,2.027,1210,2.027,1211,3.607,1212,3.019,1213,2.027,1214,2.027,1215,2.027,1216,2.027,1217,2.027,1218,2.027,1219,2.027,1220,2.027,1221,3.019,1222,2.027,1223,3.996,1224,2.027,1225,2.027,1226,2.027,1227,2.027,1228,2.027,1229,3.019,1230,3.607,1231,1.642,1232,1.642,1233,2.027,1234,2.027,1235,2.027,1236,3.019,1237,2.027,1238,2.027,1239,2.027,1240,1.642,1241,2.027,1242,2.027,1243,2.027,1244,2.027,1245,2.027,1246,1.642,1247,1.642,1248,1.642,1249,1.642,1250,1.642,1251,2.027,1252,2.027,1253,1.642]],["title/license.html",[240,0.649,472,0.945,1091,1.614]],["body/license.html",[4,0.52,22,1.099,23,0.041,29,0.041,30,0.041,81,2.358,103,2.06,105,2.06,124,1.003,284,2.06,325,1.099,392,1.248,407,2.731,483,2.06,524,2.731,898,3.486,901,3.231,1091,2.731,1118,3.231,1231,3.231,1232,3.231,1240,3.231,1246,4.124,1247,3.231,1248,3.231,1249,3.231,1250,3.231,1253,3.231,1254,4.763,1255,3.99,1256,3.99,1257,3.99,1258,3.99,1259,4.763,1260,3.99,1261,5.274,1262,5.609,1263,4.763,1264,5.092,1265,3.99,1266,4.763,1267,3.99,1268,3.99,1269,3.99,1270,3.99,1271,3.99,1272,3.99,1273,3.99,1274,3.99,1275,3.99,1276,4.763,1277,4.763,1278,3.99,1279,3.99,1280,4.763,1281,3.99,1282,3.99,1283,3.99,1284,3.99,1285,3.99,1286,3.99,1287,3.99,1288,3.99,1289,3.99,1290,3.99,1291,3.99,1292,3.99,1293,3.99,1294,3.99,1295,3.99,1296,3.99]],["title/modules.html",[0,1.048]],["body/modules.html",[0,1.229,1,2.637,23,0.044,29,0.044,30,0.044,31,2.637,681,2.637,1297,5.333]],["title/overview.html",[1298,3.083]],["body/overview.html",[0,1.219,23,0.043,28,0.199,29,0.043,30,0.043,36,2.01,67,0.577,71,1.069,449,1.219,976,3.464,1298,3.585,1299,5.061,1300,4.427,1301,4.427]],["title/miscellaneous/variables.html",[1082,1.393,1302,2.729]],["body/miscellaneous/variables.html",[5,0.574,6,3.516,15,0.602,17,1.908,18,1.375,20,1.867,21,3.857,22,1.312,23,0.049,25,1.771,29,0.037,30,0.037,32,3.516,35,3.857,37,2.584,38,0.739,39,4.271,40,0.722,42,1.74,43,2.565,45,1.209,46,2.028,47,2.958,48,3.516,50,1.686,51,2.565,53,2.722,71,1.049,90,1.771,115,0.939,122,1.537,124,0.914,125,2.028,126,2.349,127,2.349,128,2.028,129,1.375,130,3.26,131,1.073,132,2.565,133,2.028,134,2.241,135,3.26,136,1.771,137,2.972,138,1.215,139,1.375,140,3.426,141,2.349,142,2.349,149,2.814,150,2.349,151,2.028,154,1.339,159,3.26,161,2.349,192,2.241,198,1.358,234,2.241,237,1.215,665,2.517,818,2.972,822,3.26,823,2.349,976,2.349,998,4.053,1082,2.028,1083,4.337,1302,2.779,1303,4.341,1304,4.341,1305,4.762,1306,4.762,1307,3.431,1308,4.341]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"modules/MatMomentTimeModule.html":{},"modules/MatNativeTimeModule.html":{},"interfaces/MatTimeFormats.html":{},"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"injectables/MatTimeSelectIntl.html":{},"modules/MatTimeSelectModule.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":131,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{},"miscellaneous/variables.html":{}}}],["0.5",{"_index":886,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["0.8.26",{"_index":1081,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":768,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["1.5",{"_index":924,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["1.5em",{"_index":805,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{}}}],["1.9.0",{"_index":1079,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":776,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["100",{"_index":881,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["12",{"_index":195,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["120px",{"_index":997,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["16px",{"_index":895,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["1:25",{"_index":1135,"title":{},"body":{"index.html":{}}}],["1em",{"_index":802,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{}}}],["2",{"_index":976,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0.8",{"_index":1075,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":1076,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1073,"title":{},"body":{"dependencies.html":{}}}],["2019",{"_index":1248,"title":{},"body":{"index.html":{},"license.html":{}}}],["23",{"_index":1030,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["24",{"_index":196,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["3",{"_index":1299,"title":{},"body":{"overview.html":{}}}],["4",{"_index":1301,"title":{},"body":{"overview.html":{}}}],["40px",{"_index":876,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["5",{"_index":1300,"title":{},"body":{"overview.html":{}}}],["59",{"_index":1031,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["6.4.0",{"_index":1077,"title":{},"body":{"dependencies.html":{}}}],["7.2.3",{"_index":1063,"title":{},"body":{"dependencies.html":{}}}],["7.3.0",{"_index":1065,"title":{},"body":{"dependencies.html":{}}}],["8601",{"_index":1128,"title":{},"body":{"index.html":{}}}],["_ariahaspopup",{"_index":580,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["_ariaown",{"_index":582,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["_changedetectorref",{"_index":720,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["_color",{"_index":289,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["_createinjector",{"_index":436,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["_createpopup",{"_index":443,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["_createpopuppositionstrategi",{"_index":463,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["_dir",{"_index":349,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["_disabl",{"_index":290,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["_disabledchang",{"_index":295,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{}}}],["_disablerippl",{"_index":762,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["_document",{"_index":351,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["_elementref",{"_index":56,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["_focusedelementbeforeopen",{"_index":305,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["_formatvalue(valu",{"_index":655,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["_formfield",{"_index":595,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["_gethostel",{"_index":844,"title":{},"body":{"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["_getvaliddateornull(obj",{"_index":484,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{}}}],["_injector",{"_index":345,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["_inputsubscript",{"_index":286,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["_intl",{"_index":212,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["_isrippledis",{"_index":845,"title":{},"body":{"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["_lastvaluevalid",{"_index":544,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["_localesubscript",{"_index":530,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["_mattimeselectcontentmixinbas",{"_index":159,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"miscellaneous/variables.html":{}}}],["_mattimeunitoptionmixinbas",{"_index":822,"title":{},"body":{"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"miscellaneous/variables.html":{}}}],["_max",{"_index":534,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["_maxtim",{"_index":590,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["_maxvalid",{"_index":540,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["_min",{"_index":533,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["_mintim",{"_index":586,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["_minvalid",{"_index":539,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["_moment",{"_index":1308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_ngzone",{"_index":346,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["_onchang",{"_index":549,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["_onclick",{"_index":848,"title":{},"body":{"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["_ontouch",{"_index":550,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["_onvalidatorchang",{"_index":551,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["_open",{"_index":293,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["_openaspopup",{"_index":421,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["_origintop",{"_index":959,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["_overlay",{"_index":344,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["_parsevalid",{"_index":538,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["_popupcomponentport",{"_index":300,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["_popupcomponentref",{"_index":303,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["_popupref",{"_index":297,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["_scrollstrategi",{"_index":307,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["_select",{"_index":292,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["_selectedchang",{"_index":296,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["_setcolor",{"_index":490,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["_startat",{"_index":288,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["_statechang",{"_index":761,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["_text",{"_index":828,"title":{},"body":{"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["_timeadapt",{"_index":213,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["_timeformat",{"_index":594,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["_timeselect",{"_index":531,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["_timeselectinput",{"_index":308,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["_timeselectsubscript",{"_index":529,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["_valid",{"_index":542,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["_valu",{"_index":532,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["_valuechang",{"_index":535,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["_viewcontainerref",{"_index":347,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["_watchstatechang",{"_index":785,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["a.m",{"_index":668,"title":{},"body":{"injectables/MatTimeSelectIntl.html":{}}}],["a11ymodul",{"_index":689,"title":{},"body":{"modules/MatTimeSelectModule.html":{}}}],["abov",{"_index":1118,"title":{},"body":{"index.html":{},"license.html":{}}}],["absolut",{"_index":902,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["abstract",{"_index":1004,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["abstractcontrol",{"_index":512,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["accent",{"_index":715,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"index.html":{}}}],["accept",{"_index":1133,"title":{},"body":{"index.html":{}}}],["access",{"_index":498,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{},"index.html":{}}}],["accessor",{"_index":718,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["accomplish",{"_index":1207,"title":{},"body":{"index.html":{}}}],["action",{"_index":1232,"title":{},"body":{"index.html":{},"license.html":{}}}],["activ",{"_index":716,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["actual",{"_index":605,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["actual_compon",{"_index":816,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["ad",{"_index":1117,"title":{},"body":{"index.html":{}}}],["adapt",{"_index":999,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["adapter.servic",{"_index":16,"title":{},"body":{"modules/MatMomentTimeModule.html":{},"modules/MatNativeTimeModule.html":{},"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["adapter.service.t",{"_index":998,"title":{},"body":{"classes/TimeAdapter.html":{},"miscellaneous/variables.html":{}}}],["adapter.service.ts:12",{"_index":1033,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["adapter.service.ts:19",{"_index":1037,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["adapter.service.ts:26",{"_index":1039,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["adapter.service.ts:36",{"_index":1026,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["adapter.service.ts:42",{"_index":1040,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["adapter.service.ts:48",{"_index":1045,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["adapter.service.ts:57",{"_index":1021,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["adapter.service.ts:71",{"_index":1042,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["adapter.service.ts:91",{"_index":1013,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["add",{"_index":1150,"title":{},"body":{"index.html":{}}}],["aftercontentinit",{"_index":702,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["afterviewinit",{"_index":925,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["agent",{"_index":880,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["agnost",{"_index":1175,"title":{},"body":{"index.html":{}}}],["align",{"_index":889,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["allow",{"_index":252,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/TimeAdapter.html":{},"index.html":{}}}],["along",{"_index":489,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["alreadi",{"_index":390,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["alt",{"_index":457,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"index.html":{}}}],["alway",{"_index":497,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["ambigu",{"_index":1136,"title":{},"body":{"index.html":{}}}],["amlabel",{"_index":662,"title":{},"body":{"injectables/MatTimeSelectIntl.html":{}}}],["amount",{"_index":950,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["ampm",{"_index":204,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["and/or",{"_index":1271,"title":{},"body":{"license.html":{}}}],["angular",{"_index":1086,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":1062,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1064,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11i",{"_index":690,"title":{},"body":{"modules/MatTimeSelectModule.html":{}}}],["angular/cdk/bidi",{"_index":84,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["angular/cdk/coercion",{"_index":86,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["angular/cdk/keycod",{"_index":89,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{}}}],["angular/cdk/overlay",{"_index":95,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"modules/MatTimeSelectModule.html":{}}}],["angular/cdk/port",{"_index":98,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"modules/MatTimeSelectModule.html":{}}}],["angular/common",{"_index":82,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"modules/MatTimeSelectModule.html":{},"dependencies.html":{}}}],["angular/compil",{"_index":1066,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":10,"title":{},"body":{"modules/MatMomentTimeModule.html":{},"modules/MatNativeTimeModule.html":{},"interfaces/MatTimeFormats.html":{},"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"injectables/MatTimeSelectIntl.html":{},"modules/MatTimeSelectModule.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":518,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/materi",{"_index":13,"title":{},"body":{"modules/MatMomentTimeModule.html":{},"modules/MatNativeTimeModule.html":{},"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"modules/MatTimeSelectModule.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"classes/TimeAdapter.html":{},"dependencies.html":{},"index.html":{}}}],["angular/platform",{"_index":1067,"title":{},"body":{"dependencies.html":{}}}],["angular/rout",{"_index":1070,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":1206,"title":{},"body":{"index.html":{}}}],["appear",{"_index":797,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{}}}],["applic",{"_index":1123,"title":{},"body":{"index.html":{}}}],["application'",{"_index":1238,"title":{},"body":{"index.html":{}}}],["appropri",{"_index":1180,"title":{},"body":{"index.html":{}}}],["aria",{"_index":1223,"title":{},"body":{"index.html":{}}}],["ariadis",{"_index":831,"title":{},"body":{"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["aris",{"_index":1296,"title":{},"body":{"license.html":{}}}],["around",{"_index":415,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["array",{"_index":180,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["aspect",{"_index":1165,"title":{},"body":{"index.html":{}}}],["assign",{"_index":1245,"title":{},"body":{"index.html":{}}}],["associ",{"_index":284,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"index.html":{},"license.html":{}}}],["async",{"_index":418,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["asynchron",{"_index":399,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["attach",{"_index":1148,"title":{},"body":{"index.html":{}}}],["attempt",{"_index":1243,"title":{},"body":{"index.html":{}}}],["attr.aria",{"_index":851,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["attr.rol",{"_index":852,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["attr.tabindex",{"_index":713,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["attribut",{"_index":756,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"index.html":{}}}],["attribute('tabindex",{"_index":773,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["author",{"_index":1289,"title":{},"body":{"license.html":{}}}],["auto",{"_index":808,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["automat",{"_index":1124,"title":{},"body":{"index.html":{}}}],["avail",{"_index":1116,"title":{},"body":{"index.html":{}}}],["backdrop",{"_index":448,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["backdropclass",{"_index":446,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["backend",{"_index":1132,"title":{},"body":{"index.html":{}}}],["base",{"_index":909,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{},"classes/TimeAdapter.html":{},"index.html":{}}}],["be",{"_index":402,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeUnitOptionComponent.html":{},"index.html":{}}}],["befor",{"_index":279,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["between",{"_index":1015,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["biggest",{"_index":1195,"title":{},"body":{"index.html":{}}}],["bind",{"_index":941,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{},"index.html":{}}}],["block",{"_index":804,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["blur",{"_index":643,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{},"index.html":{}}}],["boolean",{"_index":291,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{}}}],["border",{"_index":894,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["both",{"_index":482,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{}}}],["bottom",{"_index":474,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["box",{"_index":892,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["brows",{"_index":1297,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1068,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["browseranimationsmodul",{"_index":1107,"title":{},"body":{"index.html":{}}}],["browsermodul",{"_index":1106,"title":{},"body":{"index.html":{}}}],["built",{"_index":1174,"title":{},"body":{"index.html":{}}}],["button",{"_index":669,"title":{},"body":{"injectables/MatTimeSelectIntl.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"components/MatTimeUnitOptionComponent.html":{},"index.html":{}}}],["c",{"_index":1247,"title":{},"body":{"index.html":{},"license.html":{}}}],["calendar",{"_index":501,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["can't",{"_index":400,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["cancolor",{"_index":99,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["cancolorctor",{"_index":100,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["candisableripplector",{"_index":820,"title":{},"body":{"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["carousel",{"_index":995,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["cdk",{"_index":1001,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["center",{"_index":891,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["certain",{"_index":1126,"title":{},"body":{"index.html":{}}}],["chang",{"_index":184,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"injectables/MatTimeSelectIntl.html":{},"components/MatTimeSelectToggleComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"index.html":{}}}],["changedetect",{"_index":174,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["changedetectionstrategi",{"_index":66,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":175,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["changedetectorref",{"_index":721,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["changes.timeselect",{"_index":779,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["charg",{"_index":1258,"title":{},"body":{"license.html":{}}}],["check",{"_index":481,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{},"index.html":{}}}],["checkout",{"_index":1098,"title":{},"body":{"index.html":{}}}],["choic",{"_index":1201,"title":{},"body":{"index.html":{}}}],["choos",{"_index":1094,"title":{},"body":{"index.html":{}}}],["chosen",{"_index":1182,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1240,"title":{},"body":{"index.html":{},"license.html":{}}}],["clamp",{"_index":1014,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["clamptim",{"_index":1002,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["clamptime(d",{"_index":1012,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["class",{"_index":28,"title":{"classes/MatTimeSelectContentBase.html":{},"classes/MatTimeSelectInputEvent.html":{},"classes/MatTimeUnitOptionBase.html":{},"classes/TimeAdapter.html":{}},"body":{"modules/MatMomentTimeModule.html":{},"modules/MatNativeTimeModule.html":{},"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"injectables/MatTimeSelectIntl.html":{},"modules/MatTimeSelectModule.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{},"index.html":{},"overview.html":{}}}],["class.mat",{"_index":714,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{}}}],["click",{"_index":500,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["clock",{"_index":193,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["close",{"_index":311,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"index.html":{}}}],["closestream",{"_index":313,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["code",{"_index":1142,"title":{},"body":{"index.html":{}}}],["coercebooleanproperti",{"_index":85,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["coercebooleanproperty(valu",{"_index":331,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["collaps",{"_index":874,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["collect",{"_index":1215,"title":{},"body":{"index.html":{}}}],["color",{"_index":179,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeUnitOptionComponent.html":{},"index.html":{}}}],["color(valu",{"_index":324,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["column",{"_index":913,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["combin",{"_index":541,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["commonmodul",{"_index":688,"title":{},"body":{"modules/MatTimeSelectModule.html":{}}}],["compar",{"_index":1022,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["comparetim",{"_index":1003,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["comparetime(first",{"_index":1019,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["compat",{"_index":1217,"title":{},"body":{"index.html":{}}}],["completeclos",{"_index":387,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["compon",{"_index":67,"title":{"components/MatTimeSelectToggleComponent.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"injectables/MatTimeSelectIntl.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":810,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["componentport",{"_index":96,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["componentref",{"_index":68,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["compos",{"_index":1114,"title":{},"body":{"index.html":{}}}],["condit",{"_index":1275,"title":{},"body":{"license.html":{}}}],["configur",{"_index":1163,"title":{},"body":{"index.html":{}}}],["connect",{"_index":524,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{},"index.html":{},"license.html":{}}}],["consid",{"_index":1043,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["consist",{"_index":502,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["const",{"_index":49,"title":{},"body":{"interfaces/MatTimeFormats.html":{},"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{}}}],["constructor",{"_index":57,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["constructor(_changedetectorref",{"_index":932,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["constructor(_elementref",{"_index":58,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["constructor(_intl",{"_index":719,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{}}}],["constructor(elementref",{"_index":211,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["constructor(priv",{"_index":343,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["constructor(publ",{"_index":158,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["constructor(target",{"_index":506,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["consum",{"_index":751,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["contain",{"_index":299,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["content",{"_index":162,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeUnitOptionComponent.html":{},"index.html":{}}}],["content'},{'nam",{"_index":812,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["content.component.html",{"_index":167,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["content.component.scss",{"_index":169,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["contentchild",{"_index":757,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["contentchild(mattimeselecttoggleicondirect",{"_index":747,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["contract",{"_index":1294,"title":{},"body":{"license.html":{}}}],["control",{"_index":537,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{},"index.html":{}}}],["controlvalueaccessor",{"_index":513,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["conveni",{"_index":1130,"title":{},"body":{"index.html":{}}}],["convert",{"_index":1046,"title":{},"body":{"classes/TimeAdapter.html":{},"index.html":{}}}],["copi",{"_index":1261,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1246,"title":{},"body":{"index.html":{},"license.html":{}}}],["core",{"_index":1071,"title":{},"body":{"dependencies.html":{}}}],["correspond",{"_index":1203,"title":{},"body":{"index.html":{}}}],["could'v",{"_index":388,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["count",{"_index":401,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["creat",{"_index":435,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/TimeAdapter.html":{},"index.html":{}}}],["createmissingtimeimplerror",{"_index":114,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"miscellaneous/functions.html":{}}}],["createmissingtimeimplerror('timeadapt",{"_index":218,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["createmissingtimeimplerror(provid",{"_index":1085,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createtim",{"_index":1005,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["createtime(hour",{"_index":1025,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["current",{"_index":181,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{}}}],["currenttop",{"_index":983,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["cursor",{"_index":918,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["custom",{"_index":749,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"index.html":{}}}],["customicon",{"_index":707,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["d",{"_index":155,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"classes/TimeAdapter.html":{}}}],["damag",{"_index":1292,"title":{},"body":{"license.html":{}}}],["data",{"_index":134,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"injectables/MatTimeSelectIntl.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["data.maxtim",{"_index":225,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["data.mintim",{"_index":224,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["data.unit",{"_index":233,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["date",{"_index":360,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"classes/TimeAdapter.html":{},"index.html":{}}}],["dateadapt",{"_index":11,"title":{},"body":{"modules/MatMomentTimeModule.html":{},"modules/MatNativeTimeModule.html":{},"classes/TimeAdapter.html":{}}}],["datepick",{"_index":1169,"title":{},"body":{"index.html":{}}}],["day",{"_index":256,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["deal",{"_index":1263,"title":{},"body":{"license.html":{}}}],["declar",{"_index":683,"title":{},"body":{"modules/MatTimeSelectModule.html":{}}}],["decor",{"_index":743,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["default",{"_index":665,"title":{},"body":{"injectables/MatTimeSelectIntl.html":{},"components/MatTimeSelectToggleComponent.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaulttabindex",{"_index":722,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["defin",{"_index":60,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"classes/MatTimeSelectInputEvent.html":{},"injectables/MatTimeSelectIntl.html":{},"components/MatTimeSelectToggleComponent.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{}}}],["dep",{"_index":25,"title":{},"body":{"modules/MatMomentTimeModule.html":{},"modules/MatNativeTimeModule.html":{},"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"miscellaneous/variables.html":{}}}],["depend",{"_index":1061,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["descript",{"_index":495,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{},"injectables/MatTimeSelectIntl.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{}}}],["deseri",{"_index":1125,"title":{},"body":{"index.html":{}}}],["determin",{"_index":136,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"miscellaneous/variables.html":{}}}],["develop",{"_index":1177,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":454,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"index.html":{}}}],["differ",{"_index":1138,"title":{},"body":{"index.html":{}}}],["digit",{"_index":1307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direct",{"_index":449,"title":{"directives/MatTimeSelectToggleIconDirective.html":{}},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"index.html":{},"overview.html":{}}}],["direction",{"_index":83,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["directli",{"_index":1131,"title":{},"body":{"index.html":{}}}],["disabl",{"_index":327,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"index.html":{}}}],["disabled(valu",{"_index":330,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["disabledchang",{"_index":339,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{}}}],["disablerippl",{"_index":711,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["disableripple(valu",{"_index":766,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["display",{"_index":42,"title":{},"body":{"interfaces/MatTimeFormats.html":{},"components/MatTimeSelectToggleComponent.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["displayformat",{"_index":228,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["displayformat.match(/hh?|hh?/g)[0",{"_index":968,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["displayformat.match(/mm?/g)[0",{"_index":969,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["displayformat.match(/ss?/g)[0",{"_index":970,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["distribut",{"_index":1269,"title":{},"body":{"license.html":{}}}],["doc",{"_index":143,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["document",{"_index":81,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"index.html":{},"license.html":{}}}],["dom",{"_index":843,"title":{},"body":{"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["don't",{"_index":496,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["done",{"_index":1102,"title":{},"body":{"index.html":{}}}],["down",{"_index":274,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["down_arrow",{"_index":519,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{},"index.html":{}}}],["due",{"_index":546,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeUnitOptionComponent.html":{},"index.html":{}}}],["durationinputarg1",{"_index":111,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["durationinputarg2",{"_index":112,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["dynam",{"_index":1069,"title":{},"body":{"dependencies.html":{}}}],["each",{"_index":128,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["earlier",{"_index":1023,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["easiest",{"_index":1183,"title":{},"body":{"index.html":{}}}],["easili",{"_index":1121,"title":{},"body":{"index.html":{}}}],["ebongu",{"_index":1250,"title":{},"body":{"index.html":{},"license.html":{}}}],["element",{"_index":285,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"index.html":{}}}],["element.blur",{"_index":577,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["element.queryselector('mat",{"_index":980,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["element.style.removeproperty('transit",{"_index":973,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["element.style.top",{"_index":988,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["elementref",{"_index":59,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["emit",{"_index":183,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"injectables/MatTimeSelectIntl.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["empti",{"_index":916,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["en",{"_index":1187,"title":{},"body":{"index.html":{}}}],["enabl",{"_index":938,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["encapsul",{"_index":172,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["end",{"_index":478,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["end.get(unit",{"_index":965,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["enforc",{"_index":1018,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["ensur",{"_index":1184,"title":{},"body":{"index.html":{}}}],["enter",{"_index":1092,"title":{},"body":{"index.html":{}}}],["entrycompon",{"_index":687,"title":{},"body":{"modules/MatTimeSelectModule.html":{}}}],["equal",{"_index":203,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/TimeAdapter.html":{}}}],["error",{"_index":116,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"index.html":{}}}],["error('a",{"_index":369,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["error('attempt",{"_index":375,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["errors.t",{"_index":1084,"title":{},"body":{"miscellaneous/functions.html":{}}}],["escap",{"_index":87,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"index.html":{}}}],["etc",{"_index":1146,"title":{},"body":{"index.html":{}}}],["event",{"_index":392,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"index.html":{},"license.html":{}}}],["event.altkey",{"_index":461,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{}}}],["event.keycod",{"_index":460,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{}}}],["event.preventdefault",{"_index":630,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["event.stoppropag",{"_index":784,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["event.target.valu",{"_index":632,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["eventemitt",{"_index":69,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["exactli",{"_index":1119,"title":{},"body":{"index.html":{}}}],["exampl",{"_index":54,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"index.html":{}}}],["expect",{"_index":1122,"title":{},"body":{"index.html":{}}}],["export",{"_index":27,"title":{},"body":{"modules/MatMomentTimeModule.html":{},"modules/MatNativeTimeModule.html":{},"interfaces/MatTimeFormats.html":{},"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"injectables/MatTimeSelectIntl.html":{},"modules/MatTimeSelectModule.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{},"index.html":{}}}],["exporta",{"_index":170,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["express",{"_index":1282,"title":{},"body":{"license.html":{}}}],["extend",{"_index":177,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"classes/TimeAdapter.html":{}}}],["extract",{"_index":1034,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["fals",{"_index":294,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["field",{"_index":648,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"index.html":{}}}],["field:not(.mat",{"_index":803,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{}}}],["file",{"_index":4,"title":{},"body":{"modules/MatMomentTimeModule.html":{},"modules/MatNativeTimeModule.html":{},"interfaces/MatTimeFormats.html":{},"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"injectables/MatTimeSelectIntl.html":{},"modules/MatTimeSelectModule.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{},"license.html":{}}}],["fill",{"_index":899,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["filter",{"_index":108,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["finish",{"_index":1155,"title":{},"body":{"index.html":{}}}],["fire",{"_index":406,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"index.html":{}}}],["first",{"_index":991,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{}}}],["firstvalid",{"_index":1054,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["fit",{"_index":1285,"title":{},"body":{"license.html":{}}}],["flex",{"_index":887,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["flexibleconnectedto(this._timeselectinput.getconnectedoverlayorigin",{"_index":465,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["flow",{"_index":1028,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["fn",{"_index":617,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["focu",{"_index":398,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["focus",{"_index":304,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["follow",{"_index":1231,"title":{},"body":{"index.html":{},"license.html":{}}}],["font",{"_index":911,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["foreach(timeselect",{"_index":209,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["form",{"_index":536,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"index.html":{}}}],["format",{"_index":18,"title":{},"body":{"modules/MatMomentTimeModule.html":{},"modules/MatNativeTimeModule.html":{},"interfaces/MatTimeFormats.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeUnitSelectComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["formats.t",{"_index":39,"title":{},"body":{"interfaces/MatTimeFormats.html":{},"miscellaneous/variables.html":{}}}],["formatsfor",{"_index":1210,"title":{},"body":{"index.html":{}}}],["formatting/pars",{"_index":1200,"title":{},"body":{"index.html":{}}}],["formcontrol",{"_index":1144,"title":{},"body":{"index.html":{}}}],["formgroup",{"_index":1143,"title":{},"body":{"index.html":{}}}],["forwardref",{"_index":510,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["found",{"_index":1234,"title":{},"body":{"index.html":{}}}],["free",{"_index":1257,"title":{},"body":{"license.html":{}}}],["function",{"_index":145,"title":{"miscellaneous/functions.html":{}},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["furnish",{"_index":1274,"title":{},"body":{"license.html":{}}}],["gener",{"_index":125,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["get",{"_index":240,"title":{"index.html":{},"license.html":{}},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{},"index.html":{}}}],["get(unit",{"_index":245,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["getam",{"_index":281,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["getconnectedoverlayorigin",{"_index":652,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["gethour",{"_index":1006,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["gethour(d",{"_index":1032,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["getlabel",{"_index":838,"title":{},"body":{"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["getmax(unit",{"_index":261,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["getmin(unit",{"_index":253,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["getminut",{"_index":1007,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["getminute(d",{"_index":1036,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["getnext",{"_index":928,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["getnext(unit",{"_index":275,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["getpm",{"_index":283,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["getprev",{"_index":929,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["getprev(unit",{"_index":269,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["getsecond",{"_index":1008,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["getsecond(d",{"_index":1038,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["getthemepalett",{"_index":649,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["given",{"_index":241,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{},"index.html":{}}}],["grant",{"_index":1256,"title":{},"body":{"license.html":{}}}],["greater",{"_index":202,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/TimeAdapter.html":{}}}],["guid",{"_index":1099,"title":{},"body":{"index.html":{}}}],["hammerj",{"_index":1074,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":138,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"miscellaneous/variables.html":{}}}],["hasbackdrop",{"_index":445,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["haspopup",{"_index":579,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{},"index.html":{}}}],["height",{"_index":806,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["here",{"_index":676,"title":{},"body":{"injectables/MatTimeSelectIntl.html":{}}}],["herebi",{"_index":1255,"title":{},"body":{"license.html":{}}}],["hh?/g.test(displayformat",{"_index":231,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["hidden",{"_index":915,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["highli",{"_index":1198,"title":{},"body":{"index.html":{}}}],["highlight",{"_index":879,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["holder",{"_index":1290,"title":{},"body":{"license.html":{}}}],["host",{"_index":842,"title":{},"body":{"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["hostbind",{"_index":70,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["hostbinding('attr.aria",{"_index":578,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["hostbinding('attr.max",{"_index":589,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["hostbinding('attr.min",{"_index":585,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["hostbinding('attr.rol",{"_index":829,"title":{},"body":{"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["hostbinding('attr.tabindex",{"_index":767,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["hostbinding('class",{"_index":190,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["hostbinding('class.mat",{"_index":769,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["hostlisten",{"_index":511,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["hostlistener('blur",{"_index":644,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["hostlistener('chang",{"_index":641,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["hostlistener('click",{"_index":847,"title":{},"body":{"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["hostlistener('focu",{"_index":781,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["hostlistener('input",{"_index":631,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["hostlistener('keydown",{"_index":625,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["hour",{"_index":192,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{},"miscellaneous/variables.html":{}}}],["hourclock",{"_index":197,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["htmlelement",{"_index":306,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["icon",{"_index":750,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"index.html":{}}}],["id",{"_index":127,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"miscellaneous/variables.html":{}}}],["ie",{"_index":397,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["implement",{"_index":178,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"index.html":{}}}],["impli",{"_index":1283,"title":{},"body":{"license.html":{}}}],["import",{"_index":8,"title":{},"body":{"modules/MatMomentTimeModule.html":{},"modules/MatNativeTimeModule.html":{},"interfaces/MatTimeFormats.html":{},"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"injectables/MatTimeSelectIntl.html":{},"modules/MatTimeSelectModule.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{},"index.html":{}}}],["inabl",{"_index":1197,"title":{},"body":{"index.html":{}}}],["includ",{"_index":898,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{},"index.html":{},"license.html":{}}}],["index",{"_index":40,"title":{"index.html":{}},"body":{"interfaces/MatTimeFormats.html":{},"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"injectables/MatTimeSelectIntl.html":{},"components/MatTimeSelectToggleComponent.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"modules/MatMomentTimeModule.html":{},"modules/MatNativeTimeModule.html":{},"interfaces/MatTimeFormats.html":{},"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"injectables/MatTimeSelectIntl.html":{},"modules/MatTimeSelectModule.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{}}}],["inform",{"_index":1212,"title":{},"body":{"index.html":{}}}],["inherit",{"_index":897,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{},"index.html":{}}}],["initi",{"_index":133,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"injectables/MatTimeSelectIntl.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":71,"title":{"injectables/MatTimeSelectIntl.html":{}},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"injectables/MatTimeSelectIntl.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["inject(docu",{"_index":350,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["inject(forwardref",{"_index":833,"title":{},"body":{"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["inject(mat_time_format",{"_index":593,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["inject(mat_time_select_data",{"_index":214,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["inject(mat_time_select_scroll_strategi",{"_index":348,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["inject(undefin",{"_index":867,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["injectiontoken",{"_index":46,"title":{},"body":{"interfaces/MatTimeFormats.html":{},"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('mat",{"_index":51,"title":{},"body":{"interfaces/MatTimeFormats.html":{},"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":72,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["injectortoken",{"_index":440,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["inlin",{"_index":875,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["input",{"_index":73,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"index.html":{}}}],["input'",{"_index":647,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{},"index.html":{}}}],["input('for",{"_index":763,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["input.direct",{"_index":120,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"modules/MatTimeSelectModule.html":{}}}],["input.directive.t",{"_index":494,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["input.directive.ts:40",{"_index":507,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["input.directive.ts:44",{"_index":508,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["input.directive.ts:46",{"_index":509,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["input[mattimeselect",{"_index":525,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["input[mattimeselect]'},{'nam",{"_index":815,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["inputdis",{"_index":788,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["insid",{"_index":824,"title":{},"body":{"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"index.html":{}}}],["instal",{"_index":1089,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":129,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["instanti",{"_index":301,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["instead",{"_index":503,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["integ",{"_index":1029,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["interact",{"_index":1153,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":36,"title":{"interfaces/MatTimeFormats.html":{},"interfaces/MatTimeSelectData.html":{}},"body":{"interfaces/MatTimeFormats.html":{},"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"overview.html":{}}}],["intern",{"_index":187,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["internation",{"_index":661,"title":{},"body":{"injectables/MatTimeSelectIntl.html":{},"index.html":{}}}],["intl.servic",{"_index":118,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"modules/MatTimeSelectModule.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["intl.service.t",{"_index":658,"title":{},"body":{"injectables/MatTimeSelectIntl.html":{}}}],["intl.service.ts:12",{"_index":673,"title":{},"body":{"injectables/MatTimeSelectIntl.html":{}}}],["intl.service.ts:15",{"_index":678,"title":{},"body":{"injectables/MatTimeSelectIntl.html":{}}}],["intl.service.ts:18",{"_index":666,"title":{},"body":{"injectables/MatTimeSelectIntl.html":{}}}],["intl.service.ts:21",{"_index":679,"title":{},"body":{"injectables/MatTimeSelectIntl.html":{}}}],["isaltdownarrow",{"_index":628,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["isdis",{"_index":620,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["iso",{"_index":1127,"title":{},"body":{"index.html":{}}}],["isvalid",{"_index":930,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["isvalid(valu",{"_index":946,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["it'",{"_index":1171,"title":{},"body":{"index.html":{}}}],["item",{"_index":890,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["javascript'",{"_index":1191,"title":{},"body":{"index.html":{}}}],["js",{"_index":1072,"title":{},"body":{"dependencies.html":{}}}],["keyboard",{"_index":1229,"title":{},"body":{"index.html":{}}}],["keyboard_arrow_down",{"_index":994,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["keyboard_arrow_up",{"_index":992,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["keyboardev",{"_index":627,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["keydown",{"_index":624,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["kind",{"_index":1281,"title":{},"body":{"license.html":{}}}],["label",{"_index":667,"title":{},"body":{"injectables/MatTimeSelectIntl.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"index.html":{}}}],["labelledbi",{"_index":1228,"title":{},"body":{"index.html":{}}}],["last",{"_index":543,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["later",{"_index":1024,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["left",{"_index":900,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["legaci",{"_index":798,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{}}}],["less",{"_index":200,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/TimeAdapter.html":{}}}],["liabil",{"_index":1293,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":1291,"title":{},"body":{"license.html":{}}}],["librari",{"_index":1101,"title":{},"body":{"index.html":{}}}],["licens",{"_index":1091,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limit",{"_index":1266,"title":{},"body":{"license.html":{}}}],["line",{"_index":908,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["list",{"_index":957,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["liter",{"_index":44,"title":{},"body":{"interfaces/MatTimeFormats.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["local",{"_index":1140,"title":{},"body":{"index.html":{}}}],["localedata",{"_index":226,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["localedata.longdateformat('lt",{"_index":229,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["logic",{"_index":417,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["lt",{"_index":1305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["made",{"_index":1095,"title":{},"body":{"index.html":{}}}],["make",{"_index":416,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"index.html":{}}}],["mani",{"_index":1194,"title":{},"body":{"index.html":{}}}],["manual",{"_index":1160,"title":{},"body":{"index.html":{}}}],["margin",{"_index":807,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["mark",{"_index":405,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["mask",{"_index":996,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["mat",{"_index":165,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"index.html":{}}}],["mat_date_local",{"_index":12,"title":{},"body":{"modules/MatMomentTimeModule.html":{},"modules/MatNativeTimeModule.html":{}}}],["mat_input_value_accessor",{"_index":520,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["mat_moment_time_format",{"_index":21,"title":{},"body":{"modules/MatMomentTimeModule.html":{},"miscellaneous/variables.html":{}}}],["mat_native_time_format",{"_index":35,"title":{},"body":{"modules/MatNativeTimeModule.html":{},"miscellaneous/variables.html":{}}}],["mat_time_format",{"_index":17,"title":{},"body":{"modules/MatMomentTimeModule.html":{},"modules/MatNativeTimeModule.html":{},"interfaces/MatTimeFormats.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeUnitSelectComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mat_time_select_data",{"_index":135,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"miscellaneous/variables.html":{}}}],["mat_time_select_scroll_strategi",{"_index":140,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"miscellaneous/variables.html":{}}}],["mat_time_select_scroll_strategy_factori",{"_index":151,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mat_time_select_scroll_strategy_factory(overlay",{"_index":146,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"miscellaneous/functions.html":{}}}],["mat_time_select_scroll_strategy_factory_provid",{"_index":149,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"modules/MatTimeSelectModule.html":{},"miscellaneous/variables.html":{}}}],["matbutton",{"_index":742,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["matbuttonmodul",{"_index":693,"title":{},"body":{"modules/MatTimeSelectModule.html":{}}}],["matbuttontogglemodul",{"_index":694,"title":{},"body":{"modules/MatTimeSelectModule.html":{}}}],["match",{"_index":30,"title":{},"body":{"modules/MatMomentTimeModule.html":{},"modules/MatNativeTimeModule.html":{},"interfaces/MatTimeFormats.html":{},"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"injectables/MatTimeSelectIntl.html":{},"modules/MatTimeSelectModule.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["materi",{"_index":1087,"title":{},"body":{"index.html":{}}}],["matformfield",{"_index":521,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["maticonmodul",{"_index":695,"title":{},"body":{"modules/MatTimeSelectModule.html":{}}}],["matmomenttimemodul",{"_index":1,"title":{"modules/MatMomentTimeModule.html":{}},"body":{"modules/MatMomentTimeModule.html":{},"index.html":{},"modules.html":{}}}],["matnativetimemodul",{"_index":31,"title":{"modules/MatNativeTimeModule.html":{}},"body":{"modules/MatNativeTimeModule.html":{},"index.html":{},"modules.html":{}}}],["matripplemodul",{"_index":696,"title":{},"body":{"modules/MatTimeSelectModule.html":{}}}],["mattimeformat",{"_index":37,"title":{"interfaces/MatTimeFormats.html":{}},"body":{"interfaces/MatTimeFormats.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeUnitSelectComponent.html":{},"miscellaneous/variables.html":{}}}],["mattimeselect",{"_index":370,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeUnitSelectComponent.html":{},"index.html":{}}}],["mattimeselect(valu",{"_index":552,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["mattimeselectcompon",{"_index":522,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{},"modules/MatTimeSelectModule.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"index.html":{}}}],["mattimeselectcont",{"_index":171,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["mattimeselectcontentbas",{"_index":52,"title":{"classes/MatTimeSelectContentBase.html":{}},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["mattimeselectcontentcompon",{"_index":176,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"modules/MatTimeSelectModule.html":{},"components/MatTimeSelectToggleComponent.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["mattimeselectdata",{"_index":152,"title":{"interfaces/MatTimeSelectData.html":{}},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["mattimeselectinput",{"_index":528,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{},"index.html":{}}}],["mattimeselectinputdirect",{"_index":119,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"modules/MatTimeSelectModule.html":{},"components/MatTimeSelectToggleComponent.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"index.html":{}}}],["mattimeselectinputev",{"_index":493,"title":{"classes/MatTimeSelectInputEvent.html":{}},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["mattimeselectinputevent(thi",{"_index":561,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["mattimeselectintl",{"_index":117,"title":{"injectables/MatTimeSelectIntl.html":{}},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"injectables/MatTimeSelectIntl.html":{},"modules/MatTimeSelectModule.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"index.html":{}}}],["mattimeselectmax",{"_index":604,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{},"index.html":{}}}],["mattimeselectmin",{"_index":1152,"title":{},"body":{"index.html":{}}}],["mattimeselectmodul",{"_index":681,"title":{"modules/MatTimeSelectModule.html":{}},"body":{"modules/MatTimeSelectModule.html":{},"index.html":{},"modules.html":{}}}],["mattimeselectpars",{"_index":597,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["mattimeselecttoggl",{"_index":704,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"index.html":{}}}],["mattimeselecttogglecompon",{"_index":684,"title":{"components/MatTimeSelectToggleComponent.html":{}},"body":{"modules/MatTimeSelectModule.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["mattimeselecttoggleicon",{"_index":760,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"index.html":{}}}],["mattimeselecttoggleicondirect",{"_index":685,"title":{"directives/MatTimeSelectToggleIconDirective.html":{}},"body":{"modules/MatTimeSelectModule.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["mattimeunitoptionbas",{"_index":817,"title":{"classes/MatTimeUnitOptionBase.html":{}},"body":{"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["mattimeunitoptioncompon",{"_index":686,"title":{"components/MatTimeUnitOptionComponent.html":{}},"body":{"modules/MatTimeSelectModule.html":{},"components/MatTimeSelectToggleComponent.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["mattimeunitselectcompon",{"_index":121,"title":{"components/MatTimeUnitSelectComponent.html":{}},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"modules/MatTimeSelectModule.html":{},"components/MatTimeSelectToggleComponent.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["max",{"_index":262,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{},"index.html":{}}}],["max(valu",{"_index":576,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["maximum",{"_index":260,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{}}}],["maxtim",{"_index":157,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["mean",{"_index":1137,"title":{},"body":{"index.html":{}}}],["meaning",{"_index":1227,"title":{},"body":{"index.html":{}}}],["merchant",{"_index":1284,"title":{},"body":{"license.html":{}}}],["merg",{"_index":103,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"license.html":{}}}],["merge(this.timeselect.openstream",{"_index":792,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["messag",{"_index":1166,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":703,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["method",{"_index":708,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{},"index.html":{}}}],["midday",{"_index":280,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["midnight",{"_index":1035,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["min",{"_index":254,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{},"index.html":{}}}],["min(valu",{"_index":573,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["minimum",{"_index":182,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{}}}],["mintim",{"_index":156,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["minut",{"_index":234,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{},"miscellaneous/variables.html":{}}}],["miscellan",{"_index":1082,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1253,"title":{},"body":{"index.html":{},"license.html":{}}}],["mixincolor",{"_index":101,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["mixincolor(mattimeselectcontentbas",{"_index":161,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"miscellaneous/variables.html":{}}}],["mixindisablerippl",{"_index":821,"title":{},"body":{"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["mixindisableripple(mattimeunitoptionbas",{"_index":823,"title":{},"body":{"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":302,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["modifi",{"_index":1267,"title":{},"body":{"license.html":{}}}],["modul",{"_index":0,"title":{"modules/MatMomentTimeModule.html":{},"modules/MatNativeTimeModule.html":{},"modules/MatTimeSelectModule.html":{},"modules.html":{}},"body":{"modules/MatMomentTimeModule.html":{},"modules/MatNativeTimeModule.html":{},"modules/MatTimeSelectModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":20,"title":{},"body":{"modules/MatMomentTimeModule.html":{},"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["moment.clone().endof('day",{"_index":963,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["moment.clone().startof('day",{"_index":962,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["moment.j",{"_index":1100,"title":{},"body":{"index.html":{}}}],["moment.localedata",{"_index":966,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["moment.set(unit",{"_index":971,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["moment.subtract(1",{"_index":972,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["momenttimeadapt",{"_index":19,"title":{},"body":{"modules/MatMomentTimeModule.html":{},"index.html":{}}}],["more",{"_index":1211,"title":{},"body":{"index.html":{}}}],["mous",{"_index":905,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["move",{"_index":267,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["move(step",{"_index":948,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["multi",{"_index":527,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["my_date_format",{"_index":1214,"title":{},"body":{"index.html":{}}}],["my_time_format",{"_index":1218,"title":{},"body":{"index.html":{}}}],["myapp",{"_index":1202,"title":{},"body":{"index.html":{}}}],["mycompon",{"_index":1204,"title":{},"body":{"index.html":{}}}],["myintl",{"_index":1222,"title":{},"body":{"index.html":{}}}],["mymodul",{"_index":1108,"title":{},"body":{"index.html":{}}}],["mytimeadapt",{"_index":1213,"title":{},"body":{"index.html":{}}}],["name",{"_index":63,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{},"miscellaneous/functions.html":{}}}],["nativ",{"_index":34,"title":{},"body":{"modules/MatNativeTimeModule.html":{},"classes/MatTimeSelectInputEvent.html":{},"index.html":{}}}],["nativetimeadapt",{"_index":33,"title":{},"body":{"modules/MatNativeTimeModule.html":{}}}],["need",{"_index":1178,"title":{},"body":{"index.html":{}}}],["new",{"_index":50,"title":{},"body":{"interfaces/MatTimeFormats.html":{},"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"injectables/MatTimeSelectIntl.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":276,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["next.get(unit",{"_index":278,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["ng_valid",{"_index":514,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["ng_value_accessor",{"_index":515,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["ngaftercontentinit",{"_index":709,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["ngafterviewinit",{"_index":931,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["ngmodel",{"_index":1145,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":9,"title":{},"body":{"modules/MatMomentTimeModule.html":{},"modules/MatNativeTimeModule.html":{},"modules/MatTimeSelectModule.html":{},"index.html":{}}}],["ngonchang",{"_index":710,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{}}}],["ngonchanges(chang",{"_index":735,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["ngondestroy",{"_index":353,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["ngoninit",{"_index":836,"title":{},"body":{"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["ngx",{"_index":1105,"title":{},"body":{"index.html":{}}}],["ngzone",{"_index":74,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["none",{"_index":907,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{},"index.html":{}}}],["noninfring",{"_index":1288,"title":{},"body":{"license.html":{}}}],["normal",{"_index":910,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["not(.mat",{"_index":917,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["note",{"_index":1190,"title":{},"body":{"index.html":{}}}],["notic",{"_index":1276,"title":{},"body":{"license.html":{}}}],["notifi",{"_index":677,"title":{},"body":{"injectables/MatTimeSelectIntl.html":{}}}],["now",{"_index":1009,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["npm",{"_index":1103,"title":{},"body":{"index.html":{}}}],["null",{"_index":237,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":198,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{},"miscellaneous/variables.html":{}}}],["numer",{"_index":1306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj",{"_index":479,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{}}}],["object",{"_index":480,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"classes/TimeAdapter.html":{},"index.html":{}}}],["observ",{"_index":104,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{}}}],["obtain",{"_index":1260,"title":{},"body":{"license.html":{}}}],["occur",{"_index":1244,"title":{},"body":{"index.html":{}}}],["oldvalu",{"_index":362,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{}}}],["omit",{"_index":1017,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["on",{"_index":1185,"title":{},"body":{"index.html":{}}}],["onblur",{"_index":645,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["onc",{"_index":431,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["onchang",{"_index":642,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["ondestroy",{"_index":75,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["onfocu",{"_index":782,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["oninit",{"_index":819,"title":{},"body":{"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["oninput(valu",{"_index":633,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["onkeydown(ev",{"_index":626,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["open",{"_index":139,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"injectables/MatTimeSelectIntl.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["open(ev",{"_index":739,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["opened(valu",{"_index":336,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["openstream",{"_index":310,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["opentimeselectlabel",{"_index":663,"title":{},"body":{"injectables/MatTimeSelectIntl.html":{}}}],["option",{"_index":64,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["option'},{'nam",{"_index":814,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["option.compon",{"_index":698,"title":{},"body":{"modules/MatTimeSelectModule.html":{}}}],["option.component.html",{"_index":825,"title":{},"body":{"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["option.component.scss",{"_index":826,"title":{},"body":{"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["option.component.t",{"_index":818,"title":{},"body":{"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"miscellaneous/variables.html":{}}}],["option.component.ts:100",{"_index":863,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["option.component.ts:106",{"_index":861,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["option.component.ts:37",{"_index":857,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["option.component.ts:39",{"_index":855,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["option.component.ts:42",{"_index":866,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["option.component.ts:45",{"_index":860,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["option.component.ts:47",{"_index":858,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["option.component.ts:49",{"_index":859,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["option.component.ts:54",{"_index":856,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["option.component.ts:55",{"_index":870,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["option.component.ts:66",{"_index":854,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["option.component.ts:67",{"_index":871,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["option.component.ts:77",{"_index":853,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["option.component.ts:81",{"_index":868,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["option.component.ts:85",{"_index":865,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["option.component.ts:90",{"_index":864,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["option.component.ts:95",{"_index":862,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["option.label",{"_index":993,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["option.mat",{"_index":920,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["optionheight",{"_index":981,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["origini",{"_index":473,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["originx",{"_index":471,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["otherwis",{"_index":483,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"classes/TimeAdapter.html":{},"license.html":{}}}],["out",{"_index":407,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"license.html":{}}}],["outlin",{"_index":919,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["output",{"_index":76,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["output('clos",{"_index":312,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["output('open",{"_index":309,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["over",{"_index":1242,"title":{},"body":{"index.html":{}}}],["over/und",{"_index":1027,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["overflow",{"_index":914,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["overlay",{"_index":90,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeUnitOptionComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["overlay.scrollstrategies.reposit",{"_index":148,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["overlayconfig",{"_index":91,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["overlayi",{"_index":476,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["overlaymodul",{"_index":691,"title":{},"body":{"modules/MatTimeSelectModule.html":{}}}],["overlayref",{"_index":92,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["overlayx",{"_index":475,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["overrid",{"_index":759,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["overridden",{"_index":1157,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1298,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["own",{"_index":581,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["ownership",{"_index":1241,"title":{},"body":{"index.html":{}}}],["p.m",{"_index":680,"title":{},"body":{"injectables/MatTimeSelectIntl.html":{}}}],["packag",{"_index":1060,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":882,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["palett",{"_index":320,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"index.html":{}}}],["panel",{"_index":413,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeUnitSelectComponent.html":{},"index.html":{}}}],["panelclass",{"_index":451,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["param",{"_index":242,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{}}}],["paramet",{"_index":62,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{},"miscellaneous/functions.html":{}}}],["pars",{"_index":43,"title":{},"body":{"interfaces/MatTimeFormats.html":{},"classes/MatTimeSelectInputEvent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["parsedtabindex",{"_index":774,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["parsefloat(getcomputedstyle(element).top",{"_index":984,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["parsefloat(getcomputedstyle(option).height",{"_index":982,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["parseint(defaulttabindex",{"_index":775,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["part",{"_index":613,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{},"index.html":{}}}],["particular",{"_index":1286,"title":{},"body":{"license.html":{}}}],["pass",{"_index":487,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"index.html":{}}}],["period",{"_index":199,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["permiss",{"_index":1254,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1273,"title":{},"body":{"license.html":{}}}],["person",{"_index":1259,"title":{},"body":{"license.html":{}}}],["piec",{"_index":1181,"title":{},"body":{"index.html":{}}}],["pink.css\";usag",{"_index":1113,"title":{},"body":{"index.html":{}}}],["placehold",{"_index":1226,"title":{},"body":{"index.html":{}}}],["pleas",{"_index":1189,"title":{},"body":{"index.html":{}}}],["pm",{"_index":201,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"injectables/MatTimeSelectIntl.html":{},"index.html":{}}}],["pmlabel",{"_index":664,"title":{},"body":{"injectables/MatTimeSelectIntl.html":{}}}],["pointer",{"_index":903,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["pop",{"_index":326,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"index.html":{}}}],["popup",{"_index":163,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"injectables/MatTimeSelectIntl.html":{},"index.html":{}}}],["portal",{"_index":298,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["portalinjector",{"_index":97,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["portalinjector(this._injector",{"_index":442,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["portalmodul",{"_index":692,"title":{},"body":{"modules/MatTimeSelectModule.html":{}}}],["portion",{"_index":1279,"title":{},"body":{"license.html":{}}}],["posit",{"_index":430,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["positionstrategi",{"_index":93,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["possibl",{"_index":194,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"index.html":{}}}],["pre",{"_index":1186,"title":{},"body":{"index.html":{}}}],["prebuilt",{"_index":1109,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":799,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"index.html":{}}}],["prev",{"_index":270,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["prev.get(unit",{"_index":273,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["prevent",{"_index":872,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["previou",{"_index":945,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["primari",{"_index":1147,"title":{},"body":{"index.html":{}}}],["privat",{"_index":144,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["programmat",{"_index":547,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{},"index.html":{}}}],["project",{"_index":1188,"title":{},"body":{"index.html":{}}}],["projects/.../mo",{"_index":1303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../n",{"_index":1304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../tim",{"_index":1083,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/tim",{"_index":5,"title":{},"body":{"modules/MatMomentTimeModule.html":{},"modules/MatNativeTimeModule.html":{},"interfaces/MatTimeFormats.html":{},"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"injectables/MatTimeSelectIntl.html":{},"modules/MatTimeSelectModule.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["proper",{"_index":1129,"title":{},"body":{"index.html":{}}}],["properti",{"_index":41,"title":{},"body":{"interfaces/MatTimeFormats.html":{},"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"injectables/MatTimeSelectIntl.html":{},"components/MatTimeSelectToggleComponent.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"index.html":{}}}],["provid",{"_index":22,"title":{},"body":{"modules/MatMomentTimeModule.html":{},"modules/MatNativeTimeModule.html":{},"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"modules/MatTimeSelectModule.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":55,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["publish",{"_index":1268,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":1287,"title":{},"body":{"license.html":{}}}],["queri",{"_index":243,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["querylist",{"_index":77,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["quick",{"_index":393,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["reader",{"_index":672,"title":{},"body":{"injectables/MatTimeSelectIntl.html":{}}}],["readonli",{"_index":191,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"injectables/MatTimeSelectIntl.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["recommend",{"_index":1199,"title":{},"body":{"index.html":{}}}],["refer",{"_index":186,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"index.html":{}}}],["reflect",{"_index":1161,"title":{},"body":{"index.html":{}}}],["refocus",{"_index":410,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["regist",{"_index":367,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["registerinput(input",{"_index":368,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["registeronchange(fn",{"_index":615,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["registerontouched(fn",{"_index":618,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["registeronvalidatorchange(fn",{"_index":623,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["rel",{"_index":896,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["releas",{"_index":1251,"title":{},"body":{"index.html":{}}}],["render",{"_index":432,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"index.html":{}}}],["requir",{"_index":660,"title":{},"body":{"injectables/MatTimeSelectIntl.html":{},"index.html":{}}}],["reset",{"_index":389,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["resolv",{"_index":1237,"title":{},"body":{"index.html":{}}}],["respect",{"_index":1224,"title":{},"body":{"index.html":{}}}],["restor",{"_index":403,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["restrict",{"_index":1265,"title":{},"body":{"license.html":{}}}],["result",{"_index":29,"title":{},"body":{"modules/MatMomentTimeModule.html":{},"modules/MatNativeTimeModule.html":{},"interfaces/MatTimeFormats.html":{},"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"injectables/MatTimeSelectIntl.html":{},"modules/MatTimeSelectModule.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retriev",{"_index":244,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["return",{"_index":147,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{}}}],["right",{"_index":901,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{},"license.html":{}}}],["rippl",{"_index":725,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["role",{"_index":830,"title":{},"body":{"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["role=\"dialog",{"_index":1225,"title":{},"body":{"index.html":{}}}],["root",{"_index":1221,"title":{},"body":{"index.html":{}}}],["row",{"_index":888,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["run",{"_index":1141,"title":{},"body":{"index.html":{}}}],["runtim",{"_index":1172,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":107,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"injectables/MatTimeSelectIntl.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":110,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["safe",{"_index":906,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["same",{"_index":1120,"title":{},"body":{"index.html":{}}}],["sametim",{"_index":1010,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["sametime(first",{"_index":1041,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["save",{"_index":1104,"title":{},"body":{"index.html":{}}}],["scale(1",{"_index":884,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["scale(1.5",{"_index":923,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["screen",{"_index":671,"title":{},"body":{"injectables/MatTimeSelectIntl.html":{}}}],["scroll",{"_index":137,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"miscellaneous/variables.html":{}}}],["scrollstrategi",{"_index":94,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["scrollstrategy>('mat",{"_index":141,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"miscellaneous/variables.html":{}}}],["second",{"_index":1020,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["secondvalid",{"_index":1056,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["see",{"_index":1170,"title":{},"body":{"index.html":{}}}],["select",{"_index":115,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"injectables/MatTimeSelectIntl.html":{},"modules/MatTimeSelectModule.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["select'",{"_index":1167,"title":{},"body":{"index.html":{}}}],["select'},{'nam",{"_index":811,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["select(tim",{"_index":361,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["select.compon",{"_index":123,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"modules/MatTimeSelectModule.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["select.component.html",{"_index":927,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["select.component.scss",{"_index":926,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["select.component.t",{"_index":53,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeUnitSelectComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["select.component.ts:130",{"_index":944,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["select.component.ts:137",{"_index":943,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["select.component.ts:145",{"_index":947,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["select.component.ts:33",{"_index":937,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["select.component.ts:35",{"_index":936,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["select.component.ts:37",{"_index":935,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["select.component.ts:39",{"_index":934,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["select.component.ts:42",{"_index":956,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["select.component.ts:45",{"_index":942,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["select.component.ts:48",{"_index":933,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["select.component.ts:54",{"_index":954,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["select.component.ts:67",{"_index":61,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{}}}],["select.component.ts:69",{"_index":65,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{}}}],["select.component.ts:75",{"_index":953,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["select.component.ts:85",{"_index":955,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["select.component.ts:90",{"_index":952,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["select.component.ts:98",{"_index":949,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["select.module.t",{"_index":682,"title":{},"body":{"modules/MatTimeSelectModule.html":{}}}],["select/prebuilt",{"_index":1111,"title":{},"body":{"index.html":{}}}],["select/src/lib/mo",{"_index":6,"title":{},"body":{"modules/MatMomentTimeModule.html":{},"miscellaneous/variables.html":{}}}],["select/src/lib/n",{"_index":32,"title":{},"body":{"modules/MatNativeTimeModule.html":{},"miscellaneous/variables.html":{}}}],["select/src/lib/tim",{"_index":38,"title":{},"body":{"interfaces/MatTimeFormats.html":{},"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"injectables/MatTimeSelectIntl.html":{},"modules/MatTimeSelectModule.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["selected(valu",{"_index":334,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["selected:not(.mat",{"_index":921,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["selectedchang",{"_index":341,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["selector",{"_index":164,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["sell",{"_index":1272,"title":{},"body":{"license.html":{}}}],["separ",{"_index":922,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["sequenc",{"_index":408,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["set",{"_index":247,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"index.html":{}}}],["set(unit",{"_index":249,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["setdisabled(valu",{"_index":752,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["setdisabledstate(isdis",{"_index":619,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["setdisableripple(valu",{"_index":754,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{}}}],["setlocal",{"_index":1173,"title":{},"body":{"index.html":{}}}],["setselected(valu",{"_index":869,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["settimeout",{"_index":974,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["settimeout(completeclos",{"_index":420,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["sever",{"_index":1096,"title":{},"body":{"index.html":{}}}],["shall",{"_index":1277,"title":{},"body":{"license.html":{}}}],["shortcom",{"_index":1196,"title":{},"body":{"index.html":{}}}],["shortcut",{"_index":1230,"title":{},"body":{"index.html":{}}}],["simplechang",{"_index":736,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["singl",{"_index":371,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"index.html":{}}}],["size",{"_index":893,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["softwar",{"_index":1262,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"modules/MatMomentTimeModule.html":{},"modules/MatNativeTimeModule.html":{},"interfaces/MatTimeFormats.html":{},"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"injectables/MatTimeSelectIntl.html":{},"modules/MatTimeSelectModule.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{}}}],["specifi",{"_index":1149,"title":{},"body":{"index.html":{}}}],["standard",{"_index":1156,"title":{},"body":{"index.html":{}}}],["start",{"_index":472,"title":{"index.html":{},"license.html":{}},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{},"index.html":{}}}],["start.get(unit",{"_index":964,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["startat",{"_index":314,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["startat(valu",{"_index":318,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["state",{"_index":338,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"index.html":{}}}],["statu",{"_index":1162,"title":{},"body":{"index.html":{}}}],["step",{"_index":951,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["strategi",{"_index":142,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"miscellaneous/variables.html":{}}}],["stream",{"_index":674,"title":{},"body":{"injectables/MatTimeSelectIntl.html":{}}}],["string",{"_index":205,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"injectables/MatTimeSelectIntl.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"index.html":{}}}],["stuck",{"_index":412,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["style",{"_index":700,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["style.css",{"_index":1110,"title":{},"body":{"index.html":{}}}],["styleurl",{"_index":168,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["subclass",{"_index":1208,"title":{},"body":{"index.html":{}}}],["subject",{"_index":105,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"injectables/MatTimeSelectIntl.html":{},"license.html":{}}}],["sublicens",{"_index":1270,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":462,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["subscript",{"_index":106,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["subscription.empti",{"_index":287,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["substanti",{"_index":1278,"title":{},"body":{"license.html":{}}}],["success",{"_index":394,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["such",{"_index":1134,"title":{},"body":{"index.html":{}}}],["suffix",{"_index":800,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"index.html":{}}}],["suitabl",{"_index":1193,"title":{},"body":{"index.html":{}}}],["super",{"_index":835,"title":{},"body":{"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["super(elementref",{"_index":215,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["support",{"_index":939,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{},"index.html":{}}}],["sure",{"_index":1179,"title":{},"body":{"index.html":{}}}],["tabindex",{"_index":712,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["tabl",{"_index":1088,"title":{},"body":{"index.html":{}}}],["take",{"_index":109,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["tap",{"_index":878,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["target",{"_index":504,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["targetel",{"_index":505,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["targettop",{"_index":985,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["targettop}px",{"_index":989,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["templat",{"_index":699,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"index.html":{}}}],["templateurl",{"_index":166,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["text",{"_index":598,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"index.html":{}}}],["theme",{"_index":488,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"index.html":{}}}],["themepalett",{"_index":102,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{}}}],["themes/indigo",{"_index":1112,"title":{},"body":{"index.html":{}}}],["there'",{"_index":459,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["therefor",{"_index":1154,"title":{},"body":{"index.html":{}}}],["thing",{"_index":1139,"title":{},"body":{"index.html":{}}}],["this._changedetectorref.markforcheck",{"_index":796,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["this._color",{"_index":321,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._createinjector",{"_index":424,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._createpopup",{"_index":425,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._createpopuppositionstrategi",{"_index":444,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._dir",{"_index":450,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._dis",{"_index":328,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["this._disabledchange.asobserv",{"_index":340,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{}}}],["this._disabledchange.complet",{"_index":356,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{}}}],["this._disabledchange.next(dis",{"_index":332,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{}}}],["this._disablerippl",{"_index":765,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["this._docu",{"_index":376,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._document.activeel",{"_index":378,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._elementref",{"_index":654,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._elementref.nativeel",{"_index":562,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["this._elementref.nativeelement.readonli",{"_index":629,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._elementref.nativeelement.valu",{"_index":599,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._focusedelementbeforeopen",{"_index":377,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._focusedelementbeforeopen.focu",{"_index":396,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._formatvalue(this.valu",{"_index":646,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._formatvalue(valu",{"_index":570,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._formfield",{"_index":650,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._formfield.color",{"_index":651,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._formfield.getconnectedoverlayorigin",{"_index":653,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._getvaliddateornull(this._timeadapter.deserialize(control.valu",{"_index":601,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._getvaliddateornull(this._timeadapter.deserialize(valu",{"_index":319,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{}}}],["this._getvaliddateornull(tim",{"_index":637,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._getvaliddateornull(valu",{"_index":569,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._inputsubscript",{"_index":372,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._inputsubscription.unsubscrib",{"_index":355,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._intl.chang",{"_index":795,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["this._lastvaluevalid",{"_index":567,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._localesubscript",{"_index":609,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._localesubscription.unsubscrib",{"_index":611,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._max",{"_index":575,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._maxvalid",{"_index":608,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._min",{"_index":572,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._minvalid",{"_index":600,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._ngzone.onstable.asobservable().pipe(take(1)).subscrib",{"_index":433,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._onchang",{"_index":616,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._onchange(select",{"_index":558,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._onchange(tim",{"_index":639,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._ontouch",{"_index":559,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._onvalidatorchang",{"_index":574,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._open",{"_index":335,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._openaspopup",{"_index":379,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._origintop",{"_index":987,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["this._overlay.create(overlayconfig",{"_index":452,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._overlay.posit",{"_index":464,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._parsevalid",{"_index":596,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._popupcomponentport",{"_index":384,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._popupcomponentportal.detach",{"_index":386,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._popupcomponentportal.isattach",{"_index":385,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._popupcomponentref",{"_index":359,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._popupcomponentref.instance.color",{"_index":491,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._popupcomponentref.instance.valuechange.subscrib",{"_index":427,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._popupref",{"_index":357,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._popupref.attach(this._popupcomponentport",{"_index":426,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._popupref.backdropclick",{"_index":455,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._popupref.detach",{"_index":383,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._popupref.dispos",{"_index":358,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._popupref.hasattach",{"_index":382,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._popupref.keydownevents().pipe(filter(ev",{"_index":456,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._popupref.overlayelement.setattribute('rol",{"_index":453,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._popupref.updateposit",{"_index":434,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._scrollstrategi",{"_index":352,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._select",{"_index":333,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["this._selectedchange.asobserv",{"_index":342,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._selectedchange.next(valu",{"_index":366,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._setcolor",{"_index":429,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._startat",{"_index":315,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._statechang",{"_index":794,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["this._statechanges.unsubscrib",{"_index":780,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["this._text",{"_index":839,"title":{},"body":{"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["this._text.nativeelement.textcont",{"_index":840,"title":{},"body":{"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["this._timeadapt",{"_index":216,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._timeadapter.clone(data.valu",{"_index":221,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._timeadapter.clone(tim",{"_index":364,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._timeadapter.comparetime(this.max",{"_index":603,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._timeadapter.comparetime(this.min",{"_index":602,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._timeadapter.createtim",{"_index":960,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["this._timeadapter.deserialize(valu",{"_index":566,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._timeadapter.format(valu",{"_index":656,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._timeadapter.isdateinstance(data.valu",{"_index":219,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._timeadapter.isdateinstance(obj",{"_index":485,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{}}}],["this._timeadapter.isvalid(data.valu",{"_index":220,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._timeadapter.isvalid(obj",{"_index":486,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{}}}],["this._timeadapter.isvalid(tim",{"_index":636,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._timeadapter.isvalid(valu",{"_index":568,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._timeadapter.localechanges.subscrib",{"_index":610,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._timeadapter.now",{"_index":222,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._timeadapter.parse(valu",{"_index":634,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._timeadapter.sametime(oldvalu",{"_index":365,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{}}}],["this._timeadapter.sametime(this._valu",{"_index":638,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._timeadapter.toiso8601(this.max",{"_index":592,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._timeadapter.toiso8601(this.min",{"_index":588,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._timeadapter.tomoment(data.maxtim",{"_index":239,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._timeadapter.tomoment(data.mintim",{"_index":236,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._timeadapter.tomoment(this._timeadapter.clamptime(tim",{"_index":223,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._timeadapter.tomoment(tim",{"_index":961,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["this._timeformats.display.timeinput",{"_index":657,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._timeformats.parse.timeinput",{"_index":635,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._timeselect",{"_index":553,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._timeselect.id",{"_index":584,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._timeselect.open",{"_index":583,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._timeselect.registerinput(thi",{"_index":554,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._timeselect.selectedchange.subscribe((select",{"_index":557,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._timeselectinput",{"_index":316,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._timeselectinput.dis",{"_index":329,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._timeselectinput.getthemepalett",{"_index":322,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._timeselectinput.max",{"_index":439,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._timeselectinput.min",{"_index":438,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._timeselectinput.valu",{"_index":317,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._timeselectinput.valuechange.subscribe((valu",{"_index":373,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._timeselectsubscript",{"_index":556,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._timeselectsubscription.unsubscrib",{"_index":555,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._valid",{"_index":606,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._validator(control",{"_index":622,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._valu",{"_index":564,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._valuechange.asobserv",{"_index":548,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._valuechange.complet",{"_index":612,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._valuechange.next(tim",{"_index":640,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._valuechange.next(valu",{"_index":571,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this._viewcontainerref",{"_index":423,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this._watchstatechang",{"_index":778,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["this.button.focu",{"_index":783,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["this.clos",{"_index":354,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this.closestream.emit",{"_index":395,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this.color",{"_index":492,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this.comparedate(first",{"_index":1047,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["this.comparetime(d",{"_index":1059,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["this.comparetime(first",{"_index":1058,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["this.dis",{"_index":374,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["this.disabled.tostr",{"_index":832,"title":{},"body":{"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["this.disablerippl",{"_index":846,"title":{},"body":{"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["this.gethour(first",{"_index":1048,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["this.gethour(second",{"_index":1049,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["this.getminute(first",{"_index":1050,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["this.getminute(second",{"_index":1051,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["this.getnext(unit).isafter(this.maxtim",{"_index":264,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this.getnext(unit).isbefore(this.mintim",{"_index":258,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this.getprev(unit).isafter(this.maxtim",{"_index":265,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this.getprev(unit).isbefore(this.mintim",{"_index":257,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this.getsecond(first",{"_index":1052,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["this.getsecond(second",{"_index":1053,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["this.hourclock",{"_index":230,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this.isvalid(first",{"_index":1055,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["this.isvalid(second",{"_index":1057,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["this.max",{"_index":591,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["this.maxtim",{"_index":238,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this.maxtime.get(unit",{"_index":266,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this.min",{"_index":587,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["this.mintim",{"_index":235,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this.mintime.get(unit",{"_index":259,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this.mov",{"_index":977,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["this.move(+1",{"_index":978,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["this.move(this.options.length",{"_index":975,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["this.open",{"_index":337,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this.openstream.emit",{"_index":381,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this.options.unshift(this.options.pop",{"_index":990,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["this.panel.nativeel",{"_index":979,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["this.select",{"_index":363,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["this.select(this._timeadapter.deserialize(value.toisostr",{"_index":428,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this.startat",{"_index":437,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this.tabindex",{"_index":777,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["this.target.valu",{"_index":523,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this.timechange.emit(new",{"_index":563,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this.timeinput.emit(new",{"_index":560,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["this.timeselect",{"_index":770,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["this.timeselect._timeselectinput",{"_index":789,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["this.timeselect._timeselectinput.disabledchang",{"_index":790,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["this.timeselect.closestream",{"_index":793,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["this.timeselect.color",{"_index":772,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["this.timeselect.dis",{"_index":764,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["this.timeselect.disabledchang",{"_index":787,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["this.timeselect.open",{"_index":771,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["this.timeunitselect.move(this.valu",{"_index":849,"title":{},"body":{"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["this.timeunitselect.valu",{"_index":850,"title":{},"body":{"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["this.timeunitselect.valuechange.subscribe(valu",{"_index":837,"title":{},"body":{"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["this.unit",{"_index":232,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["this.valu",{"_index":206,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["this.value.clone().add(1",{"_index":277,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this.value.clone().set(unit",{"_index":272,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this.value.clone().subtract(1",{"_index":271,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this.value.clone().subtract(12",{"_index":282,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this.value.get(unit",{"_index":246,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this.value.hour",{"_index":207,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this.value.issame(this.maxtim",{"_index":263,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this.value.issame(this.mintim",{"_index":255,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this.value.set(unit",{"_index":250,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["this.valuechange.emit(this.valu",{"_index":251,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["three",{"_index":1164,"title":{},"body":{"index.html":{}}}],["through",{"_index":1093,"title":{},"body":{"index.html":{}}}],["throw",{"_index":217,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["thrown",{"_index":1236,"title":{},"body":{"index.html":{}}}],["thu",{"_index":1192,"title":{},"body":{"index.html":{}}}],["time",{"_index":15,"title":{},"body":{"modules/MatMomentTimeModule.html":{},"modules/MatNativeTimeModule.html":{},"interfaces/MatTimeFormats.html":{},"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"injectables/MatTimeSelectIntl.html":{},"modules/MatTimeSelectModule.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["time.module.t",{"_index":7,"title":{},"body":{"modules/MatMomentTimeModule.html":{},"modules/MatNativeTimeModule.html":{}}}],["timea11ylabel",{"_index":48,"title":{},"body":{"interfaces/MatTimeFormats.html":{},"miscellaneous/variables.html":{}}}],["timeadapt",{"_index":14,"title":{"classes/TimeAdapter.html":{}},"body":{"modules/MatMomentTimeModule.html":{},"modules/MatNativeTimeModule.html":{},"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{},"index.html":{}}}],["timeadapter/mat_time_format",{"_index":1235,"title":{},"body":{"index.html":{}}}],["timechang",{"_index":545,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{},"index.html":{}}}],["timeinput",{"_index":47,"title":{},"body":{"interfaces/MatTimeFormats.html":{},"classes/MatTimeSelectInputEvent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["timeselect",{"_index":659,"title":{},"body":{"injectables/MatTimeSelectIntl.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"index.html":{}}}],["timeselect.move(valu",{"_index":210,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["timeselect.unit",{"_index":208,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["timeselectdis",{"_index":786,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["timeselecttoggl",{"_index":791,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["timeselectuid",{"_index":130,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"miscellaneous/variables.html":{}}}],["timeunitselect",{"_index":834,"title":{},"body":{"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["timeunitselectcompon",{"_index":189,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["togeth",{"_index":1097,"title":{},"body":{"index.html":{}}}],["toggl",{"_index":670,"title":{},"body":{"injectables/MatTimeSelectIntl.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"index.html":{}}}],["toggle'},{'nam",{"_index":813,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["toggle.compon",{"_index":697,"title":{},"body":{"modules/MatTimeSelectModule.html":{}}}],["toggle.component.html",{"_index":706,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["toggle.component.scss",{"_index":705,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["toggle.component.t",{"_index":701,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["toggle.component.ts:100",{"_index":734,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{}}}],["toggle.component.ts:104",{"_index":737,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{}}}],["toggle.component.ts:110",{"_index":738,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{}}}],["toggle.component.ts:116",{"_index":733,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{}}}],["toggle.component.ts:124",{"_index":740,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{}}}],["toggle.component.ts:46",{"_index":727,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{}}}],["toggle.component.ts:48",{"_index":728,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{}}}],["toggle.component.ts:51",{"_index":748,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{}}}],["toggle.component.ts:53",{"_index":745,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{}}}],["toggle.component.ts:57",{"_index":724,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{}}}],["toggle.component.ts:60",{"_index":753,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{}}}],["toggle.component.ts:66",{"_index":726,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{}}}],["toggle.component.ts:69",{"_index":755,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{}}}],["toggle.component.ts:75",{"_index":730,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{}}}],["toggle.component.ts:79",{"_index":729,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{}}}],["toggle.component.ts:83",{"_index":732,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{}}}],["toggle.component.ts:87",{"_index":731,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{}}}],["toggle.component.ts:91",{"_index":723,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{}}}],["toggle.component.ts:93",{"_index":741,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{}}}],["token",{"_index":132,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tomoment",{"_index":1011,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["tomoment(d",{"_index":1044,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["top",{"_index":477,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["tort",{"_index":1295,"title":{},"body":{"license.html":{}}}],["transform",{"_index":883,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["transit",{"_index":885,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["translat",{"_index":1220,"title":{},"body":{"index.html":{}}}],["transpar",{"_index":447,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["tri",{"_index":1239,"title":{},"body":{"index.html":{}}}],["trigger",{"_index":499,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"components/MatTimeUnitOptionComponent.html":{},"index.html":{}}}],["trim",{"_index":841,"title":{},"body":{"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["troubleshoot",{"_index":1233,"title":{},"body":{"index.html":{}}}],["true",{"_index":380,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{}}}],["tslib",{"_index":1078,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":391,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{},"index.html":{}}}],["type",{"_index":45,"title":{},"body":{"interfaces/MatTimeFormats.html":{},"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"injectables/MatTimeSelectIntl.html":{},"components/MatTimeSelectToggleComponent.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":160,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["ui",{"_index":1168,"title":{},"body":{"index.html":{}}}],["undefin",{"_index":323,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["under",{"_index":1252,"title":{},"body":{"index.html":{}}}],["underli",{"_index":746,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["understood",{"_index":1209,"title":{},"body":{"index.html":{}}}],["uniqu",{"_index":126,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":122,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"modules/MatTimeSelectModule.html":{},"components/MatTimeSelectToggleComponent.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"miscellaneous/variables.html":{}}}],["unitformat",{"_index":967,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["unitoftim",{"_index":113,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["unitoftime.al",{"_index":153,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["up",{"_index":268,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"index.html":{}}}],["up_arrow",{"_index":88,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["updat",{"_index":248,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["us",{"_index":124,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"injectables/MatTimeSelectIntl.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["usabl",{"_index":1000,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["usag",{"_index":1090,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":24,"title":{},"body":{"modules/MatMomentTimeModule.html":{},"modules/MatNativeTimeModule.html":{},"index.html":{}}}],["useexist",{"_index":526,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["usefactori",{"_index":150,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":411,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeUnitOptionComponent.html":{},"index.html":{}}}],["usevalu",{"_index":26,"title":{},"body":{"modules/MatMomentTimeModule.html":{},"modules/MatNativeTimeModule.html":{},"index.html":{}}}],["valid",{"_index":458,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeUnitSelectComponent.html":{},"index.html":{}}}],["validate(control",{"_index":621,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["validationerror",{"_index":516,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["validatorfn",{"_index":517,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["validators.compos",{"_index":607,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["valu",{"_index":154,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"injectables/MatTimeSelectIntl.html":{},"components/MatTimeSelectToggleComponent.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["value(valu",{"_index":565,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["value.localedata",{"_index":227,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["valuechang",{"_index":185,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["var",{"_index":809,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["variabl",{"_index":1302,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["varieti",{"_index":1176,"title":{},"body":{"index.html":{}}}],["variou",{"_index":1219,"title":{},"body":{"index.html":{}}}],["versa",{"_index":1159,"title":{},"body":{"index.html":{}}}],["via",{"_index":1115,"title":{},"body":{"index.html":{}}}],["vice",{"_index":1158,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":758,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"index.html":{}}}],["viewchild('button",{"_index":744,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{}}}],["viewchild('panel",{"_index":958,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["viewchild('text",{"_index":827,"title":{},"body":{"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{}}}],["viewchild(mattimeselectcompon",{"_index":1205,"title":{},"body":{"index.html":{}}}],["viewchildren",{"_index":78,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["viewchildren(mattimeunitselectcompon",{"_index":188,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["viewcontainerref",{"_index":79,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["viewencapsul",{"_index":80,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["viewencapsulation.non",{"_index":173,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["violat",{"_index":1151,"title":{},"body":{"index.html":{}}}],["void",{"_index":422,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["want",{"_index":904,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{},"index.html":{}}}],["warn",{"_index":717,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"index.html":{}}}],["warranti",{"_index":1280,"title":{},"body":{"license.html":{}}}],["way",{"_index":940,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{},"index.html":{}}}],["we'r",{"_index":409,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["we'v",{"_index":404,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["weakmap",{"_index":441,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["webkit",{"_index":877,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["weight",{"_index":912,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["well",{"_index":419,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"index.html":{}}}],["whenev",{"_index":675,"title":{},"body":{"injectables/MatTimeSelectIntl.html":{},"index.html":{}}}],["whether",{"_index":325,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/MatTimeSelectInputEvent.html":{},"components/MatTimeSelectToggleComponent.html":{},"directives/MatTimeSelectToggleIconDirective.html":{},"classes/MatTimeUnitOptionBase.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{},"classes/TimeAdapter.html":{},"license.html":{}}}],["width",{"_index":801,"title":{},"body":{"components/MatTimeSelectToggleComponent.html":{},"components/MatTimeUnitOptionComponent.html":{},"components/MatTimeUnitSelectComponent.html":{}}}],["withflexibledimensions(fals",{"_index":467,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["withlockedposit",{"_index":469,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["without",{"_index":1264,"title":{},"body":{"license.html":{}}}],["withposit",{"_index":470,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["withtransformoriginon('.mat",{"_index":466,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["withviewportmargin(8",{"_index":468,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{}}}],["work",{"_index":414,"title":{},"body":{"classes/MatTimeSelectContentBase.html":{},"interfaces/MatTimeSelectData.html":{},"classes/TimeAdapter.html":{},"index.html":{}}}],["wrapper",{"_index":873,"title":{},"body":{"components/MatTimeUnitOptionComponent.html":{}}}],["writevalue(valu",{"_index":614,"title":{},"body":{"classes/MatTimeSelectInputEvent.html":{}}}],["y",{"_index":986,"title":{},"body":{"components/MatTimeUnitSelectComponent.html":{}}}],["yannick",{"_index":1249,"title":{},"body":{"index.html":{},"license.html":{}}}],["ye",{"_index":1016,"title":{},"body":{"classes/TimeAdapter.html":{}}}],["you'r",{"_index":1216,"title":{},"body":{"index.html":{}}}],["zone.j",{"_index":1080,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/MatMomentTimeModule.html":{"url":"modules/MatMomentTimeModule.html","title":"module - MatMomentTimeModule","body":"\n                   \n\n\n\n\n    Modules\n    MatMomentTimeModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/time-select/src/lib/moment-time.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {DateAdapter, MAT_DATE_LOCALE} from '@angular/material';\nimport {TimeAdapter} from './time-adapter.service';\nimport {MAT_TIME_FORMATS} from './time-formats';\nimport {MomentTimeAdapter} from './moment-time-adapter.service';\nimport {MAT_MOMENT_TIME_FORMATS} from './moment-time-formats';\n\n@NgModule({\n  providers: [\n    {provide: TimeAdapter, useClass: MomentTimeAdapter, deps: [MAT_DATE_LOCALE, DateAdapter]},\n    {provide: MAT_TIME_FORMATS, useValue: MAT_MOMENT_TIME_FORMATS}\n  ]\n})\nexport class MatMomentTimeModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MatNativeTimeModule.html":{"url":"modules/MatNativeTimeModule.html","title":"module - MatNativeTimeModule","body":"\n                   \n\n\n\n\n    Modules\n    MatNativeTimeModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/time-select/src/lib/native-time.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {DateAdapter, MAT_DATE_LOCALE} from '@angular/material';\nimport {TimeAdapter} from './time-adapter.service';\nimport {MAT_TIME_FORMATS} from './time-formats';\nimport {NativeTimeAdapter} from './native-time-adapter.service';\nimport {MAT_NATIVE_TIME_FORMATS} from './native-time-formats';\n\n@NgModule({\n  providers: [\n    {provide: TimeAdapter, useClass: NativeTimeAdapter, deps: [MAT_DATE_LOCALE, DateAdapter]},\n    {provide: MAT_TIME_FORMATS, useValue: MAT_NATIVE_TIME_FORMATS}\n  ]\n})\nexport class MatNativeTimeModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MatTimeFormats.html":{"url":"interfaces/MatTimeFormats.html","title":"interface - MatTimeFormats","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MatTimeFormats\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/time-select/src/lib/time-formats.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        display\n                                \n                                \n                                        parse\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parse\n                                    \n                                \n                                \n                                    \n                                        parse:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {InjectionToken} from '@angular/core';\n\nexport interface MatTimeFormats {\n  parse: {\n    timeInput: any\n  };\n  display: {\n    timeInput: any\n    timeA11yLabel: any\n  };\n}\n\nexport const MAT_TIME_FORMATS = new InjectionToken('mat-time-formats');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MatTimeSelectContentBase.html":{"url":"classes/MatTimeSelectContentBase.html","title":"class - MatTimeSelectContentBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MatTimeSelectContentBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/time-select/src/lib/time-select.component.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _elementRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/time-select/src/lib/time-select.component.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _elementRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _elementRef:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-select.component.ts:69\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  ComponentRef,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Inject,\n  InjectionToken,\n  Injector,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  Provider,\n  QueryList,\n  ViewChildren,\n  ViewContainerRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ESCAPE, UP_ARROW} from '@angular/cdk/keycodes';\nimport {Overlay, OverlayConfig, OverlayRef, PositionStrategy, ScrollStrategy} from '@angular/cdk/overlay';\nimport {ComponentPortal, PortalInjector} from '@angular/cdk/portal';\nimport {CanColor, CanColorCtor, mixinColor, ThemePalette} from '@angular/material';\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\nimport {filter, take} from 'rxjs/operators';\nimport {DurationInputArg1, DurationInputArg2, Moment, unitOfTime} from 'moment';\nimport {TimeAdapter} from './time-adapter.service';\nimport {createMissingTimeImplError} from './time-select-errors';\nimport {MatTimeSelectIntl} from './time-select-intl.service';\nimport {MatTimeSelectInputDirective} from './time-select-input.directive';\nimport {MatTimeUnitSelectComponent} from './time-unit-select.component';\n\n/** Used to generate a unique ID for each time select instance. */\nlet timeSelectUid = 0;\n\n/** Injection token used to initialize the time select data. */\nexport const MAT_TIME_SELECT_DATA = new InjectionToken('mat-time-select-data');\n\n/** Injection token that determines the scroll handling while the time select is opened. */\nexport const MAT_TIME_SELECT_SCROLL_STRATEGY = new InjectionToken ScrollStrategy>('mat-time-select-scroll-strategy');\n\n/** @docs-private */\nexport function MAT_TIME_SELECT_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\n  return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MAT_TIME_SELECT_SCROLL_STRATEGY_FACTORY_PROVIDER: Provider = {\n  provide: MAT_TIME_SELECT_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_TIME_SELECT_SCROLL_STRATEGY_FACTORY\n};\n\nexport interface MatTimeSelectData {\n  units?: unitOfTime.All[];\n  value?: D;\n  minTime?: D;\n  maxTime?: D;\n}\n\n/** @docs-private */\nexport class MatTimeSelectContentBase {\n\n  constructor(public _elementRef: ElementRef) { }\n\n}\n\nexport const _MatTimeSelectContentMixinBase: CanColorCtor & typeof MatTimeSelectContentBase =\n  mixinColor(MatTimeSelectContentBase);\n\n/**\n * Component used as the content for the time select popup.\n * @docs-private\n */\n@Component({\n  selector: 'mat-time-select-content',\n  templateUrl: './time-select-content.component.html',\n  styleUrls: ['./time-select-content.component.scss'],\n  exportAs: 'matTimeSelectContent',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatTimeSelectContentComponent extends _MatTimeSelectContentMixinBase implements CanColor {\n\n  /** @docs-private */\n  @Input() color: ThemePalette;\n  /** The array of unit of time selectable in the time select content. */\n  @Input() units: unitOfTime.All[];\n  /** The currently selected time of the time select content. */\n  @Input() value: Moment;\n  /** The minimum selectable time. */\n  @Input() minTime: Moment;\n  /** The minimum selectable time. */\n  @Input() maxTime: Moment;\n\n  /** Emits when the time select content selected time has been changed. */\n  @Output() valueChange: EventEmitter = new EventEmitter();\n\n  /** Reference to the internal time unit select components. */\n  @ViewChildren(MatTimeUnitSelectComponent) timeUnitSelectComponents: QueryList>;\n\n  /** @docs-private */\n  @HostBinding('class') readonly class = 'mat-time-select-content';\n\n  /** The hour clock type. Possible values: 12: 12 hour clock; 24: 24 hour clock */\n  hourClock: number;\n\n  /**\n   * The time period of the currently selected time of the time select content. Possible values: `am` when selected time hour is less\n   * than 12; `pm` when selected time hour is greater than or equal to 12.\n   */\n  get amPm(): string { return this.value ? (this.value.hour()  timeSelect.unit === 'hour')\n        .forEach(timeSelect => timeSelect.move(value === 'am' ? -12 : 12));\n    }\n  }\n\n  constructor(elementRef: ElementRef,\n              public _intl: MatTimeSelectIntl,\n              @Optional() private _timeAdapter: TimeAdapter,\n              @Optional() @Inject(MAT_TIME_SELECT_DATA) data: MatTimeSelectData) {\n    super(elementRef);\n\n    if (!this._timeAdapter) {\n      throw createMissingTimeImplError('TimeAdapter');\n    }\n\n    const time = this._timeAdapter.isDateInstance(data.value) && this._timeAdapter.isValid(data.value) ?\n      this._timeAdapter.clone(data.value) : this._timeAdapter.now();\n    const value = this._timeAdapter.toMoment(this._timeAdapter.clampTime(time, data.minTime, data.maxTime));\n    const localeData = value.localeData();\n    const displayFormat = localeData.longDateFormat('LTS');\n    this.hourClock = /hh?/g.test(displayFormat) ? 12 : 24;\n    this.value = value;\n    this.units = data.units || ['hour', 'minute'];\n    this.minTime = data.minTime ? this._timeAdapter.toMoment(data.minTime) : null;\n    this.maxTime = data.maxTime ? this._timeAdapter.toMoment(data.maxTime) : null;\n  }\n\n  /**\n   * Gets the value of the given unit of time.\n   * @param unit The unit of time to query.\n   * @returns The retrieved value.\n   */\n  get(unit: unitOfTime.All): number {\n    return this.value.get(unit);\n  }\n\n  /**\n   * Sets the value of the given unit of time.\n   * @param unit The unit of time to update.\n   * @param value The value to set.\n   */\n  set(unit: unitOfTime.All, value: number) {\n    this.value.set(unit, value);\n    this.valueChange.emit(this.value);\n  }\n\n  /**\n   * Gets the minimum allowed value of the given unit of time.\n   * @param unit The unit of time to query.\n   * @returns The minimum value.\n   */\n  getMin(unit: unitOfTime.All): number | null {\n    let min = null;\n    if (this.minTime && this.value.isSame(this.minTime, 'day')) {\n      if (this.getPrev(unit).isBefore(this.minTime)) {\n        min = this.value.get(unit);\n      }\n      if (this.getNext(unit).isBefore(this.minTime)) {\n        min = this.minTime.get(unit);\n      }\n    }\n    return min;\n  }\n\n  /**\n   * Gets the maximum allowed value of the given unit of time.\n   * @param unit The unit of time to query.\n   * @returns The maximum value.\n   */\n  getMax(unit: unitOfTime.All): number | null {\n    let max = null;\n    if (this.maxTime && this.value.isSame(this.maxTime, 'day')) {\n      if (this.getNext(unit).isAfter(this.maxTime)) {\n        max = this.value.get(unit);\n      }\n      if (this.getPrev(unit).isAfter(this.maxTime)) {\n        max = this.maxTime.get(unit);\n      }\n    }\n    return max;\n  }\n\n  /**\n   * Gets the value after moving up the given unit of time.\n   * @param unit The unit of time to move.\n   * @returns The new value.\n   */\n  getPrev(unit: unitOfTime.All): Moment {\n    const prev = this.value.clone().subtract(1 as DurationInputArg1, unit as DurationInputArg2);\n    return this.value.clone().set(unit, prev.get(unit));\n  }\n\n  /**\n   * Gets the value after moving down the given unit of time.\n   * @param unit The unit of time to move.\n   * @returns The new value.\n   */\n  getNext(unit: unitOfTime.All): Moment {\n    const next = this.value.clone().add(1 as DurationInputArg1, unit as DurationInputArg2);\n    return this.value.clone().set(unit, next.get(unit));\n  }\n\n  /**\n   * Gets the value before midday.\n   */\n  getAM(): Moment {\n    if (this.value.hour() >= 12) {\n      return this.value.clone().subtract(12, 'hour');\n    }\n    return this.value;\n  }\n\n  /**\n   * Gets the value after midday.\n   */\n  getPM(): Moment {\n    if (this.value.hour()  implements OnDestroy, CanColor {\n\n  /** Subscription to value changes in the associated input element. */\n  private _inputSubscription = Subscription.EMPTY;\n\n  private _startAt: D | null;\n  private _color: ThemePalette;\n  private _disabled: boolean;\n  private _selected: D;\n  private _opened = false;\n\n  private _disabledChange: Subject = new Subject();\n  private _selectedChange: Subject = new Subject();\n\n  /** A reference to the overlay when the time select is opened as a popup. */\n  private _popupRef: OverlayRef;\n  /** A portal containing the popup for this time select. */\n  private _popupComponentPortal: ComponentPortal>;\n  /** Reference to the component instantiated in popup mode. */\n  private _popupComponentRef: ComponentRef>;\n  /** The element that was focused before the time select was opened. */\n  private _focusedElementBeforeOpen: HTMLElement | null = null;\n\n  private readonly _scrollStrategy: () => ScrollStrategy;\n\n  /** The input element this time select is associated with. */\n  _timeSelectInput: MatTimeSelectInputDirective;\n\n  /** Emits when the time select has been opened. */\n  @Output('open') openStream: EventEmitter = new EventEmitter();\n  /** Emits when the time select has been closed. */\n  @Output('close') closeStream: EventEmitter = new EventEmitter();\n\n  /** The id for the time select popup. */\n  id = `mat-time-select-${timeSelectUid++}`;\n\n  /** The initial time of the time select. */\n  @Input()\n  get startAt(): D | null { return this._startAt || (this._timeSelectInput ? this._timeSelectInput.value : null); }\n  set startAt(value: D | null) { this._startAt = this._getValidDateOrNull(this._timeAdapter.deserialize(value)); }\n\n  /** The color palette to use on the time select popup. */\n  @Input()\n  get color(): ThemePalette { return this._color || (this._timeSelectInput ? this._timeSelectInput.getThemePalette() : undefined); }\n  set color(value: ThemePalette) { this._color = value; }\n\n  /** Whether the time select pop-up should disabled. */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled !== undefined ? this._disabled : (this._timeSelectInput ? this._timeSelectInput.disabled : false);\n  }\n  set disabled(value: boolean) {\n    const disabled = coerceBooleanProperty(value);\n    if (this._disabled !== disabled) {\n      this._disabled = disabled;\n      this._disabledChange.next(disabled);\n    }\n  }\n\n  /** The currently selected time. */\n  @Input()\n  get selected(): D { return this._selected; }\n  set selected(value: D) { this._selected = value; }\n\n  /** Whether the time select is opened. */\n  @Input()\n  get opened(): boolean { return this._opened; }\n  set opened(value: boolean) { value ? this.open() : close(); }\n\n  /** Emits when the time select disabled state has been changed. */\n  get disabledChange(): Observable { return this._disabledChange.asObservable(); }\n  /** Emits when the time select selected time has been changed. */\n  get selectedChange(): Observable { return this._selectedChange.asObservable(); }\n\n  constructor(private _overlay: Overlay,\n              private _injector: Injector,\n              private _ngZone: NgZone,\n              private _viewContainerRef: ViewContainerRef,\n              @Inject(MAT_TIME_SELECT_SCROLL_STRATEGY) scrollStrategy: any,\n              @Optional() private _timeAdapter: TimeAdapter,\n              @Optional() private _dir: Directionality,\n              @Optional() @Inject(DOCUMENT) private _document: any) {\n    if (!this._timeAdapter) {\n      throw createMissingTimeImplError('TimeAdapter');\n    }\n\n    this._scrollStrategy = scrollStrategy;\n  }\n\n  ngOnDestroy() {\n    this.close();\n    this._inputSubscription.unsubscribe();\n    this._disabledChange.complete();\n\n    if (this._popupRef) {\n      this._popupRef.dispose();\n      this._popupComponentRef = null;\n    }\n  }\n\n  /**\n   * Selects the given time.\n   * @param time The date time to select.\n   */\n  select(time: D) {\n    const oldValue = this.selected;\n    const value = this._timeAdapter.clone(time);\n    this.selected = value;\n    if (!this._timeAdapter.sameTime(oldValue, value)) {\n      this._selectedChange.next(value);\n    }\n  }\n\n  /**\n   * Register an input with this time select.\n   * @param input The time select input to register with this time select.\n   */\n  registerInput(input: MatTimeSelectInputDirective) {\n    if (this._timeSelectInput) {\n      throw Error('A MatTimeSelect can only be associated with a single input.');\n    }\n    this._timeSelectInput = input;\n    this._inputSubscription = this._timeSelectInput.valueChange.subscribe((value: D | null) => this.selected = value);\n  }\n\n  /** Open the time select. */\n  open() {\n    if (this._opened || this.disabled) {\n      return;\n    }\n    if (!this._timeSelectInput) {\n      throw Error('Attempted to open an MatTimeSelect with no associated input.');\n    }\n    if (this._document) {\n      this._focusedElementBeforeOpen = this._document.activeElement;\n    }\n\n    this._openAsPopup();\n    this._opened = true;\n    this.openStream.emit();\n  }\n\n  /** Close the time select. */\n  close() {\n    if (!this._opened) {\n      return;\n    }\n    if (this._popupRef && this._popupRef.hasAttached()) {\n      this._popupRef.detach();\n    }\n    if (this._popupComponentPortal && this._popupComponentPortal.isAttached) {\n      this._popupComponentPortal.detach();\n    }\n\n    const completeClose = () => {\n      // The `_opened` could've been reset already if\n      // we got two events in quick succession.\n      if (this._opened) {\n        this._opened = false;\n        this.closeStream.emit();\n        this._focusedElementBeforeOpen = null;\n      }\n    };\n\n    if (this._focusedElementBeforeOpen && typeof this._focusedElementBeforeOpen.focus === 'function') {\n      // Because IE moves focus asynchronously, we can't count on it being restored before we've\n      // marked the time select as closed. If the event fires out of sequence and the element that\n      // we're refocusing opens the time select on focus, the user could be stuck with not being\n      // able to close the select panel at all. We work around it by making the logic, that marks\n      // the time select as closed, async as well.\n      this._focusedElementBeforeOpen.focus();\n      setTimeout(completeClose);\n    } else {\n      completeClose();\n    }\n  }\n\n  /** Open the time select as a popup. */\n  private _openAsPopup(): void {\n    this._popupComponentPortal = new ComponentPortal>(\n      MatTimeSelectContentComponent,\n      this._viewContainerRef,\n      this._createInjector()\n    );\n\n    if (!this._popupRef) {\n      this._createPopup();\n    }\n\n    if (!this._popupRef.hasAttached()) {\n      this._popupComponentRef = this._popupRef.attach(this._popupComponentPortal);\n      this._popupComponentRef.instance.valueChange.subscribe(\n        (value: Moment) => this.select(this._timeAdapter.deserialize(value.toISOString()))\n      );\n      this._setColor();\n\n      // Update the position once the select panel has rendered.\n      this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n        this._popupRef.updatePosition();\n      });\n    }\n  }\n\n  /** Create a portal injector to inject time select initial data. */\n  private _createInjector(): PortalInjector {\n    const data: MatTimeSelectData = {\n      value: this.startAt,\n      minTime: this._timeSelectInput && this._timeSelectInput.min,\n      maxTime: this._timeSelectInput && this._timeSelectInput.max\n    };\n    const injectorTokens = new WeakMap([\n      [MAT_TIME_SELECT_DATA, data]\n    ]);\n    return new PortalInjector(this._injector, injectorTokens);\n  }\n\n  /** Create the popup. */\n  private _createPopup(): void {\n    const overlayConfig = new OverlayConfig({\n      positionStrategy: this._createPopupPositionStrategy(),\n      hasBackdrop: true,\n      backdropClass: 'mat-overlay-transparent-backdrop',\n      direction: this._dir,\n      scrollStrategy: this._scrollStrategy(),\n      panelClass: 'mat-time-select-popup',\n    });\n\n    this._popupRef = this._overlay.create(overlayConfig);\n    this._popupRef.overlayElement.setAttribute('role', 'dialog');\n\n    merge(\n      this._popupRef.backdropClick(),\n      this._popupRef.detachments(),\n      this._popupRef.keydownEvents().pipe(filter(event => {\n        // Closing on alt + up is only valid when there's an input associated with the time select.\n        return event.keyCode === ESCAPE ||\n          (this._timeSelectInput && event.altKey && event.keyCode === UP_ARROW);\n      }))\n    ).subscribe(() => this.close());\n  }\n\n  /** Create the popup position strategy. */\n  private _createPopupPositionStrategy(): PositionStrategy {\n    return this._overlay.position()\n      .flexibleConnectedTo(this._timeSelectInput.getConnectedOverlayOrigin())\n      .withTransformOriginOn('.mat-time-select-content')\n      .withFlexibleDimensions(false)\n      .withViewportMargin(8)\n      .withLockedPosition()\n      .withPositions([\n        {\n          originX: 'start',\n          originY: 'bottom',\n          overlayX: 'start',\n          overlayY: 'top'\n        },\n        {\n          originX: 'start',\n          originY: 'top',\n          overlayX: 'start',\n          overlayY: 'bottom'\n        },\n        {\n          originX: 'end',\n          originY: 'bottom',\n          overlayX: 'end',\n          overlayY: 'top'\n        },\n        {\n          originX: 'end',\n          originY: 'top',\n          overlayX: 'end',\n          overlayY: 'bottom'\n        }\n      ]);\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return this._timeAdapter.isDateInstance(obj) && this._timeAdapter.isValid(obj) ? obj : null;\n  }\n\n  /** Passes the current theme color along to the time select overlay. */\n  private _setColor(): void {\n    if (this._popupComponentRef) {\n      this._popupComponentRef.instance.color = this.color;\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MatTimeSelectData.html":{"url":"interfaces/MatTimeSelectData.html","title":"interface - MatTimeSelectData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MatTimeSelectData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/time-select/src/lib/time-select.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        maxTime\n                                \n                                \n                                            Optional\n                                        minTime\n                                \n                                \n                                            Optional\n                                        units\n                                \n                                \n                                            Optional\n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        maxTime\n                                    \n                                \n                                \n                                    \n                                        maxTime:     D\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     D\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minTime\n                                    \n                                \n                                \n                                    \n                                        minTime:     D\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     D\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        units\n                                    \n                                \n                                \n                                    \n                                        units:     unitOfTime.All[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     unitOfTime.All[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     D\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     D\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  ComponentRef,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Inject,\n  InjectionToken,\n  Injector,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  Provider,\n  QueryList,\n  ViewChildren,\n  ViewContainerRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ESCAPE, UP_ARROW} from '@angular/cdk/keycodes';\nimport {Overlay, OverlayConfig, OverlayRef, PositionStrategy, ScrollStrategy} from '@angular/cdk/overlay';\nimport {ComponentPortal, PortalInjector} from '@angular/cdk/portal';\nimport {CanColor, CanColorCtor, mixinColor, ThemePalette} from '@angular/material';\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\nimport {filter, take} from 'rxjs/operators';\nimport {DurationInputArg1, DurationInputArg2, Moment, unitOfTime} from 'moment';\nimport {TimeAdapter} from './time-adapter.service';\nimport {createMissingTimeImplError} from './time-select-errors';\nimport {MatTimeSelectIntl} from './time-select-intl.service';\nimport {MatTimeSelectInputDirective} from './time-select-input.directive';\nimport {MatTimeUnitSelectComponent} from './time-unit-select.component';\n\n/** Used to generate a unique ID for each time select instance. */\nlet timeSelectUid = 0;\n\n/** Injection token used to initialize the time select data. */\nexport const MAT_TIME_SELECT_DATA = new InjectionToken('mat-time-select-data');\n\n/** Injection token that determines the scroll handling while the time select is opened. */\nexport const MAT_TIME_SELECT_SCROLL_STRATEGY = new InjectionToken ScrollStrategy>('mat-time-select-scroll-strategy');\n\n/** @docs-private */\nexport function MAT_TIME_SELECT_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\n  return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MAT_TIME_SELECT_SCROLL_STRATEGY_FACTORY_PROVIDER: Provider = {\n  provide: MAT_TIME_SELECT_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_TIME_SELECT_SCROLL_STRATEGY_FACTORY\n};\n\nexport interface MatTimeSelectData {\n  units?: unitOfTime.All[];\n  value?: D;\n  minTime?: D;\n  maxTime?: D;\n}\n\n/** @docs-private */\nexport class MatTimeSelectContentBase {\n\n  constructor(public _elementRef: ElementRef) { }\n\n}\n\nexport const _MatTimeSelectContentMixinBase: CanColorCtor & typeof MatTimeSelectContentBase =\n  mixinColor(MatTimeSelectContentBase);\n\n/**\n * Component used as the content for the time select popup.\n * @docs-private\n */\n@Component({\n  selector: 'mat-time-select-content',\n  templateUrl: './time-select-content.component.html',\n  styleUrls: ['./time-select-content.component.scss'],\n  exportAs: 'matTimeSelectContent',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatTimeSelectContentComponent extends _MatTimeSelectContentMixinBase implements CanColor {\n\n  /** @docs-private */\n  @Input() color: ThemePalette;\n  /** The array of unit of time selectable in the time select content. */\n  @Input() units: unitOfTime.All[];\n  /** The currently selected time of the time select content. */\n  @Input() value: Moment;\n  /** The minimum selectable time. */\n  @Input() minTime: Moment;\n  /** The minimum selectable time. */\n  @Input() maxTime: Moment;\n\n  /** Emits when the time select content selected time has been changed. */\n  @Output() valueChange: EventEmitter = new EventEmitter();\n\n  /** Reference to the internal time unit select components. */\n  @ViewChildren(MatTimeUnitSelectComponent) timeUnitSelectComponents: QueryList>;\n\n  /** @docs-private */\n  @HostBinding('class') readonly class = 'mat-time-select-content';\n\n  /** The hour clock type. Possible values: 12: 12 hour clock; 24: 24 hour clock */\n  hourClock: number;\n\n  /**\n   * The time period of the currently selected time of the time select content. Possible values: `am` when selected time hour is less\n   * than 12; `pm` when selected time hour is greater than or equal to 12.\n   */\n  get amPm(): string { return this.value ? (this.value.hour()  timeSelect.unit === 'hour')\n        .forEach(timeSelect => timeSelect.move(value === 'am' ? -12 : 12));\n    }\n  }\n\n  constructor(elementRef: ElementRef,\n              public _intl: MatTimeSelectIntl,\n              @Optional() private _timeAdapter: TimeAdapter,\n              @Optional() @Inject(MAT_TIME_SELECT_DATA) data: MatTimeSelectData) {\n    super(elementRef);\n\n    if (!this._timeAdapter) {\n      throw createMissingTimeImplError('TimeAdapter');\n    }\n\n    const time = this._timeAdapter.isDateInstance(data.value) && this._timeAdapter.isValid(data.value) ?\n      this._timeAdapter.clone(data.value) : this._timeAdapter.now();\n    const value = this._timeAdapter.toMoment(this._timeAdapter.clampTime(time, data.minTime, data.maxTime));\n    const localeData = value.localeData();\n    const displayFormat = localeData.longDateFormat('LTS');\n    this.hourClock = /hh?/g.test(displayFormat) ? 12 : 24;\n    this.value = value;\n    this.units = data.units || ['hour', 'minute'];\n    this.minTime = data.minTime ? this._timeAdapter.toMoment(data.minTime) : null;\n    this.maxTime = data.maxTime ? this._timeAdapter.toMoment(data.maxTime) : null;\n  }\n\n  /**\n   * Gets the value of the given unit of time.\n   * @param unit The unit of time to query.\n   * @returns The retrieved value.\n   */\n  get(unit: unitOfTime.All): number {\n    return this.value.get(unit);\n  }\n\n  /**\n   * Sets the value of the given unit of time.\n   * @param unit The unit of time to update.\n   * @param value The value to set.\n   */\n  set(unit: unitOfTime.All, value: number) {\n    this.value.set(unit, value);\n    this.valueChange.emit(this.value);\n  }\n\n  /**\n   * Gets the minimum allowed value of the given unit of time.\n   * @param unit The unit of time to query.\n   * @returns The minimum value.\n   */\n  getMin(unit: unitOfTime.All): number | null {\n    let min = null;\n    if (this.minTime && this.value.isSame(this.minTime, 'day')) {\n      if (this.getPrev(unit).isBefore(this.minTime)) {\n        min = this.value.get(unit);\n      }\n      if (this.getNext(unit).isBefore(this.minTime)) {\n        min = this.minTime.get(unit);\n      }\n    }\n    return min;\n  }\n\n  /**\n   * Gets the maximum allowed value of the given unit of time.\n   * @param unit The unit of time to query.\n   * @returns The maximum value.\n   */\n  getMax(unit: unitOfTime.All): number | null {\n    let max = null;\n    if (this.maxTime && this.value.isSame(this.maxTime, 'day')) {\n      if (this.getNext(unit).isAfter(this.maxTime)) {\n        max = this.value.get(unit);\n      }\n      if (this.getPrev(unit).isAfter(this.maxTime)) {\n        max = this.maxTime.get(unit);\n      }\n    }\n    return max;\n  }\n\n  /**\n   * Gets the value after moving up the given unit of time.\n   * @param unit The unit of time to move.\n   * @returns The new value.\n   */\n  getPrev(unit: unitOfTime.All): Moment {\n    const prev = this.value.clone().subtract(1 as DurationInputArg1, unit as DurationInputArg2);\n    return this.value.clone().set(unit, prev.get(unit));\n  }\n\n  /**\n   * Gets the value after moving down the given unit of time.\n   * @param unit The unit of time to move.\n   * @returns The new value.\n   */\n  getNext(unit: unitOfTime.All): Moment {\n    const next = this.value.clone().add(1 as DurationInputArg1, unit as DurationInputArg2);\n    return this.value.clone().set(unit, next.get(unit));\n  }\n\n  /**\n   * Gets the value before midday.\n   */\n  getAM(): Moment {\n    if (this.value.hour() >= 12) {\n      return this.value.clone().subtract(12, 'hour');\n    }\n    return this.value;\n  }\n\n  /**\n   * Gets the value after midday.\n   */\n  getPM(): Moment {\n    if (this.value.hour()  implements OnDestroy, CanColor {\n\n  /** Subscription to value changes in the associated input element. */\n  private _inputSubscription = Subscription.EMPTY;\n\n  private _startAt: D | null;\n  private _color: ThemePalette;\n  private _disabled: boolean;\n  private _selected: D;\n  private _opened = false;\n\n  private _disabledChange: Subject = new Subject();\n  private _selectedChange: Subject = new Subject();\n\n  /** A reference to the overlay when the time select is opened as a popup. */\n  private _popupRef: OverlayRef;\n  /** A portal containing the popup for this time select. */\n  private _popupComponentPortal: ComponentPortal>;\n  /** Reference to the component instantiated in popup mode. */\n  private _popupComponentRef: ComponentRef>;\n  /** The element that was focused before the time select was opened. */\n  private _focusedElementBeforeOpen: HTMLElement | null = null;\n\n  private readonly _scrollStrategy: () => ScrollStrategy;\n\n  /** The input element this time select is associated with. */\n  _timeSelectInput: MatTimeSelectInputDirective;\n\n  /** Emits when the time select has been opened. */\n  @Output('open') openStream: EventEmitter = new EventEmitter();\n  /** Emits when the time select has been closed. */\n  @Output('close') closeStream: EventEmitter = new EventEmitter();\n\n  /** The id for the time select popup. */\n  id = `mat-time-select-${timeSelectUid++}`;\n\n  /** The initial time of the time select. */\n  @Input()\n  get startAt(): D | null { return this._startAt || (this._timeSelectInput ? this._timeSelectInput.value : null); }\n  set startAt(value: D | null) { this._startAt = this._getValidDateOrNull(this._timeAdapter.deserialize(value)); }\n\n  /** The color palette to use on the time select popup. */\n  @Input()\n  get color(): ThemePalette { return this._color || (this._timeSelectInput ? this._timeSelectInput.getThemePalette() : undefined); }\n  set color(value: ThemePalette) { this._color = value; }\n\n  /** Whether the time select pop-up should disabled. */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled !== undefined ? this._disabled : (this._timeSelectInput ? this._timeSelectInput.disabled : false);\n  }\n  set disabled(value: boolean) {\n    const disabled = coerceBooleanProperty(value);\n    if (this._disabled !== disabled) {\n      this._disabled = disabled;\n      this._disabledChange.next(disabled);\n    }\n  }\n\n  /** The currently selected time. */\n  @Input()\n  get selected(): D { return this._selected; }\n  set selected(value: D) { this._selected = value; }\n\n  /** Whether the time select is opened. */\n  @Input()\n  get opened(): boolean { return this._opened; }\n  set opened(value: boolean) { value ? this.open() : close(); }\n\n  /** Emits when the time select disabled state has been changed. */\n  get disabledChange(): Observable { return this._disabledChange.asObservable(); }\n  /** Emits when the time select selected time has been changed. */\n  get selectedChange(): Observable { return this._selectedChange.asObservable(); }\n\n  constructor(private _overlay: Overlay,\n              private _injector: Injector,\n              private _ngZone: NgZone,\n              private _viewContainerRef: ViewContainerRef,\n              @Inject(MAT_TIME_SELECT_SCROLL_STRATEGY) scrollStrategy: any,\n              @Optional() private _timeAdapter: TimeAdapter,\n              @Optional() private _dir: Directionality,\n              @Optional() @Inject(DOCUMENT) private _document: any) {\n    if (!this._timeAdapter) {\n      throw createMissingTimeImplError('TimeAdapter');\n    }\n\n    this._scrollStrategy = scrollStrategy;\n  }\n\n  ngOnDestroy() {\n    this.close();\n    this._inputSubscription.unsubscribe();\n    this._disabledChange.complete();\n\n    if (this._popupRef) {\n      this._popupRef.dispose();\n      this._popupComponentRef = null;\n    }\n  }\n\n  /**\n   * Selects the given time.\n   * @param time The date time to select.\n   */\n  select(time: D) {\n    const oldValue = this.selected;\n    const value = this._timeAdapter.clone(time);\n    this.selected = value;\n    if (!this._timeAdapter.sameTime(oldValue, value)) {\n      this._selectedChange.next(value);\n    }\n  }\n\n  /**\n   * Register an input with this time select.\n   * @param input The time select input to register with this time select.\n   */\n  registerInput(input: MatTimeSelectInputDirective) {\n    if (this._timeSelectInput) {\n      throw Error('A MatTimeSelect can only be associated with a single input.');\n    }\n    this._timeSelectInput = input;\n    this._inputSubscription = this._timeSelectInput.valueChange.subscribe((value: D | null) => this.selected = value);\n  }\n\n  /** Open the time select. */\n  open() {\n    if (this._opened || this.disabled) {\n      return;\n    }\n    if (!this._timeSelectInput) {\n      throw Error('Attempted to open an MatTimeSelect with no associated input.');\n    }\n    if (this._document) {\n      this._focusedElementBeforeOpen = this._document.activeElement;\n    }\n\n    this._openAsPopup();\n    this._opened = true;\n    this.openStream.emit();\n  }\n\n  /** Close the time select. */\n  close() {\n    if (!this._opened) {\n      return;\n    }\n    if (this._popupRef && this._popupRef.hasAttached()) {\n      this._popupRef.detach();\n    }\n    if (this._popupComponentPortal && this._popupComponentPortal.isAttached) {\n      this._popupComponentPortal.detach();\n    }\n\n    const completeClose = () => {\n      // The `_opened` could've been reset already if\n      // we got two events in quick succession.\n      if (this._opened) {\n        this._opened = false;\n        this.closeStream.emit();\n        this._focusedElementBeforeOpen = null;\n      }\n    };\n\n    if (this._focusedElementBeforeOpen && typeof this._focusedElementBeforeOpen.focus === 'function') {\n      // Because IE moves focus asynchronously, we can't count on it being restored before we've\n      // marked the time select as closed. If the event fires out of sequence and the element that\n      // we're refocusing opens the time select on focus, the user could be stuck with not being\n      // able to close the select panel at all. We work around it by making the logic, that marks\n      // the time select as closed, async as well.\n      this._focusedElementBeforeOpen.focus();\n      setTimeout(completeClose);\n    } else {\n      completeClose();\n    }\n  }\n\n  /** Open the time select as a popup. */\n  private _openAsPopup(): void {\n    this._popupComponentPortal = new ComponentPortal>(\n      MatTimeSelectContentComponent,\n      this._viewContainerRef,\n      this._createInjector()\n    );\n\n    if (!this._popupRef) {\n      this._createPopup();\n    }\n\n    if (!this._popupRef.hasAttached()) {\n      this._popupComponentRef = this._popupRef.attach(this._popupComponentPortal);\n      this._popupComponentRef.instance.valueChange.subscribe(\n        (value: Moment) => this.select(this._timeAdapter.deserialize(value.toISOString()))\n      );\n      this._setColor();\n\n      // Update the position once the select panel has rendered.\n      this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n        this._popupRef.updatePosition();\n      });\n    }\n  }\n\n  /** Create a portal injector to inject time select initial data. */\n  private _createInjector(): PortalInjector {\n    const data: MatTimeSelectData = {\n      value: this.startAt,\n      minTime: this._timeSelectInput && this._timeSelectInput.min,\n      maxTime: this._timeSelectInput && this._timeSelectInput.max\n    };\n    const injectorTokens = new WeakMap([\n      [MAT_TIME_SELECT_DATA, data]\n    ]);\n    return new PortalInjector(this._injector, injectorTokens);\n  }\n\n  /** Create the popup. */\n  private _createPopup(): void {\n    const overlayConfig = new OverlayConfig({\n      positionStrategy: this._createPopupPositionStrategy(),\n      hasBackdrop: true,\n      backdropClass: 'mat-overlay-transparent-backdrop',\n      direction: this._dir,\n      scrollStrategy: this._scrollStrategy(),\n      panelClass: 'mat-time-select-popup',\n    });\n\n    this._popupRef = this._overlay.create(overlayConfig);\n    this._popupRef.overlayElement.setAttribute('role', 'dialog');\n\n    merge(\n      this._popupRef.backdropClick(),\n      this._popupRef.detachments(),\n      this._popupRef.keydownEvents().pipe(filter(event => {\n        // Closing on alt + up is only valid when there's an input associated with the time select.\n        return event.keyCode === ESCAPE ||\n          (this._timeSelectInput && event.altKey && event.keyCode === UP_ARROW);\n      }))\n    ).subscribe(() => this.close());\n  }\n\n  /** Create the popup position strategy. */\n  private _createPopupPositionStrategy(): PositionStrategy {\n    return this._overlay.position()\n      .flexibleConnectedTo(this._timeSelectInput.getConnectedOverlayOrigin())\n      .withTransformOriginOn('.mat-time-select-content')\n      .withFlexibleDimensions(false)\n      .withViewportMargin(8)\n      .withLockedPosition()\n      .withPositions([\n        {\n          originX: 'start',\n          originY: 'bottom',\n          overlayX: 'start',\n          overlayY: 'top'\n        },\n        {\n          originX: 'start',\n          originY: 'top',\n          overlayX: 'start',\n          overlayY: 'bottom'\n        },\n        {\n          originX: 'end',\n          originY: 'bottom',\n          overlayX: 'end',\n          overlayY: 'top'\n        },\n        {\n          originX: 'end',\n          originY: 'top',\n          overlayX: 'end',\n          overlayY: 'bottom'\n        }\n      ]);\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return this._timeAdapter.isDateInstance(obj) && this._timeAdapter.isValid(obj) ? obj : null;\n  }\n\n  /** Passes the current theme color along to the time select overlay. */\n  private _setColor(): void {\n    if (this._popupComponentRef) {\n      this._popupComponentRef.instance.color = this.color;\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MatTimeSelectInputEvent.html":{"url":"classes/MatTimeSelectInputEvent.html","title":"class - MatTimeSelectInputEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MatTimeSelectInputEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/time-select/src/lib/time-select-input.directive.ts\n        \n\n            \n                Description\n            \n            \n                An event used for time select input and change events. We don't always have access to a native\ninput or change event because the event may have been triggered by the user clicking on the\ncalendar popup. For consistency, we always use MatTimeSelectInputEvent instead.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                target\n                            \n                            \n                                    Public\n                                targetElement\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(target: MatTimeSelectInputDirective, targetElement: HTMLElement)\n                    \n                \n                        \n                            \n                                Defined in projects/time-select/src/lib/time-select-input.directive.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        target\n                                                  \n                                                        \n                                                                    MatTimeSelectInputDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        targetElement\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            target\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        target:     MatTimeSelectInputDirective\n\n                    \n                \n                    \n                        \n                            Type :     MatTimeSelectInputDirective\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-select-input.directive.ts:44\n                            \n                        \n\n                \n                    \n                        Reference to the time select input component that emitted the event. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            targetElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        targetElement:     HTMLElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-select-input.directive.ts:46\n                            \n                        \n\n                \n                    \n                        Reference to the native input element associated with the time select input. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     D\n\n                    \n                \n                    \n                        \n                            Type :     D\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-select-input.directive.ts:40\n                            \n                        \n\n                \n                    \n                        The new value for the target time select input. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  HostListener,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  Output\n} from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  ValidationErrors,\n  Validator,\n  ValidatorFn,\n  Validators\n} from '@angular/forms';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {DOWN_ARROW} from '@angular/cdk/keycodes';\nimport {MAT_INPUT_VALUE_ACCESSOR, MatFormField, ThemePalette} from '@angular/material';\nimport {Observable, Subject, Subscription} from 'rxjs';\nimport {TimeAdapter} from './time-adapter.service';\nimport {MAT_TIME_FORMATS, MatTimeFormats} from './time-formats';\nimport {MatTimeSelectComponent} from './time-select.component';\n\n/**\n * An event used for time select input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatTimeSelectInputEvent instead.\n */\nexport class MatTimeSelectInputEvent {\n\n  /** The new value for the target time select input. */\n  value: D;\n\n  constructor(\n    /** Reference to the time select input component that emitted the event. */\n    public target: MatTimeSelectInputDirective,\n    /** Reference to the native input element associated with the time select input. */\n    public targetElement: HTMLElement) {\n    this.value = this.target.value;\n  }\n\n}\n\n/** Directive used to connect an input to a MatTimeSelectComponent. */\n@Directive({\n  selector: 'input[matTimeSelect]',\n  providers: [\n    {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MatTimeSelectInputDirective), multi: true},\n    {provide: NG_VALIDATORS, useExisting: forwardRef(() => MatTimeSelectInputDirective), multi: true},\n    {provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatTimeSelectInputDirective}\n  ],\n  exportAs: 'matTimeSelectInput'\n})\nexport class MatTimeSelectInputDirective implements OnDestroy, ControlValueAccessor, Validator {\n\n  private _timeSelectSubscription = Subscription.EMPTY;\n  private _localeSubscription: Subscription = Subscription.EMPTY;\n\n  private _timeSelect: MatTimeSelectComponent;\n\n  private _value: D;\n  private _min: D;\n  private _max: D;\n  private _disabled: boolean;\n\n  private _valueChange: Subject = new Subject();\n  private _disabledChange: Subject = new Subject();\n\n  /** The form control validator for whether the input parses. */\n  private readonly _parseValidator: ValidatorFn;\n  /** The form control validator for the min date time. */\n  private readonly _minValidator: ValidatorFn;\n  /** The form control validator for the max date time. */\n  private readonly _maxValidator: ValidatorFn;\n  /** The combined form control validator for this input. */\n  private readonly _validator: ValidatorFn | null;\n\n  /** Whether the last value set on the input was valid. */\n  private _lastValueValid: boolean;\n\n  /** Emits when a `change` event is fired on this ``. */\n  @Output() readonly timeChange: EventEmitter> = new EventEmitter>();\n  /** Emits when an `input` event is fired on this ``. */\n  @Output() readonly timeInput: EventEmitter> = new EventEmitter>();\n\n  /** Emits when the value changes (either due to user input or programmatic change). */\n  valueChange: Observable = this._valueChange.asObservable();\n  /** Emits when the disabled state has changed. */\n  disabledChange: Observable = this._disabledChange.asObservable();\n\n  private _onChange: (value: any) => void = () => {};\n  private _onTouched: () => void = () => {};\n  private _onValidatorChange: () => void = () => {};\n\n  /** The time select that this input is associated with. */\n  @Input()\n  set matTimeSelect(value: MatTimeSelectComponent) {\n    if (!value) {\n      return;\n    }\n\n    this._timeSelect = value;\n    this._timeSelect.registerInput(this);\n    this._timeSelectSubscription.unsubscribe();\n\n    this._timeSelectSubscription = this._timeSelect.selectedChange.subscribe((selected: D) => {\n      this.value = selected;\n      this._onChange(selected);\n      this._onTouched();\n      this.timeInput.emit(new MatTimeSelectInputEvent(this, this._elementRef.nativeElement));\n      this.timeChange.emit(new MatTimeSelectInputEvent(this, this._elementRef.nativeElement));\n    });\n  }\n\n  /** The value of the input. */\n  @Input()\n  get value(): D | null { return this._value; }\n  set value(value: D | null) {\n    value = this._timeAdapter.deserialize(value);\n    this._lastValueValid = !value || this._timeAdapter.isValid(value);\n    value = this._getValidDateOrNull(value);\n    const oldValue = this._value;\n    this._value = value;\n    this._formatValue(value);\n\n    if (!this._timeAdapter.sameTime(oldValue, value)) {\n      this._valueChange.next(value);\n    }\n  }\n\n  /** The minimum valid date time. */\n  @Input()\n  get min(): D | null { return this._min; }\n  set min(value: D | null) {\n    this._min = this._getValidDateOrNull(this._timeAdapter.deserialize(value));\n    this._onValidatorChange();\n  }\n\n  /** The maximum valid date time. */\n  @Input()\n  get max(): D | null { return this._max; }\n  set max(value: D | null) {\n    this._max = this._getValidDateOrNull(this._timeAdapter.deserialize(value));\n    this._onValidatorChange();\n  }\n\n  /** Whether the time select input is disabled. */\n  @HostBinding()\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value: boolean) {\n    const disabled = coerceBooleanProperty(value);\n    const element = this._elementRef.nativeElement;\n    if (this.disabled !== disabled) {\n      this._disabled = disabled;\n      this._disabledChange.next(disabled);\n    }\n    if (disabled && element.blur) {\n      element.blur();\n    }\n  }\n\n  /** @docs-private */\n  @HostBinding('attr.aria-haspopup')\n  get _ariaHasPopup(): boolean { return true; }\n\n  /** @docs-private */\n  @HostBinding('attr.aria-owns')\n  get _ariaOwns(): boolean { return (this._timeSelect && this._timeSelect.opened && !!this._timeSelect.id) || null; }\n\n  /** @docs-private */\n  @HostBinding('attr.min')\n  get _minTime(): string | null { return this.min ? this._timeAdapter.toIso8601(this.min) : null; }\n\n  /** @docs-private */\n  @HostBinding('attr.max')\n  get _maxTime(): string | null { return this.max ? this._timeAdapter.toIso8601(this.max) : null; }\n\n  constructor(private _elementRef: ElementRef,\n              @Optional() private _timeAdapter: TimeAdapter,\n              @Optional() @Inject(MAT_TIME_FORMATS) private _timeFormats: MatTimeFormats,\n              @Optional() private _formField: MatFormField) {\n    this._parseValidator = (): ValidationErrors | null => {\n      return this._lastValueValid ? null : {'matTimeSelectParse': {'text': this._elementRef.nativeElement.value}};\n    };\n\n    this._minValidator = (control: AbstractControl): ValidationErrors | null => {\n      const value = this._getValidDateOrNull(this._timeAdapter.deserialize(control.value));\n      return !this.min || !value || this._timeAdapter.compareTime(this.min, value)  {\n      const value = this._getValidDateOrNull(this._timeAdapter.deserialize(control.value));\n      return !this.max || !value || this._timeAdapter.compareTime(this.max, value) >= 0 ?\n        null : {'matTimeSelectMax': {'max': this.max, 'actual': value}};\n    };\n\n    this._validator = Validators.compose([\n      this._parseValidator,\n      this._minValidator,\n      this._maxValidator\n    ]);\n\n    this._localeSubscription = this._timeAdapter.localeChanges.subscribe(\n      () => this.value = this.value\n    );\n  }\n\n  ngOnDestroy() {\n    this._timeSelectSubscription.unsubscribe();\n    this._localeSubscription.unsubscribe();\n    this._valueChange.complete();\n    this._disabledChange.complete();\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  writeValue(value: any): void {\n    this.value = value;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /** @docs-private */\n  validate(control: AbstractControl): ValidationErrors | null {\n    return this._validator ? this._validator(control) : null;\n  }\n\n  /** @docs-private */\n  registerOnValidatorChange(fn: () => void): void {\n    this._onValidatorChange = fn;\n  }\n\n  /**\n   * Handle keydown event.\n   * @param event The event object.\n   */\n  @HostListener('keydown', ['$event'])\n  onKeydown(event: KeyboardEvent) {\n    const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n\n    if (this._timeSelect && isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n      this._timeSelect.open();\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * Handle input event.\n   * @param value The current value of the input.\n   */\n  @HostListener('input', ['$event.target.value'])\n  onInput(value: string) {\n    let time = this._timeAdapter.parse(value, this._timeFormats.parse.timeInput);\n    this._lastValueValid = !time || this._timeAdapter.isValid(time);\n    time = this._getValidDateOrNull(time);\n\n    if (!this._timeAdapter.sameTime(this._value, time)) {\n      this._value = time;\n      this._onChange(time);\n      this._valueChange.next(time);\n      this.timeInput.emit(new MatTimeSelectInputEvent(this, this._elementRef.nativeElement));\n    }\n  }\n\n  /**\n   * Handle change event.\n   */\n  @HostListener('change')\n  onChange() {\n    this.timeChange.emit(new MatTimeSelectInputEvent(this, this._elementRef.nativeElement));\n  }\n\n  /**\n   * Handle blur event.\n   */\n  @HostListener('blur')\n  onBlur() {\n    if (this.value) {\n      this._formatValue(this.value);\n    }\n    this._onTouched();\n  }\n\n  /** Returns the palette used by the input's form field, if any. */\n  getThemePalette(): ThemePalette {\n    return this._formField ? this._formField.color : undefined;\n  }\n\n  /**\n   * Gets the element that the time select popup should be connected to.\n   * @return The element to connect the popup to.\n   */\n  getConnectedOverlayOrigin(): ElementRef {\n    return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n  }\n\n  /** Formats a value and sets it on the input element. */\n  private _formatValue(value: D | null) {\n    this._elementRef.nativeElement.value = value ? this._timeAdapter.format(value, this._timeFormats.display.timeInput) : '';\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return this._timeAdapter.isDateInstance(obj) && this._timeAdapter.isValid(obj) ? obj : null;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatTimeSelectIntl.html":{"url":"injectables/MatTimeSelectIntl.html","title":"injectable - MatTimeSelectIntl","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MatTimeSelectIntl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/time-select/src/lib/time-select-intl.service.ts\n        \n\n            \n                Description\n            \n            \n                TimeSelect data that requires internationalization. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amLabel\n                            \n                            \n                                    Readonly\n                                changes\n                            \n                            \n                                openTimeSelectLabel\n                            \n                            \n                                pmLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            amLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        amLabel:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'AM'\n                        \n                    \n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-select-intl.service.ts:18\n                            \n                        \n\n                \n                    \n                        A label for the a.m. button toggle (used by screen readers). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            changes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        changes:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-select-intl.service.ts:12\n                            \n                        \n\n                \n                    \n                        Stream that emits whenever the labels here are changed. Use this to notify\ncomponents if the labels have changed after initialization.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openTimeSelectLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        openTimeSelectLabel:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Open time select'\n                        \n                    \n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-select-intl.service.ts:15\n                            \n                        \n\n                \n                    \n                        A label for the button used to open the time select popup (used by screen readers). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pmLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pmLabel:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'PM'\n                        \n                    \n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-select-intl.service.ts:21\n                            \n                        \n\n                \n                    \n                        A label for the p.m. button toggle (used by screen readers). \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n/** TimeSelect data that requires internationalization. */\n@Injectable()\nexport class MatTimeSelectIntl {\n\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  readonly changes: Subject = new Subject();\n\n  /** A label for the button used to open the time select popup (used by screen readers). */\n  openTimeSelectLabel = 'Open time select';\n\n  /** A label for the a.m. button toggle (used by screen readers). */\n  amLabel = 'AM';\n\n  /** A label for the p.m. button toggle (used by screen readers). */\n  pmLabel = 'PM';\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MatTimeSelectModule.html":{"url":"modules/MatTimeSelectModule.html","title":"module - MatTimeSelectModule","body":"\n                   \n\n\n\n\n    Modules\n    MatTimeSelectModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/time-select/src/lib/time-select.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MatTimeSelectComponent\n                        \n                        \n                            MatTimeSelectContentComponent\n                        \n                        \n                            MatTimeSelectInputDirective\n                        \n                        \n                            MatTimeSelectToggleComponent\n                        \n                        \n                            MatTimeSelectToggleIconDirective\n                        \n                        \n                            MatTimeUnitOptionComponent\n                        \n                        \n                            MatTimeUnitSelectComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            MatTimeSelectContentComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            MatTimeSelectIntl\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MatTimeSelectComponent\n                        \n                        \n                            MatTimeSelectContentComponent\n                        \n                        \n                            MatTimeSelectInputDirective\n                        \n                        \n                            MatTimeSelectToggleComponent\n                        \n                        \n                            MatTimeSelectToggleIconDirective\n                        \n                        \n                            MatTimeUnitOptionComponent\n                        \n                        \n                            MatTimeUnitSelectComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {MatButtonModule, MatButtonToggleModule, MatIconModule, MatRippleModule} from '@angular/material';\n\nimport {MatTimeSelectIntl} from './time-select-intl.service';\n\nimport {\n  MAT_TIME_SELECT_SCROLL_STRATEGY_FACTORY_PROVIDER,\n  MatTimeSelectComponent,\n  MatTimeSelectContentComponent\n} from './time-select.component';\nimport {MatTimeSelectInputDirective} from './time-select-input.directive';\nimport {MatTimeSelectToggleComponent, MatTimeSelectToggleIconDirective} from './time-select-toggle.component';\nimport {MatTimeUnitOptionComponent} from './time-unit-option.component';\nimport {MatTimeUnitSelectComponent} from './time-unit-select.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    A11yModule,\n    PortalModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatIconModule,\n    MatRippleModule\n  ],\n  declarations: [\n    MatTimeSelectComponent,\n    MatTimeSelectContentComponent,\n    MatTimeSelectInputDirective,\n    MatTimeSelectToggleComponent,\n    MatTimeSelectToggleIconDirective,\n    MatTimeUnitOptionComponent,\n    MatTimeUnitSelectComponent\n  ],\n  exports: [\n    MatTimeSelectComponent,\n    MatTimeSelectContentComponent,\n    MatTimeSelectInputDirective,\n    MatTimeSelectToggleComponent,\n    MatTimeSelectToggleIconDirective,\n    MatTimeUnitOptionComponent,\n    MatTimeUnitSelectComponent\n  ],\n  entryComponents: [\n    MatTimeSelectContentComponent\n  ],\n  providers: [\n    MatTimeSelectIntl,\n    MAT_TIME_SELECT_SCROLL_STRATEGY_FACTORY_PROVIDER\n  ]\n})\nexport class MatTimeSelectModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatTimeSelectToggleComponent.html":{"url":"components/MatTimeSelectToggleComponent.html","title":"component - MatTimeSelectToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MatTimeSelectToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n\n\n\n    \n    File\n\n\n    projects/time-select/src/lib/time-select-toggle.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                AfterContentInit\n                OnChanges\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                matTimeSelectToggle\n            \n\n\n\n\n\n\n\n            \n                selector\n                mat-time-select-toggle\n            \n\n            \n                styleUrls\n                ./time-select-toggle.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./time-select-toggle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _intl\n                            \n                            \n                                button\n                            \n                            \n                                customIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                disableRipple\n                            \n                            \n                                for\n                            \n                            \n                                tabIndex\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                attr.tabindex\n                            \n                            \n                                class\n                            \n                            \n                                class.mat-accent\n                            \n                            \n                                class.mat-time-select-toggle-active\n                            \n                            \n                                class.mat-warn\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    disabled\n                                \n                                \n                                    disableRipple\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_intl: MatTimeSelectIntl, _changeDetectorRef: ChangeDetectorRef, defaultTabIndex: string)\n                    \n                \n                        \n                            \n                                Defined in projects/time-select/src/lib/time-select-toggle.component.ts:91\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _intl\n                                                  \n                                                        \n                                                                    MatTimeSelectIntl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _changeDetectorRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        defaultTabIndex\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                    \n                        Whether the toggle button is disabled. \n\n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-select-toggle.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableRipple\n                    \n                    \n                        Whether ripples on the toggle should be disabled. \n\n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-select-toggle.component.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        for\n                    \n                    \n                        Time select instance that the button will toggle. \n\n                            \n                            Type :    MatTimeSelectComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-select-toggle.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tabIndex\n                    \n                    \n                        Tabindex for the toggle. \n\n                            \n                            Type :    number | null\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-select-toggle.component.ts:48\n                            \n                        \n            \n        \n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            attr.tabindex\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        attr.tabindex:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-select-toggle.component.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-select-toggle.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class.mat-accent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class.mat-accent:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-select-toggle.component.ts:87\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class.mat-time-select-toggle-active\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class.mat-time-select-toggle-active:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-select-toggle.component.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class.mat-warn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class.mat-warn:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-select-toggle.component.ts:91\n                            \n                        \n\n\n            \n        \n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            focus\n                            \n                            \n                        \n                    \n                \n                \n                    \nfocus()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-select-toggle.component.ts:116\n                            \n                        \n\n\n                \n                    \n                            Handle focus event. \n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterContentInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterContentInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-select-toggle.component.ts:100\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-select-toggle.component.ts:104\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-select-toggle.component.ts:110\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            open\n                            \n                            \n                        \n                    \n                \n                \n                    \nopen(event: Event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-select-toggle.component.ts:124\n                            \n                        \n\n\n                \n                    \n                            Open the time select.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    Event\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The triggered event to open the time select.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _intl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _intl:     MatTimeSelectIntl\n\n                    \n                \n                    \n                        \n                            Type :     MatTimeSelectIntl\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-select-toggle.component.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            button\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        button:     MatButton\n\n                    \n                \n                    \n                        \n                            Type :     MatButton\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('button')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-select-toggle.component.ts:53\n                            \n                        \n\n                \n                    \n                        Underlying button element. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        customIcon:     MatTimeSelectToggleIconDirective\n\n                    \n                \n                    \n                        \n                            Type :     MatTimeSelectToggleIconDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild(MatTimeSelectToggleIconDirective)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-select-toggle.component.ts:51\n                            \n                        \n\n                \n                    \n                        Custom icon set by the consumer. \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n\n\n                \n                    \n                        setdisabled(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/time-select/src/lib/time-select-toggle.component.ts:60\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        disableRipple\n                    \n                \n\n\n                \n                    \n                        setdisableRipple(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/time-select/src/lib/time-select-toggle.component.ts:69\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  AfterContentInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  HostBinding,\n  HostListener,\n  Input,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {MatButton} from '@angular/material';\nimport {merge, of, Subscription} from 'rxjs';\nimport {MatTimeSelectIntl} from './time-select-intl.service';\nimport {MatTimeSelectComponent} from './time-select.component';\n\n/** Can be used to override the icon of a `matTimeSelectToggle`. */\n@Directive({\n  selector: '[matTimeSelectToggleIcon]'\n})\nexport class MatTimeSelectToggleIconDirective {}\n\n@Component({\n  selector: 'mat-time-select-toggle',\n  templateUrl: './time-select-toggle.component.html',\n  styleUrls: ['./time-select-toggle.component.scss'],\n  exportAs: 'matTimeSelectToggle',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatTimeSelectToggleComponent implements AfterContentInit, OnChanges, OnDestroy {\n\n  private _stateChanges = Subscription.EMPTY;\n\n  private _disabled: boolean;\n  private _disableRipple: boolean;\n\n  /** Time select instance that the button will toggle. */\n  @Input('for') timeSelect: MatTimeSelectComponent;\n  /** Tabindex for the toggle. */\n  @Input() tabIndex: number | null;\n\n  /** Custom icon set by the consumer. */\n  @ContentChild(MatTimeSelectToggleIconDirective) customIcon: MatTimeSelectToggleIconDirective;\n  /** Underlying button element. */\n  @ViewChild('button') button: MatButton;\n\n  /** Whether the toggle button is disabled. */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled === undefined ? this.timeSelect.disabled : this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n\n  /** Whether ripples on the toggle should be disabled. */\n  @Input()\n  get disableRipple(): boolean {\n    return this._disableRipple;\n  }\n  set disableRipple(value: boolean) {\n    this._disableRipple = coerceBooleanProperty(value);\n  }\n\n  /** @docs-private */\n  @HostBinding('class')\n  get class(): string { return 'mat-time-select-toggle'; }\n\n  /** @docs-private */\n  @HostBinding('attr.tabindex')\n  get tabindex(): string { return '-1'; }\n\n  /** @docs-private */\n  @HostBinding('class.mat-time-select-toggle-active')\n  get active(): boolean { return this.timeSelect && this.timeSelect.opened; }\n\n  /** @docs-private */\n  @HostBinding('class.mat-accent')\n  get accent(): boolean { return this.timeSelect && this.timeSelect.color === 'accent'; }\n\n  /** @docs-private */\n  @HostBinding('class.mat-warn')\n  get warn(): boolean { return this.timeSelect && this.timeSelect.color === 'warn'; }\n\n  constructor(public _intl: MatTimeSelectIntl,\n              private _changeDetectorRef: ChangeDetectorRef,\n              @Attribute('tabindex') defaultTabIndex: string) {\n    const parsedTabIndex = parseInt(defaultTabIndex, 10);\n    this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n  }\n\n  ngAfterContentInit() {\n    this._watchStateChanges();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.timeSelect) {\n      this._watchStateChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.unsubscribe();\n  }\n\n  /** Handle focus event. */\n  @HostListener('focus')\n  onFocus() {\n    this.button.focus();\n  }\n\n  /**\n   * Open the time select.\n   * @param event The triggered event to open the time select.\n   */\n  open(event: Event): void {\n    if (this.timeSelect && !this.disabled) {\n      this.timeSelect.open();\n      event.stopPropagation();\n    }\n  }\n\n  private _watchStateChanges() {\n    const timeSelectDisabled = this.timeSelect ? this.timeSelect.disabledChange : of();\n    const inputDisabled = this.timeSelect && this.timeSelect._timeSelectInput ?\n      this.timeSelect._timeSelectInput.disabledChange : of();\n    const timeSelectToggled = this.timeSelect ?\n      merge(this.timeSelect.openStream, this.timeSelect.closeStream) :\n      of();\n\n    this._stateChanges.unsubscribe();\n    this._stateChanges = merge(\n      this._intl.changes,\n      timeSelectDisabled,\n      inputDisabled,\n      timeSelectToggled\n    ).subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n    \n    \n  \n\n  \n\n\n    \n\n    \n                \n                    ./time-select-toggle.component.scss\n                \n                .mat-form-field-appearance-legacy {\n  .mat-form-field-prefix,\n  .mat-form-field-suffix {\n    .mat-time-select-toggle-default-icon {\n      width: 1em;\n    }\n  }\n}\n\n.mat-form-field:not(.mat-form-field-appearance-legacy) {\n  .mat-form-field-prefix,\n  .mat-form-field-suffix {\n    .mat-time-select-toggle-default-icon {\n      display: block;\n      width: 1.5em;\n      height: 1.5em;\n    }\n\n    .mat-icon-button .mat-time-select-toggle-default-icon {\n      margin: auto;\n    }\n  }\n}\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'MatTimeSelectComponent', 'selector': 'mat-time-select'},{'name': 'MatTimeSelectContentComponent', 'selector': 'mat-time-select-content'},{'name': 'MatTimeSelectToggleComponent', 'selector': 'mat-time-select-toggle'},{'name': 'MatTimeUnitOptionComponent', 'selector': 'mat-time-unit-option'},{'name': 'MatTimeUnitSelectComponent', 'selector': 'mat-time-unit-select'}];\n    var DIRECTIVES = [{'name': 'MatTimeSelectInputDirective', 'selector': 'input[matTimeSelect]'},{'name': 'MatTimeSelectToggleIconDirective', 'selector': '[matTimeSelectToggleIcon]'}];\n    var ACTUAL_COMPONENT = {'name': 'MatTimeSelectToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MatTimeSelectToggleIconDirective.html":{"url":"directives/MatTimeSelectToggleIconDirective.html","title":"directive - MatTimeSelectToggleIconDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MatTimeSelectToggleIconDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/time-select/src/lib/time-select-toggle.component.ts\n        \n\n            \n                Description\n            \n            \n                Can be used to override the icon of a matTimeSelectToggle. \n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [matTimeSelectToggleIcon]\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AfterContentInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  HostBinding,\n  HostListener,\n  Input,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {MatButton} from '@angular/material';\nimport {merge, of, Subscription} from 'rxjs';\nimport {MatTimeSelectIntl} from './time-select-intl.service';\nimport {MatTimeSelectComponent} from './time-select.component';\n\n/** Can be used to override the icon of a `matTimeSelectToggle`. */\n@Directive({\n  selector: '[matTimeSelectToggleIcon]'\n})\nexport class MatTimeSelectToggleIconDirective {}\n\n@Component({\n  selector: 'mat-time-select-toggle',\n  templateUrl: './time-select-toggle.component.html',\n  styleUrls: ['./time-select-toggle.component.scss'],\n  exportAs: 'matTimeSelectToggle',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatTimeSelectToggleComponent implements AfterContentInit, OnChanges, OnDestroy {\n\n  private _stateChanges = Subscription.EMPTY;\n\n  private _disabled: boolean;\n  private _disableRipple: boolean;\n\n  /** Time select instance that the button will toggle. */\n  @Input('for') timeSelect: MatTimeSelectComponent;\n  /** Tabindex for the toggle. */\n  @Input() tabIndex: number | null;\n\n  /** Custom icon set by the consumer. */\n  @ContentChild(MatTimeSelectToggleIconDirective) customIcon: MatTimeSelectToggleIconDirective;\n  /** Underlying button element. */\n  @ViewChild('button') button: MatButton;\n\n  /** Whether the toggle button is disabled. */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled === undefined ? this.timeSelect.disabled : this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n\n  /** Whether ripples on the toggle should be disabled. */\n  @Input()\n  get disableRipple(): boolean {\n    return this._disableRipple;\n  }\n  set disableRipple(value: boolean) {\n    this._disableRipple = coerceBooleanProperty(value);\n  }\n\n  /** @docs-private */\n  @HostBinding('class')\n  get class(): string { return 'mat-time-select-toggle'; }\n\n  /** @docs-private */\n  @HostBinding('attr.tabindex')\n  get tabindex(): string { return '-1'; }\n\n  /** @docs-private */\n  @HostBinding('class.mat-time-select-toggle-active')\n  get active(): boolean { return this.timeSelect && this.timeSelect.opened; }\n\n  /** @docs-private */\n  @HostBinding('class.mat-accent')\n  get accent(): boolean { return this.timeSelect && this.timeSelect.color === 'accent'; }\n\n  /** @docs-private */\n  @HostBinding('class.mat-warn')\n  get warn(): boolean { return this.timeSelect && this.timeSelect.color === 'warn'; }\n\n  constructor(public _intl: MatTimeSelectIntl,\n              private _changeDetectorRef: ChangeDetectorRef,\n              @Attribute('tabindex') defaultTabIndex: string) {\n    const parsedTabIndex = parseInt(defaultTabIndex, 10);\n    this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n  }\n\n  ngAfterContentInit() {\n    this._watchStateChanges();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.timeSelect) {\n      this._watchStateChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.unsubscribe();\n  }\n\n  /** Handle focus event. */\n  @HostListener('focus')\n  onFocus() {\n    this.button.focus();\n  }\n\n  /**\n   * Open the time select.\n   * @param event The triggered event to open the time select.\n   */\n  open(event: Event): void {\n    if (this.timeSelect && !this.disabled) {\n      this.timeSelect.open();\n      event.stopPropagation();\n    }\n  }\n\n  private _watchStateChanges() {\n    const timeSelectDisabled = this.timeSelect ? this.timeSelect.disabledChange : of();\n    const inputDisabled = this.timeSelect && this.timeSelect._timeSelectInput ?\n      this.timeSelect._timeSelectInput.disabledChange : of();\n    const timeSelectToggled = this.timeSelect ?\n      merge(this.timeSelect.openStream, this.timeSelect.closeStream) :\n      of();\n\n    this._stateChanges.unsubscribe();\n    this._stateChanges = merge(\n      this._intl.changes,\n      timeSelectDisabled,\n      inputDisabled,\n      timeSelectToggled\n    ).subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MatTimeUnitOptionBase.html":{"url":"classes/MatTimeUnitOptionBase.html","title":"class - MatTimeUnitOptionBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MatTimeUnitOptionBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/time-select/src/lib/time-unit-option.component.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  forwardRef,\n  HostBinding,\n  HostListener,\n  Inject,\n  Input,\n  OnInit,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {CanDisableRippleCtor, mixinDisableRipple} from '@angular/material';\nimport {MatTimeUnitSelectComponent} from './time-unit-select.component';\n\nexport class MatTimeUnitOptionBase { }\nexport const _MatTimeUnitOptionMixinBase: CanDisableRippleCtor & typeof MatTimeUnitOptionBase =\n  mixinDisableRipple(MatTimeUnitOptionBase);\n\n/** Single time option inside a `` element */\n@Component({\n  selector: 'mat-time-unit-option',\n  templateUrl: './time-unit-option.component.html',\n  styleUrls: ['./time-unit-option.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatTimeUnitOptionComponent extends _MatTimeUnitOptionMixinBase implements OnInit {\n\n  private _disabled = false;\n  private _selected = false;\n\n  /** The value of the option. */\n  @Input() value: number;\n  /** Whether ripples for the option are disabled. */\n  @Input() disableRipple: boolean;\n\n  /** The element containing the display text of the option. */\n  @ViewChild('text') _text: ElementRef;\n\n  /** @docs-private */\n  @HostBinding('class') readonly class = 'mat-time-unit-option';\n  /** @docs-private */\n  @HostBinding('attr.role') readonly role = 'option';\n  /** @docs-private */\n  @HostBinding('attr.tabindex') readonly tabindex = -1;\n\n  /** Whether or not the option is currently selected. */\n  @Input()\n  @HostBinding('class.mat-time-unit-option-selected')\n  get selected(): boolean { return this._selected; }\n  set selected(value: boolean) {\n    const selected = coerceBooleanProperty(value);\n    if (this._selected !== selected) {\n      this._selected = selected;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /** Whether the option is disabled. */\n  @Input()\n  @HostBinding('class.mat-time-unit-option-disabled')\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value: boolean) {\n    const disabled = coerceBooleanProperty(value);\n    if (this._disabled !== disabled) {\n      this._disabled = disabled;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /** @docs-private */\n  @HostBinding('attr.aria-disabled')\n  get ariaDisabled(): string { return this.disabled.toString(); }\n\n  constructor(private _elementRef: ElementRef,\n              private _changeDetectorRef: ChangeDetectorRef,\n              @Inject(forwardRef(() => MatTimeUnitSelectComponent)) public timeUnitSelect: MatTimeUnitSelectComponent) {\n    super();\n  }\n\n  ngOnInit() {\n    this.timeUnitSelect.valueChange.subscribe(value => this.selected = this.value === value);\n  }\n\n  /** Gets the label to be used when determining whether the option should be focused. */\n  getLabel(): string {\n    return this._text ? (this._text.nativeElement.textContent || '').trim() : '';\n  }\n\n  /** Gets the host DOM element. */\n  _getHostElement(): HTMLElement {\n    return this._elementRef.nativeElement;\n  }\n\n  /** Whether ripples for the option are disabled. */\n  _isRippleDisabled(): boolean {\n    return this.disabled || this.disableRipple;\n  }\n\n  /** Handle click on the option. */\n  @HostListener('click')\n  _onClick() {\n    if (!this.disabled) {\n      this.timeUnitSelect.move(this.value - this.timeUnitSelect.value);\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatTimeUnitOptionComponent.html":{"url":"components/MatTimeUnitOptionComponent.html","title":"component - MatTimeUnitOptionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MatTimeUnitOptionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n\n\n\n    \n    File\n\n\n    projects/time-select/src/lib/time-unit-option.component.ts\n\n\n    \n        Description\n    \n    \n        Single time option inside a  element \n\n    \n\n    \n        Extends\n    \n    \n            _MatTimeUnitOptionMixinBase\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                mat-time-unit-option\n            \n\n            \n                styleUrls\n                ./time-unit-option.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./time-unit-option.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _text\n                            \n                            \n                                    Public\n                                timeUnitSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _getHostElement\n                            \n                            \n                                _isRippleDisabled\n                            \n                            \n                                getLabel\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                disableRipple\n                            \n                            \n                                selected\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                attr.aria-disabled\n                            \n                            \n                                attr.role\n                            \n                            \n                                attr.tabindex\n                            \n                            \n                                class\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selected\n                                \n                                \n                                    disabled\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_elementRef: ElementRef, _changeDetectorRef: ChangeDetectorRef, timeUnitSelect: MatTimeUnitSelectComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/time-select/src/lib/time-unit-option.component.ts:77\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _changeDetectorRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeUnitSelect\n                                                  \n                                                        \n                                                                    MatTimeUnitSelectComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                    \n                        Whether the option is disabled. \n\n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-unit-option.component.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableRipple\n                    \n                    \n                        Whether ripples for the option are disabled. \n\n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-unit-option.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Whether or not the option is currently selected. \n\n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-unit-option.component.ts:54\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                        The value of the option. \n\n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-unit-option.component.ts:37\n                            \n                        \n            \n        \n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            attr.aria-disabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        attr.aria-disabled:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-unit-option.component.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attr.role\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        attr.role:     \n\n                    \n                \n                    \n                        \n                            Default value : 'option'\n                        \n                    \n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-unit-option.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attr.tabindex\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        attr.tabindex:     \n\n                    \n                \n                    \n                        \n                            Default value : -1\n                        \n                    \n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-unit-option.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class:     \n\n                    \n                \n                    \n                        \n                            Default value : 'mat-time-unit-option'\n                        \n                    \n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-unit-option.component.ts:45\n                            \n                        \n\n\n            \n        \n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            click\n                            \n                            \n                        \n                    \n                \n                \n                    \nclick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-unit-option.component.ts:106\n                            \n                        \n\n\n                \n                    \n                            Handle click on the option. \n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _getHostElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n_getHostElement()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-unit-option.component.ts:95\n                            \n                        \n\n\n                \n                    \n                            Gets the host DOM element. \n\n\n                            \n                                Returns :     HTMLElement\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _isRippleDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n_isRippleDisabled()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-unit-option.component.ts:100\n                            \n                        \n\n\n                \n                    \n                            Whether ripples for the option are disabled. \n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLabel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-unit-option.component.ts:90\n                            \n                        \n\n\n                \n                    \n                            Gets the label to be used when determining whether the option should be focused. \n\n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-unit-option.component.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _text\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _text:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('text')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-unit-option.component.ts:42\n                            \n                        \n\n                \n                    \n                        The element containing the display text of the option. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timeUnitSelect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timeUnitSelect:     MatTimeUnitSelectComponent\n\n                    \n                \n                    \n                        \n                            Type :     MatTimeUnitSelectComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-unit-option.component.ts:81\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n\n\n                \n                    \n                        setselected(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/time-select/src/lib/time-unit-option.component.ts:55\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n\n\n                \n                    \n                        setdisabled(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/time-select/src/lib/time-unit-option.component.ts:67\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  forwardRef,\n  HostBinding,\n  HostListener,\n  Inject,\n  Input,\n  OnInit,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {CanDisableRippleCtor, mixinDisableRipple} from '@angular/material';\nimport {MatTimeUnitSelectComponent} from './time-unit-select.component';\n\nexport class MatTimeUnitOptionBase { }\nexport const _MatTimeUnitOptionMixinBase: CanDisableRippleCtor & typeof MatTimeUnitOptionBase =\n  mixinDisableRipple(MatTimeUnitOptionBase);\n\n/** Single time option inside a `` element */\n@Component({\n  selector: 'mat-time-unit-option',\n  templateUrl: './time-unit-option.component.html',\n  styleUrls: ['./time-unit-option.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatTimeUnitOptionComponent extends _MatTimeUnitOptionMixinBase implements OnInit {\n\n  private _disabled = false;\n  private _selected = false;\n\n  /** The value of the option. */\n  @Input() value: number;\n  /** Whether ripples for the option are disabled. */\n  @Input() disableRipple: boolean;\n\n  /** The element containing the display text of the option. */\n  @ViewChild('text') _text: ElementRef;\n\n  /** @docs-private */\n  @HostBinding('class') readonly class = 'mat-time-unit-option';\n  /** @docs-private */\n  @HostBinding('attr.role') readonly role = 'option';\n  /** @docs-private */\n  @HostBinding('attr.tabindex') readonly tabindex = -1;\n\n  /** Whether or not the option is currently selected. */\n  @Input()\n  @HostBinding('class.mat-time-unit-option-selected')\n  get selected(): boolean { return this._selected; }\n  set selected(value: boolean) {\n    const selected = coerceBooleanProperty(value);\n    if (this._selected !== selected) {\n      this._selected = selected;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /** Whether the option is disabled. */\n  @Input()\n  @HostBinding('class.mat-time-unit-option-disabled')\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value: boolean) {\n    const disabled = coerceBooleanProperty(value);\n    if (this._disabled !== disabled) {\n      this._disabled = disabled;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /** @docs-private */\n  @HostBinding('attr.aria-disabled')\n  get ariaDisabled(): string { return this.disabled.toString(); }\n\n  constructor(private _elementRef: ElementRef,\n              private _changeDetectorRef: ChangeDetectorRef,\n              @Inject(forwardRef(() => MatTimeUnitSelectComponent)) public timeUnitSelect: MatTimeUnitSelectComponent) {\n    super();\n  }\n\n  ngOnInit() {\n    this.timeUnitSelect.valueChange.subscribe(value => this.selected = this.value === value);\n  }\n\n  /** Gets the label to be used when determining whether the option should be focused. */\n  getLabel(): string {\n    return this._text ? (this._text.nativeElement.textContent || '').trim() : '';\n  }\n\n  /** Gets the host DOM element. */\n  _getHostElement(): HTMLElement {\n    return this._elementRef.nativeElement;\n  }\n\n  /** Whether ripples for the option are disabled. */\n  _isRippleDisabled(): boolean {\n    return this.disabled || this.disableRipple;\n  }\n\n  /** Handle click on the option. */\n  @HostListener('click')\n  _onClick() {\n    if (!this.disabled) {\n      this.timeUnitSelect.move(this.value - this.timeUnitSelect.value);\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./time-unit-option.component.scss\n                \n                .mat-time-unit-option {\n  // Prevents the wrapper `mat-time-unit-option-content` from collapsing due to it\n  // being `inline` by default.\n  display: block;\n  height: 40px;\n  -webkit-tap-highlight-color: transparent;\n\n  // Override the user agent styling if the time option is a button.\n  width: 100%;\n  padding: 0;\n  transform: scale(1, 1);\n  transition: transform 0.5s;\n\n  .mat-time-unit-option-content {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    box-sizing: border-box;\n    padding: 0 16px;\n    position: relative;\n    height: inherit;\n  }\n\n  .mat-time-unit-option-ripple {\n    //@include mat-fill;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    position: absolute;\n\n    // Disable pointer events for the ripple container because the container will overlay the\n    // user content and we don't want to disable mouse events on the user content.\n    // Pointer events can be safely disabled because the ripple trigger element is the host element.\n    pointer-events: none;\n  }\n\n  .mat-time-unit-option-text {\n    //@include mat-line-wrapper-base();\n    //@include mat-normalize-text();\n    & > * {\n      margin: 0;\n      padding: 0;\n      font-weight: normal;\n      font-size: inherit;\n    }\n\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    box-sizing: border-box;\n    overflow: hidden;\n\n    &:empty {\n      display: none;\n    }\n\n    padding: 0;\n    text-align: center;\n  }\n\n  &:not(.mat-time-unit-option-disabled) {\n    cursor: pointer;\n    outline: none;\n  }\n\n}\n\n.mat-time-unit-option.mat-time-unit-option-selected:not(.mat-time-unit-option-disabled), .mat-time-unit-separator {\n  transform: scale(1.5, 1.5);\n}\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'MatTimeSelectComponent', 'selector': 'mat-time-select'},{'name': 'MatTimeSelectContentComponent', 'selector': 'mat-time-select-content'},{'name': 'MatTimeSelectToggleComponent', 'selector': 'mat-time-select-toggle'},{'name': 'MatTimeUnitOptionComponent', 'selector': 'mat-time-unit-option'},{'name': 'MatTimeUnitSelectComponent', 'selector': 'mat-time-unit-select'}];\n    var DIRECTIVES = [{'name': 'MatTimeSelectInputDirective', 'selector': 'input[matTimeSelect]'},{'name': 'MatTimeSelectToggleIconDirective', 'selector': '[matTimeSelectToggleIcon]'}];\n    var ACTUAL_COMPONENT = {'name': 'MatTimeUnitOptionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatTimeUnitSelectComponent.html":{"url":"components/MatTimeUnitSelectComponent.html","title":"component - MatTimeUnitSelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MatTimeUnitSelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n\n\n\n    \n    File\n\n\n    projects/time-select/src/lib/time-unit-select.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to select a value of a unit of time. \n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                matTimeSelect\n            \n\n\n\n\n\n\n\n            \n                selector\n                mat-time-unit-select\n            \n\n            \n                styleUrls\n                ./time-unit-select.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./time-unit-select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                            \n                                panel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNext\n                            \n                            \n                                getPrev\n                            \n                            \n                                isValid\n                            \n                            \n                                move\n                            \n                            \n                                next\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                prev\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                max\n                            \n                            \n                                min\n                            \n                            \n                                unit\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_changeDetectorRef: ChangeDetectorRef, _timeAdapter: TimeAdapter, _timeFormats: MatTimeFormats)\n                    \n                \n                        \n                            \n                                Defined in projects/time-select/src/lib/time-unit-select.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _changeDetectorRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _timeAdapter\n                                                  \n                                                        \n                                                                    TimeAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _timeFormats\n                                                  \n                                                        \n                                                                    MatTimeFormats\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        max\n                    \n                    \n                        The maximum selectable value. \n\n                            \n                            Type :    number | null\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-unit-select.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                    \n                        The minimum selectable value. \n\n                            \n                            Type :    number | null\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-unit-select.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        unit\n                    \n                    \n                        The unit of time of the time select. \n\n                            \n                            Type :    unitOfTime.All\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-unit-select.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                        The currently selected value. \n\n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-unit-select.component.ts:33\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                    \n                        Emits when selected value has been changed. Output to enable support for two-way binding on [(value)]. \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-unit-select.component.ts:45\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNext\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNext()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-unit-select.component.ts:137\n                            \n                        \n\n\n                \n                    \n                            Gets the next option value.\n\n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPrev\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPrev()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-unit-select.component.ts:130\n                            \n                        \n\n\n                \n                    \n                            Gets the previous option value.\n\n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isValid\n                            \n                            \n                        \n                    \n                \n                \n                    \nisValid(value: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-unit-select.component.ts:145\n                            \n                        \n\n\n                \n                    \n                            Whether the given value is valid.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The value to check.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            move\n                            \n                            \n                        \n                    \n                \n                \n                    \nmove(step: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-unit-select.component.ts:98\n                            \n                        \n\n\n                \n                    \n                            Select the option moving by the given amount of step.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        step\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The amount of step to move.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            next\n                            \n                            \n                        \n                    \n                \n                \n                    \nnext()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-unit-select.component.ts:90\n                            \n                        \n\n\n                \n                    \n                            Select the next option. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-unit-select.component.ts:75\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-unit-select.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prev\n                            \n                            \n                        \n                    \n                \n                \n                    \nprev()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-unit-select.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Select the previous option. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     literal type[]\n\n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-unit-select.component.ts:42\n                            \n                        \n\n                \n                    \n                        The list of all values of the time select. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            panel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        panel:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('panel')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-unit-select.component.ts:48\n                            \n                        \n\n                \n                    \n                        The panel element containing all time select options. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {DurationInputArg1, DurationInputArg2, unitOfTime} from 'moment';\nimport {TimeAdapter} from './time-adapter.service';\nimport {MAT_TIME_FORMATS, MatTimeFormats} from './time-formats';\n\n/** Component used to select a value of a unit of time. */\n@Component({\n  selector: 'mat-time-unit-select',\n  templateUrl: './time-unit-select.component.html',\n  styleUrls: ['./time-unit-select.component.scss'],\n  exportAs: 'matTimeSelect',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatTimeUnitSelectComponent implements AfterViewInit, OnInit {\n\n  private _originTop: number;\n\n  /** The currently selected value. */\n  @Input() value: number;\n  /** The unit of time of the time select. */\n  @Input() unit: unitOfTime.All;\n  /** The minimum selectable value. */\n  @Input() min: number | null;\n  /** The maximum selectable value. */\n  @Input() max: number | null;\n\n  /** The list of all values of the time select. */\n  options: {value: number; label: string}[] = [];\n\n  /** Emits when selected value has been changed. Output to enable support for two-way binding on `[(value)]`. */\n  @Output() valueChange: EventEmitter = new EventEmitter();\n\n  /** The panel element containing all time select options. */\n  @ViewChild('panel') panel: ElementRef;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              private _timeAdapter: TimeAdapter,\n              @Inject(MAT_TIME_FORMATS) private _timeFormats: MatTimeFormats) { }\n\n  ngOnInit() {\n    const unit = this.unit;\n    const time = this._timeAdapter.createTime();\n    const moment = this._timeAdapter.toMoment(time);\n    const start = moment.clone().startOf('day');\n    const end = moment.clone().endOf('day');\n    const min = start.get(unit);\n    const max = end.get(unit);\n    const localeData = moment.localeData();\n    const displayFormat = localeData.longDateFormat('LTS');\n    const unitFormat = unit === 'hour' ?\n      displayFormat.match(/hh?|HH?/g)[0] : unit === 'minute' ?\n        displayFormat.match(/mm?/g)[0] : displayFormat.match(/ss?/g)[0];\n    moment.set(unit, this.value);\n    moment.subtract(1 as DurationInputArg1, unit as DurationInputArg2);\n    for (let value = min; value  {\n      element.style.removeProperty('transition');\n    });\n    setTimeout(() => this.move(this.options.length / 2));\n  }\n\n  /** Select the previous option. */\n  prev() {\n    this.move(-1);\n  }\n\n  /** Select the next option. */\n  next() {\n    this.move(+1);\n  }\n\n  /**\n   * Select the option moving by the given amount of step.\n   * @param step The amount of step to move.\n   */\n  move(step: number) {\n    const element = this.panel.nativeElement;\n    const option = element.querySelector('mat-time-unit-option');\n    const optionHeight = parseFloat(getComputedStyle(option).height);\n    const currentTop = parseFloat(getComputedStyle(element).top);\n    const targetTop = currentTop + (step * optionHeight);\n    const y = this._originTop - targetTop;\n\n    element.style.top = `${targetTop}px`;\n\n    if (step  step; i--) {\n        this.options.unshift(this.options.pop());\n      }\n    } else if (step > 0) {\n      // Move first option to the bottom\n      for (let i = 0; i = this.min) && (this.max === null || value \n    \n\n    \n        \n  \n    keyboard_arrow_up\n  \n  \n    \n       {{ option.label }} \n    \n  \n  \n    keyboard_arrow_down\n  \n\n\n    \n\n    \n                \n                    ./time-unit-select.component.scss\n                \n                mat-time-unit-select {\n  display: block;\n  height: 100%;\n\n  .mat-time-unit-select-carousel {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    height: 100%;\n  }\n\n  .mat-time-unit-select-mask {\n    flex: auto;\n    max-height: 120px;\n    width: 100%;\n    overflow: hidden;\n  }\n\n}\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      keyboard_arrow_up               {{ option.label }}             keyboard_arrow_down  '\n    var COMPONENTS = [{'name': 'MatTimeSelectComponent', 'selector': 'mat-time-select'},{'name': 'MatTimeSelectContentComponent', 'selector': 'mat-time-select-content'},{'name': 'MatTimeSelectToggleComponent', 'selector': 'mat-time-select-toggle'},{'name': 'MatTimeUnitOptionComponent', 'selector': 'mat-time-unit-option'},{'name': 'MatTimeUnitSelectComponent', 'selector': 'mat-time-unit-select'}];\n    var DIRECTIVES = [{'name': 'MatTimeSelectInputDirective', 'selector': 'input[matTimeSelect]'},{'name': 'MatTimeSelectToggleIconDirective', 'selector': '[matTimeSelectToggleIcon]'}];\n    var ACTUAL_COMPONENT = {'name': 'MatTimeUnitSelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeAdapter.html":{"url":"classes/TimeAdapter.html","title":"class - TimeAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/time-select/src/lib/time-adapter.service.ts\n        \n\n            \n                Description\n            \n            \n                Adapts date object to be usable as a date time by cdk-based components that work with dates. \n\n            \n\n            \n                Extends\n            \n            \n                    DateAdapter\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clampTime\n                            \n                            \n                                compareTime\n                            \n                            \n                                    Abstract\n                                createTime\n                            \n                            \n                                    Abstract\n                                getHour\n                            \n                            \n                                    Abstract\n                                getMinute\n                            \n                            \n                                    Abstract\n                                getSecond\n                            \n                            \n                                    Abstract\n                                now\n                            \n                            \n                                sameTime\n                            \n                            \n                                    Abstract\n                                toMoment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clampTime\n                            \n                            \n                        \n                    \n                \n                \n                    \nclampTime(date: D, min?: D | null, max?: D | null)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-adapter.service.ts:91\n                            \n                        \n\n\n                \n                    \n                            Clamp the given date between min and max date times.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    D\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The date to clamp.\n\n                                                        \n                                                \n                                                \n                                                        min\n                                                        \n                                                                    D | null\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                The minimum value to allow. If null or omitted no min is enforced.\n\n                                                        \n                                                \n                                                \n                                                        max\n                                                        \n                                                                    D | null\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                The maximum value to allow. If null or omitted no max is enforced.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     D\n\n                            \n                                \n                                    min if date is less than min, max if date is greater than max,\notherwise date.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            compareTime\n                            \n                            \n                        \n                    \n                \n                \n                    \ncompareTime(first: D, second: D)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-adapter.service.ts:57\n                            \n                        \n\n\n                \n                    \n                            Compares two date times.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        first\n                                                        \n                                                                    D\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The first date to compare.\n\n                                                        \n                                                \n                                                \n                                                        second\n                                                        \n                                                                    D\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The second date to compare.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    0 if the date times are equal, a number less than 0 if the first date time is earlier,\na number greater than 0 if the first date time is later.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            createTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createTime(hour?: number, minute?: number, second?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-adapter.service.ts:36\n                            \n                        \n\n\n                \n                    \n                            Create a date with the given hour, minute and second. Does not allow over/under-flow of the\nhour, minute and second.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        hour\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                The hour of the date. Must be an integer 0 - 23.\n\n                                                        \n                                                \n                                                \n                                                        minute\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                The minute of the date. Must be an integer 0 - 59.\n\n                                                        \n                                                \n                                                \n                                                        second\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                The second of the date. Must be an integer 0 - 59.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     D\n\n                            \n                                \n                                    The new date.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            getHour\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getHour(date: D)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-adapter.service.ts:12\n                            \n                        \n\n\n                \n                    \n                            Gets the hour component of the given date.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    D\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The date to extract the hour from.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    The hour component (0-indexed, 0 = midnight).\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            getMinute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getMinute(date: D)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-adapter.service.ts:19\n                            \n                        \n\n\n                \n                    \n                            Gets the minute component of the given date.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    D\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The date to extract the minute from.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    The minute component (0-indexed, 0 = start of hour).\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            getSecond\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getSecond(date: D)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-adapter.service.ts:26\n                            \n                        \n\n\n                \n                    \n                            Gets the second component of the given date.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    D\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The date to extract the second from.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    The second component (0-indexed, 0 = start of minute).\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            now\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        now()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-adapter.service.ts:42\n                            \n                        \n\n\n                \n                    \n                            Gets the current date.\n\n\n                            \n                            \n                            \n                                Returns :     D\n\n                            \n                                \n                                    The current date.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sameTime\n                            \n                            \n                        \n                    \n                \n                \n                    \nsameTime(first: D | null, second: D | null)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-adapter.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            Checks if two date times are equal.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        first\n                                                        \n                                                                    D | null\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The first date to check.\n\n                                                        \n                                                \n                                                \n                                                        second\n                                                        \n                                                                    D | null\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The second date to check.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether the two date times are equal.\nNull dates are considered equal to other null dates.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            toMoment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toMoment(date: D)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/time-select/src/lib/time-adapter.service.ts:48\n                            \n                        \n\n\n                \n                    \n                            Convert the given date to a Moment object.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    D\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the date object to convert.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Moment\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {DateAdapter} from '@angular/material';\nimport {Moment} from 'moment';\n\n/** Adapts date object to be usable as a date time by cdk-based components that work with dates. */\nexport abstract class TimeAdapter extends DateAdapter {\n\n  /**\n   * Gets the hour component of the given date.\n   * @param date The date to extract the hour from.\n   * @returns The hour component (0-indexed, 0 = midnight).\n   */\n  abstract getHour(date: D): number;\n\n  /**\n   * Gets the minute component of the given date.\n   * @param date The date to extract the minute from.\n   * @returns The minute component (0-indexed, 0 = start of hour).\n   */\n  abstract getMinute(date: D): number;\n\n  /**\n   * Gets the second component of the given date.\n   * @param date The date to extract the second from.\n   * @returns The second component (0-indexed, 0 = start of minute).\n   */\n  abstract getSecond(date: D): number;\n\n  /**\n   * Create a date with the given hour, minute and second. Does not allow over/under-flow of the\n   * hour, minute and second.\n   * @param hour The hour of the date. Must be an integer 0 - 23.\n   * @param minute The minute of the date. Must be an integer 0 - 59.\n   * @param second The second of the date. Must be an integer 0 - 59.\n   * @returns The new date.\n   */\n  abstract createTime(hour?: number, minute?: number, second?: number): D;\n\n  /**\n   * Gets the current date.\n   * @returns The current date.\n   */\n  abstract now(): D;\n\n  /**\n   * Convert the given date to a Moment object.\n   * @param date the date object to convert.\n   */\n  abstract toMoment(date: D): Moment;\n\n  /**\n   * Compares two date times.\n   * @param first The first date to compare.\n   * @param second The second date to compare.\n   * @returns 0 if the date times are equal, a number less than 0 if the first date time is earlier,\n   *     a number greater than 0 if the first date time is later.\n   */\n  compareTime(first: D, second: D): number {\n    return this.compareDate(first, second) ||\n      this.getHour(first) - this.getHour(second) ||\n      this.getMinute(first) - this.getMinute(second) ||\n      this.getSecond(first) - this.getSecond(second);\n  }\n\n  /**\n   * Checks if two date times are equal.\n   * @param first The first date to check.\n   * @param second The second date to check.\n   * @returns Whether the two date times are equal.\n   *     Null dates are considered equal to other null dates.\n   */\n  sameTime(first: D | null, second: D | null): boolean {\n    if (first && second) {\n      const firstValid = this.isValid(first);\n      const secondValid = this.isValid(second);\n      if (firstValid && secondValid) {\n        return !this.compareTime(first, second);\n      }\n      return firstValid === secondValid;\n    }\n    return first === second;\n  }\n\n  /**\n   * Clamp the given date between min and max date times.\n   * @param date The date to clamp.\n   * @param min The minimum value to allow. If null or omitted no min is enforced.\n   * @param max The maximum value to allow. If null or omitted no max is enforced.\n   * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n   *     otherwise `date`.\n   */\n  clampTime(date: D, min?: D | null, max?: D | null): D {\n    if (min && this.compareTime(date, min)  0) {\n      return max;\n    }\n    return date;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.2.3\n        \n            @angular/cdk : ~7.3.0\n        \n            @angular/common : ~7.2.3\n        \n            @angular/compiler : ~7.2.3\n        \n            @angular/core : ~7.2.3\n        \n            @angular/forms : ~7.2.3\n        \n            @angular/material : ^7.3.0\n        \n            @angular/platform-browser : ~7.2.3\n        \n            @angular/platform-browser-dynamic : ~7.2.3\n        \n            @angular/router : ~7.2.3\n        \n            core-js : ^2.5.4\n        \n            hammerjs : ^2.0.8\n        \n            moment : ^2.24.0\n        \n            rxjs : ~6.4.0\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createMissingTimeImplError   (projects/.../time-select-errors.ts)\n                        \n                        \n                            MAT_TIME_SELECT_SCROLL_STRATEGY_FACTORY   (projects/.../time-select.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/time-select/src/lib/time-select-errors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createMissingTimeImplError\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateMissingTimeImplError(provider)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        provider\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    projects/time-select/src/lib/time-select.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MAT_TIME_SELECT_SCROLL_STRATEGY_FACTORY\n                            \n                            \n                        \n                    \n                \n                \n                    \nMAT_TIME_SELECT_SCROLL_STRATEGY_FACTORY(overlay)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        overlay\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAngular Material Time Select\n\n\n\nTable of contents\n\nAbout\nInstallation\nUsage\nLicense\n\nAbout\nThe time select allows users to enter a time either through text input, or by choosing a time from\nthe select panel. It is made up of several components and directives that work together.\n\n\nInstallation\n\nCheckout the Angular Material Getting Started Guide\nif not installed.\n\nInstall Angular Material Time Select. Also install Moment.js library if not done yet.\n\n\nnpm install --save moment ngx-material-time-select\nImport the time select module:\n\n...\nimport {MatTimeSelectModule} from 'ngx-material-time-select';\n\n@NgModule({\n  ...\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatTimeSelectModule,\n    MatNativeTimeModule             // Or MatMomentTimeModule\n  ]\n  ...\n})\nexport class MyModule { }\nInclude a prebuilt theme in your style.css:\n\n@import \"~ngx-material-time-select/prebuilt-themes/indigo-pink.css\";Usage\nConnecting a time select to an input\nA time-select is composed of a text input and a select panel pop-up, connected via the matTimeSelect\nproperty on the text input.\n\nAn optional time select toggle button is available. A toggle can be added to the example above:\n\n\nThis works exactly the same with an input that is part of an  and the toggle\ncan easily be used as a prefix or suffix on the material input:\n\n  \n  \n  \nIf you want to customize the icon that is rendered inside the mat-time-select-toggle, you can do so\nby using the matTimeSelectToggleIcon directive:\n\n\nSetting the selected time\nThe type of values that the time select expects depends on the type of TimeAdapter provided in your\napplication. When using the default TimeAdapter, the values will all be Moment.js instances.\nDepending on the TimeAdapter being used, the time select may automatically deserialize certain time\nformats for you as well. For example, the TimeAdapter allow\nISO 8601 strings to be passed to the time select and\nautomatically converted to the proper object type. This can be convenient when binding data directly\nfrom your backend to the time select. However, the time select will not accept time strings formatted\nin user format such as \"1:25 PM\" as this is ambiguous and will mean different things depending on\nthe locale of the browser running the code.\nAs with other types of , the time select works with @angular/forms directives such as\nformGroup, formControl, ngModel, etc.\n\n\nChanging the time select colors\nThe time select popup will automatically inherit the color palette (primary, accent, or warn)\nfrom the mat-form-field it is attached to. If you would like to specify a different palette for\nthe popup you can do so by setting the color property on mat-time-select.\n\n\nTime validation\nThere are two properties that add time validation to the time select input. The min and max\nproperties.\n\n\nEach validation property has a different error that can be checked:\n\nA value that violates the min property will have a matTimeSelectMin error.\nA value that violates the max property will have a matTimeSelectMax error.\n\nInput and change events\nThe input's native (input) and (change) events will only trigger due to user interaction with\nthe input element; they will not fire when the user selects a time from the select panel.\nTherefore, the time select input also has support for (timeInput) and (timeChange) events. These\ntrigger when the user interacts with either the input or the popup.\nThe (timeInput) event will fire whenever the value changes due to the user typing or selecting a\ntime from the select panel. The (timeChange) event will fire whenever the user finishes typing input\n(on  blur), or when the user chooses a time from the select panel.\n\n\nDisabling parts of the time select\nAs with any standard , it is possible to disable the time select input by adding the\ndisabled property. By default, the  and  will inherit\ntheir disabled state from the , but this can be overridden by setting the disabled\nproperty on the time select or toggle elements. This can be useful if you want to disable text input\nbut allow selection via the select panel or vice-versa.\n\n\nManually opening and closing the select panel\nThe select panel can be programmatically controlled using the open and close methods on the\n. It also has an opened property that reflects the status of the popup.\n\n\nInternationalization\nInternationalization of the time select is configured via three aspects:\n\nThe time locale.\nThe date implementation that the time select accepts.\nThe display and parse formats used by the time select.\nThe message strings used in the time select's UI.\n\nSetting the locale code\nThe time select use the same injection token of the Datepicker from @angular/material.\nSee documentation.\nIt's also possible to set the locale at runtime using the setLocale method of the TimeAdapter.\n\n\nChoosing a date implementation and date format settings\nThe time select was built to be date implementation agnostic. This means that it can be made to work\nwith a variety of different date implementations. However it also means that developers need to make\nsure to provide the appropriate pieces for the time select to work with their chosen implementation.\nThe easiest way to ensure this is just to import one of the pre-made modules:\n\n\n\nModule\nDate type\nSupported locales\nDependencies\nImport from\n\n\n\n\nMatNativeTimeModule\nDate\nen-US\nNone\nngx-material-time-select\n\n\nMatMomentTimeModule\nMoment\nSee project\nMoment.js\nngx-material-time-select\n\n\n\nPlease note: MatNativeTimeModule is based off of the functionality available in JavaScript's\nnative Date object, and is thus not suitable for many locales. One of the biggest shortcomings of\nthe native Date object is the inability to set the parse format. We highly recommend using the\nMomentTimeAdapter or a custom TimeAdapter that works with the formatting/parsing library of your\nchoice.\nThese modules include providers for TimeAdapter and MAT_TIME_FORMATS\n@NgModule({\n  imports: [MatTimeSelectModule, MatNativeTimeModule],\n})\nexport class MyApp {}Because TimeAdapter is a generic class, MatTimeSelectComponent and MatTimeSelectInputDirective\nalso need to be made generic. When working with these classes (for example as a ViewChild) you\nshould include the appropriate generic type that corresponds to the TimeAdapter implementation\nyou are using. For example:\n@Component({...})\nexport class MyComponent {\n  @ViewChild(MatTimeSelectComponent) timeSelect: MatTimeSelectComponent;\n}\n\nIt is also possible to create your own TimeAdapter that works with any date format your app\nrequires. This is accomplished by subclassing TimeAdapter and providing your subclass as the\nTimeAdapter implementation. You will also want to make sure that the MAT_TIME_FORMATS provided\nin your app are formats that can be understood by your date implementation. See\nCustomizing the parse and display formatsfor more\ninformation about MAT_TIME_FORMATS.\n@NgModule({\n  imports: [MatTimeSelectModule],\n  providers: [\n    {provide: TimeAdapter, useClass: MyTimeAdapter},\n    {provide: MAT_TIME_FORMATS, useValue: MY_DATE_FORMATS},\n  ],\n})\nexport class MyApp {}Customizing the parse and display formats\nThe MAT_TIME_FORMATS object is just a collection of formats that the time select uses when parsing\nand displaying times. These formats are passed through to the TimeAdapter so you will want to make\nsure that the format objects you're using are compatible with the TimeAdapter used in your app.\n@NgModule({\n  imports: [MatTimeSelectModule],\n  providers: [\n    {provide: MAT_TIME_FORMATS, useValue: MY_TIME_FORMATS},\n  ],\n})\nexport class MyApp {}\n\nLocalizing labels and messages\nThe various text strings used by the time select are provided through MatTimeSelectIntl.\nLocalization of these messages can be done by providing a subclass with translated values in your\napplication root module.\n@NgModule({\n  imports: [MatTimeSelectModule],\n  providers: [\n    {provide: MatTimeSelectIntl, useClass: MyIntl},\n  ],\n})\nexport class MyApp {}Accessibility\nThe MatTimeSelectInput and MatTimeSelectToggle directives add the aria-haspopup attribute to\nthe native input and toggle button elements respectively, and they trigger a select panel dialog with\nrole=\"dialog\".\nMatTimeSelectIntl includes strings that are used for aria-labels. The time select input\nshould have a placeholder or be given a meaningful label via aria-label, aria-labelledby or\nMatTimeSelectIntl.\nKeyboard shortcuts\nThe time select supports the following keyboard shortcuts:\n\n\n\nShortcut\nAction\n\n\n\n\nALT + DOWN_ARROW\nOpen the select panel pop-up\n\n\nESCAPE\nClose the select panel pop-up\n\n\n\nTroubleshooting\nError: MatTimeSelectComponent: No provider found for TimeAdapter/MAT_TIME_FORMATS\nThis error is thrown if you have not provided all of the injectables the time select needs to work.\nThe easiest way to resolve this is to import the MatNativeTimeModule or MatMomentTimeModule in\nyour application's root module. See\nChoosing a date implementation) for\nmore information.\nError: A MatTimeSelectComponent can only be associated with a single input\nThis error is thrown if more than one  tries to claim ownership over the same\n (via the matTimeSelect attribute on the input). A time select can only be\nassociated with a single input.\nError: Attempted to open a MatTimeSelectComponent with no associated input.\nThis error occurs if your  is not associated with any . To associate an\ninput with your time select, create a template reference for the time select and assign it to the\nmatTimeSelect attribute on the input:\n\nLicense\nCopyright (c) 2019 Yannick Ebongue\nReleased under the MIT License (see LICENSE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 Yannick Ebongue\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        MatMomentTimeModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MatNativeTimeModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MatTimeSelectModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _MatTimeSelectContentMixinBase   (projects/.../time-select.component.ts)\n                        \n                        \n                            _MatTimeUnitOptionMixinBase   (projects/.../time-unit-option.component.ts)\n                        \n                        \n                            MAT_MOMENT_TIME_FORMATS   (projects/.../moment-time-formats.ts)\n                        \n                        \n                            MAT_NATIVE_TIME_FORMATS   (projects/.../native-time-formats.ts)\n                        \n                        \n                            MAT_TIME_FORMATS   (projects/.../time-formats.ts)\n                        \n                        \n                            MAT_TIME_SELECT_DATA   (projects/.../time-select.component.ts)\n                        \n                        \n                            MAT_TIME_SELECT_SCROLL_STRATEGY   (projects/.../time-select.component.ts)\n                        \n                        \n                            MAT_TIME_SELECT_SCROLL_STRATEGY_FACTORY_PROVIDER   (projects/.../time-select.component.ts)\n                        \n                        \n                            moment   (projects/.../native-time-adapter.service.ts)\n                        \n                        \n                            moment   (projects/.../moment-time-adapter.service.ts)\n                        \n                        \n                            timeSelectUid   (projects/.../time-select.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/time-select/src/lib/time-select.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            _MatTimeSelectContentMixinBase\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _MatTimeSelectContentMixinBase:     \n\n                    \n                \n                    \n                        \n                            Default value : mixinColor(MatTimeSelectContentBase)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MAT_TIME_SELECT_DATA\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MAT_TIME_SELECT_DATA:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('mat-time-select-data')\n                        \n                    \n\n                \n                    \n                        Injection token used to initialize the time select data. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MAT_TIME_SELECT_SCROLL_STRATEGY\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MAT_TIME_SELECT_SCROLL_STRATEGY:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken ScrollStrategy>('mat-time-select-scroll-strategy')\n                        \n                    \n\n                \n                    \n                        Injection token that determines the scroll handling while the time select is opened. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MAT_TIME_SELECT_SCROLL_STRATEGY_FACTORY_PROVIDER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MAT_TIME_SELECT_SCROLL_STRATEGY_FACTORY_PROVIDER:     Provider\n\n                    \n                \n                    \n                        \n                            Type :     Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: MAT_TIME_SELECT_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_TIME_SELECT_SCROLL_STRATEGY_FACTORY\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeSelectUid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timeSelectUid:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n                \n                    \n                        Used to generate a unique ID for each time select instance. \n\n                    \n                \n\n            \n        \n\n    projects/time-select/src/lib/time-unit-option.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            _MatTimeUnitOptionMixinBase\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _MatTimeUnitOptionMixinBase:     \n\n                    \n                \n                    \n                        \n                            Default value : mixinDisableRipple(MatTimeUnitOptionBase)\n                        \n                    \n\n\n            \n        \n\n    projects/time-select/src/lib/moment-time-formats.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MAT_MOMENT_TIME_FORMATS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MAT_MOMENT_TIME_FORMATS:     MatTimeFormats\n\n                    \n                \n                    \n                        \n                            Type :     MatTimeFormats\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  parse: {\n    timeInput: 'LT'\n  },\n  display: {\n    timeInput: 'LT',\n    timeA11yLabel: 'LT'\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    projects/time-select/src/lib/native-time-formats.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MAT_NATIVE_TIME_FORMATS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MAT_NATIVE_TIME_FORMATS:     MatTimeFormats\n\n                    \n                \n                    \n                        \n                            Type :     MatTimeFormats\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  parse: {\n    timeInput: null\n  },\n  display: {\n    timeInput: {hour: 'numeric', minute: 'numeric'},\n    timeA11yLabel: {hour: 'numeric', minute: '2-digit'}\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    projects/time-select/src/lib/time-formats.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MAT_TIME_FORMATS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MAT_TIME_FORMATS:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('mat-time-formats')\n                        \n                    \n\n\n            \n        \n\n    projects/time-select/src/lib/native-time-adapter.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            moment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        moment:     \n\n                    \n                \n                    \n                        \n                            Default value : _moment\n                        \n                    \n\n\n            \n        \n\n    projects/time-select/src/lib/moment-time-adapter.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            moment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        moment:     \n\n                    \n                \n                    \n                        \n                            Default value : _moment\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
